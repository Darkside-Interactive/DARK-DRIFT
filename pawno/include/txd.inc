#if defined _txd_included
#endinput
#endif
#define _txd_included
#pragma library tdx
#include a_samp
static gTeam[MAX_PLAYERS];

#define MAX_STRING 255
#define CHECKPOINT_NONE 0
#define CHECKPOINT_HOME 12
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_RED 0xAA3333AA
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_DBLUE 0x2641FEAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0xFFA500AA
#define COLOR_OOC 0xE0FFFFAA
#define TEAM_CYAN 1
#define TEAM_BLUE 2
#define TEAM_GREEN 3
#define TEAM_ORANGE 4
#define TEAM_COR 5
#define TEAM_BAR 6
#define TEAM_TAT 7
#define TEAM_CUN 8
#define TEAM_STR 9
#define TEAM_HIT 10
#define TEAM_ADMIN 11
#define TEAM_FLAMING 12
#define TEAM_RUSSIAN 13
#define TEAM_GROOVE 14
#define TEAM_CORONAS 15
#define TEAM_BALLAS 16
#define TEAM_RIFA 17
#define TEAM_VAGOS 18
#define TEAM_KOLHOZ 21
#define OBJECTIVE_COLOR 0x64000064
#define TEAM_GREEN_COLOR 0xFFFFFFAA
#define TEAM_JOB_COLOR 0xFFB6C1AA
#define TEAM_HIT_COLOR 0xFFFFFF00
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define COLOR_ADD 0x63FF60AA
#define TEAM_GROVE_COLOR 0x00D900C8
#define TEAM_VAGOS_COLOR 0xFFC801C8
#define TEAM_BALLAS_COLOR 0xD900D3C8
#define TEAM_AZTECAS_COLOR 0x01FCFFC8
#define TEAM_CYAN_COLOR 0xFF8282AA
#define TEAM_ORANGE_COLOR 0xFF830000
#define TEAM_COR_COLOR 0x39393900
#define TEAM_BAR_COLOR 0x00D90000
#define TEAM_TAT_COLOR 0xBDCB9200
#define TEAM_CUN_COLOR 0xD900D300
#define TEAM_STR_COLOR 0x01FCFF00
#define TEAM_ADMIN_COLOR 0x00808000
#define COLOR_INVIS 0xAFAFAF00
#define COLOR_SPEC 0xBFC0C200
forward UnJail(playerid);
forward Encrypt(stringa[]);
forward LoadProperty();
forward LoadBizz();
forward LoadSBizz();
forward LoadStuff();
forward SaveStuff();
forward LoadCK();
forward SaveCK();
forward LoadFamilies();
forward SaveFamilies();
forward LoadIRC();
forward SaveIRC();
forward LoadPapers();
forward SavePapers();
forward LoadBoxer();
forward SaveBoxer();
forward OnPropUpdate();
forward ExtortionBiz(bizid, money);
forward ExtortionSBiz(bizid, money);
forward JoinChannel(playerid, number, line[]);
forward JoinChannelNr(playerid, number);
forward IsAtClothShop(playerid);
forward IsAtGasStation(playerid);
forward IsAtFishPlace(playerid);
forward IsAtCookPlace(playerid);
forward IsAtBar(playerid);
forward SearchingHit(playerid);
forward DollahScoreUpdate();
forward SetPlayerSpawn(playerid);
forward SetupPlayerForClassSelection(playerid);
forward SetPlayerTeamFromClass(playerid,classid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward CrimInRange(Float:radi, playerid,copid);
forward SendEnemyMessage(color, string[]);
forward SendTeamBeepMessage(team, color, string[]);
forward ABroadCast(color,const string[],level);
forward DateProp(playerid);
forward GetClosestPlayer(p1);
forward LoadMission(playerid,name[]);
forward SaveMission(playerid,name[]);
forward PrintBizInfo(playerid,targetid);
forward PrintSBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward DelP(playerid);
forward OtherTimer();
forward RingTonerRev();
forward RingToner();
forward HireCost(carid);
forward BanLog(string[]);
forward KickLog(string[]);
forward PayLog(string[]);
forward CKLog(string[]);
forward IsATruck(carid);
forward IsAnAmbulance(vehicleid);
forward IsACopCar(vehicleid);
forward IsAPlane(carid);
forward IsABoat(carid);
forward IsACop(playerid);
forward IsAMember(playerid);
forward IsAnInstructor(playerid);
forward Spectator();
forward ConvertTicks(ticks);
forward KartingEnded();
forward StartKarting();
forward PrepareKarting();
forward PaintballEnded();
forward StartPaintball();
forward PreparePaintball();
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GameModeExitFunc();
forward SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward SetPlayerFree(playerid,declare,reason[]);
forward SetPlayerWeapons(playerid);
forward ShowStats(playerid,targetid);
forward SetPlayerToTeamColor(playerid);
forward GameModeInitExitFunc();
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin(playerid,password[]);
forward OnPlayerUpdate_GF(playerid);
forward OnPlayerRegister(playerid, password[]);
forward BroadCast(color,const string[]);
forward OOCOff(color,const string[]);
forward OOCNews(color,const string[]);
forward SendJobMessage(job, color, string[]);
forward SendFamilyMessage(family, color, string[]);
forward SendNewFamilyMessage(family, color, string[]);
forward SendIRCMessage(channel, color, string[]);
forward SendTeamMessage(team, color, string[]);
forward SendRadioMessage(member, color, string[]);
forward SendAdminMessage(color, string[]);
forward AddCar(carcoords);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward ClearCK(ck);
forward ClearFamily(family);
forward ClearMarriage(playerid);
forward ClearPaper(paper);
forward ClearCrime(playerid);
forward FishCost(playerid, fish);
forward ClearFishes(playerid);
forward ClearFishID(playerid, fish);
forward ClearCooking(playerid);
forward ClearCookingID(playerid, cook);
forward ClearGroceries(playerid);
forward Lotto(number);
forward CarCheck();
forward CarInit();
forward CarTow(carid);
forward CarRespawn(carid);
forward LockCar(carid);
forward UnLockCar(carid);
forward InitLockDoors(playerid);
forward CheckGas();
forward Check1();
forward Fillup();
forward StoppedVehicle();
forward SyncTime();
forward SyncUp();
forward SaveAccounts();
forward IsPlayerInZone(playerid, zoneid);
forward Production();
forward Checkprop();
forward PayDay();
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward PlayerPlayMusic(playerid);
forward StopMusic();
forward PlayerFixRadio(playerid);
forward PlayerFixRadio2();
forward HouseLevel(playerid);
forward CHouseLevel(houseid);
forward CustomPickups();
forward IdleKick();
forward SetCamBack(playerid);
forward FixHour(hour);
forward AddsOn();
forward GrooveClose();
forward DoorClose();
forward CopClose();
forward InstClose();
forward TaxiClose();
forward RifaClose();
forward RusClose();
forward RusClose1();
forward LcnClose();
forward CoronosClose();
forward BallasClose();
forward VagosClose();
forward YakuzaClose();
forward KolhozClose();
forward FbiClose();
forward FbiClose1();
forward BikerClose();
forward ArmyClose();
forward SDClose();
forward YakuzaClose2();
forward YakuzaClose3();
forward CarEnter(playerid,vehicleid);
//------------------------------------------------------------------------------------------------------
new Text3D:speedom[MAX_PLAYERS];
new plplpl[MAX_PLAYERS];
new gz[20];
new carya[20];
new carmer[13];
new TimerJail[MAX_PLAYERS];
new cartaxi[11];
new carlcn[9];
new Text3D:hhh[256];
new carhit[20];
new carmeh[20];
new carcop[34];
new carel[12];
new carkol[13];
new carg[15];
new carmed[5];
new carnews[9];
new carrif[18];
new carrm[6];
new carba[12];
new carlica[10];
new carv[7];
new carbb[24];
new pizza1,pizza2,pizza3,pizza4,ammmo;
new rek;
new Security = 0;
new CreatedCars[100];
new CreatedCar = 0;
new Tax = 0;
new TaxValue = 0;
new Jackpot = 0;
new StartingPaintballRound = 0;
new AnnouncedPaintballRound = 0;
new PaintballPlayers = 0;
new PaintballRound = 0;
new PaintballWinner = 999;
new PaintballWinnerKills = 0;
new StartingKartRound = 0;
new EndingKartRound = 0;
new AnnouncedKartRound = 0;
new KartingPlayers = 0;
new KartingRound = 0;
new FirstKartWinner = 999;
new SecondKartWinner = 999;
new ThirdKartWinner = 999;
new InRing = 0;
new RoundStarted = 0;
new BoxDelay = 0;
new Boxer1 = 255;
new Boxer2 = 255;
new TBoxer = 255;
new hitfound = 0;
new hitid = 999;
new Medics = 0;
new MedicCall = 999;
new Mechanics = 0;
new MechanicCall = 999;
new TaxiDrivers = 0;
new TaxiCall = 999;
new BusDrivers = 0;
new BusCall = 999;

new TransportDriver[MAX_PLAYERS];
new JobDuty[MAX_PLAYERS];
new MapIconsShown[MAX_PLAYERS];
new OnCK[MAX_PLAYERS];
new GettingCK[MAX_PLAYERS];
new PlayerPaintballing[MAX_PLAYERS];
new PlayerPaintballKills[MAX_PLAYERS];
new PlayerKarting[MAX_PLAYERS];
new PlayerInKart[MAX_PLAYERS];
new SchoolSpawn[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new PlayersChannel[MAX_PLAYERS];
new PlayerOnMission[MAX_PLAYERS];
new MissionCheckpoint[MAX_PLAYERS];
new WatchingTV[MAX_PLAYERS];
new NoFuel[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS];
new Text:Textdraw0;
new DivorceOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new PlayerStoned[MAX_PLAYERS];
new ConsumingMoney[MAX_PLAYERS];
new BringingPaper[MAX_PLAYERS]; //Paper Boys must pick up a Paper first, then use /deliver
new GotPaper[MAX_PLAYERS]; //The player has a paper so he can use /read
new WritingPaper[MAX_PLAYERS]; //Used for onplayertext so he can type in lines
new WritingPaperNumber[MAX_PLAYERS]; //To which Paper in PaperInfo will it be written
new WritingLine[MAX_PLAYERS]; //Used for onplayertext to see which line he's at
new FishCount[MAX_PLAYERS];
new SpawnChange[MAX_PLAYERS];
new TutTime[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new FindTimePoints[MAX_PLAYERS];
new FindTime[MAX_PLAYERS];
new BoxWaitTime[MAX_PLAYERS];
new TestFishes[MAX_PLAYERS];
new PaperOffer[MAX_PLAYERS];
new BoxOffer[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new CarID[MAX_PLAYERS];
new CarCalls[MAX_PLAYERS];
new GotHit[MAX_PLAYERS];
new GoChase[MAX_PLAYERS];
new GetChased[MAX_PLAYERS];
new OrderReady[MAX_PLAYERS];
new ConnectedToPC[MAX_PLAYERS];
new MedicTime[MAX_PLAYERS];
new NeedMedicTime[MAX_PLAYERS];
new MedicBill[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new PlacedNews[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new GettingJob[MAX_PLAYERS];
new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new ApprovedLawyer[MAX_PLAYERS];
new CallLawyer[MAX_PLAYERS];
new WantLawyer[MAX_PLAYERS];
new CurrentMoney[MAX_PLAYERS];
new KickPlayer[MAX_PLAYERS];
new Robbed[MAX_PLAYERS];
new RobbedTime[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new MoneyMessage[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new STDPlayer[MAX_PLAYERS];
new SexOffer[MAX_PLAYERS];
new SexPrice[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGram[MAX_PLAYERS];
new JailPrice[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];
new WantedLevel[MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gActivePlayers[MAX_PLAYERS];
new gLastCar[301];
new gOoc[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new Spectate[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new StartTime[MAX_PLAYERS];
new HireCar[MAX_PLAYERS];
new SafeTime[MAX_PLAYERS];
new HidePM[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new gDice[MAX_PLAYERS];
new gGas[MAX_PLAYERS];
new gSpeedo[MAX_PLAYERS];
new gSpentCash[MAX_PLAYERS];
new FirstSpawn[MAX_PLAYERS];
new SwitchKey[MAX_PLAYERS];
new Fixr[MAX_PLAYERS];
new Locator[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new RingTone[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new gPlayerAccount[MAX_PLAYERS];
new gPlayerMission[MAX_PLAYERS];
new OnWeapon[MAX_PLAYERS];
new gLastDriver[302];
new gCarLock[265];
new MissionPlayable = 0;
new noooc = 0;
new adds = 1;
new addtimer = 180000;
new Float:rx, Float:ry, Float:rz;
new carselect[15];
new objstore[128];
new cbjstore[128];
new motd[256];
new rccounter = 0;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new numplayers = 0;
new dollah = 1000; // Amount player recieves on spawn.
new realtime = 1;
new wtime = 15;
new levelcost = 25000;
new deathcost = 50;
new callcost = 10; //20 seconds
new realchat = 1;
new timeshift = -1;
new shifthour;
new othtimer;
new synctimer;
new newmistimer;
new unjailtimer;
new pickuptimer;
new spectatetimer;
new idletimer;
new productiontimer;
new accountstimer;
new checkgastimer;
new check1timer;
new stoppedvehtimer;
new cartimer;
new intrate = 1;
new levelexp = 4;
new idletime = 500000;
new civnokill = 0;
new suecost = 2000;
new cchargetime = 60;
new txtcost = 25;
new pickups;
new CIV[] = {7,19,20,23,73,101,122};
new STD1[] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3};
new STD2[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
new STD3[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3};
new STD4[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3};
new SELLCAR1[] = { 1000, 1124, 1245, 1349, 1475, 1574, 1636, 1762, 1895, 1946, 2000 };
new SELLCAR2[] = { 2099, 2135, 2255, 2378, 2457, 2563, 2614, 2721, 2878, 2988, 3000 };
new SELLCAR3[] = { 3058, 3175, 3212, 3377, 3454, 3555, 3678, 3751, 3865, 3964, 4000 };
new SELLCAR4[] = { 4077, 4123, 4275, 4378, 4422, 4565, 4613, 4752, 4897, 4911, 5000 };
new Float:ChangePos[MAX_PLAYERS][3];
new ChangePos2[MAX_PLAYERS][2];
new Float:PlayerPos[MAX_PLAYERS][6];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TelePos[MAX_PLAYERS][6];
new vorota[30];
new timer[30];
new pickweapon[3];

#define GasMax 101
#define RunOutTime 50000
#define RefuelWait 20000

#define CAR_AMOUNT 700 //Change to Your Vehicle Amount
new Gas[CAR_AMOUNT];

new Refueling[MAX_PLAYERS];

enum SavePlayerPosEnum
{
    Float:LastX,
    Float:LastY,
    Float:LastZ
}
new SavePlayerPos[MAX_PLAYERS][SavePlayerPosEnum];
new SpeedMode = 1;
new UpdateSeconds = 1;

public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

new Music[MAX_PLAYERS];
new Songs[7][1] = {
{1187},
{1185},
{1183},
{1097},
{1076},
{1068},
{1062}
};

new FishNamesNumber = 22;
new FishNames[22][20] = {
{"Jacket"},
{"Amberjack"},
{"Grouper"},
{"Red Snapper"},
{"Pants"},
{"Trout"},
{"Blue Marlin"},
{"Can"},
{"Mackeral"},
{"Sea Bass"},
{"Shoes"},
{"Pike"},
{"Sail Fish"},
{"Garbage"},
{"Tuna"},
{"Eel"},
{"Dolphin"},
{"Shark"},
{"Turtle"},
{"Catfish"},
{"Money Bag"},
{"Swordfish"}
};

new Float:PaintballSpawns[7][3] = {
{-394.8027,2232.2317,42.4297},
{-430.8412,2240.5371,42.9834},
{-369.2361,2248.3127,42.4844},
{-350.8910,2218.0215,42.4912},
{-384.0544,2206.2908,42.4235},
{-395.7100,2214.9480,42.4297},
{-445.3718,2222.5481,42.4297}
};

new Float:gRandomPlayerSpawns[1][3] = {
{2223.8,-1147.1,1025.7} // sp1
};

new Float:gInviteSpawns[10][4] = {
{-1976.5912,166.1818,36.9623,272.6393},
{-1975.8610,162.1945,36.9623,272.0126},
{-1975.7461,157.5404,36.9623,276.1093},
{-1975.2136,151.4920,36.9623,268.2993},
{-1974.9963,145.3430,36.9623,269.2628},
{-1975.5842,140.8170,36.9623,269.8895},
{-1975.7874,134.0368,36.9623,271.7696},
{-1975.1681,129.0926,36.9623,270.8531},
{-1975.9069,121.4700,36.9623,270.5631},
{-1975.3311,112.7078,36.9623,267.7665}
};

/*new Float:gMedicSpawns[2][3] = {
{317.9066,315.6765,999.1484},
{317.6252,311.8465,999.1484}
};*/

new Float:gCopPlayerSpawns[2][3] = {
{1530.8369,-1664.8872,6.2188},
{1530.6913,-1669.4760,6.2188}
/*{614.8,-608.2,17.2},
{611.5,-607.8,17.2}*/
};

new Float:gMedPlayerSpawns[2][3] = {
{1178.1,-1321.0,14.1},
{1177.7,-1325.0,14.0}
};

enum pBoxingStats
{
    TitelName[128],
    TitelWins,
    TitelLoses,
};
new Titel[pBoxingStats];

enum cCKInfo
{
	cSendername[20],
	cGiveplayer[20],
	cUsed,
};
new CKInfo[10][cCKInfo];

enum pPaperInfo
{
	PaperUsed,
	PaperMaker[20],
	PaperTitle[64],
	PaperText1[128],
	PaperText2[128],
	PaperText3[128],
	PaperText4[128],
	PaperText5[128],
	PaperText6[128],
	PaperText7[128],
	SafeSaving,
};
new PaperInfo[10][pPaperInfo];

enum pPaper
{
	pMaker[20],
	pTitle[64],
	pLine1[128],
	pLine2[128],
	pLine3[128],
	pLine4[128],
	pLine5[128],
	pLine6[128],
	pLine7[128],
};
new Paper[MAX_PLAYERS][pPaper];

enum fInfo
{
	FamilyTaken,
	FamilyName[20],
	FamilyMOTD[128],
	FamilyColor[20],
	FamilyLeader[MAX_PLAYER_NAME],
	FamilyMembers,
	Float:FamilySpawn[4],
	FamilyInterior,
};
new FamilyInfo[10][fInfo];

enum pFishing
{
	pFish1[20],
	pFish2[20],
	pFish3[20],
	pFish4[20],
	pFish5[20],
	pWeight1,
	pWeight2,
	pWeight3,
	pWeight4,
	pWeight5,
	pFid1,
	pFid2,
	pFid3,
	pFid4,
	pFid5,
	pLastFish,
	pFishID,
	pLastWeight,
};
new Fishes[MAX_PLAYERS][pFishing];

enum pCooking
{
	pCook1[20],
	pCook2[20],
	pCook3[20],
	pCook4[20],
	pCook5[20],
	pCWeight1,
	pCWeight2,
	pCWeight3,
	pCWeight4,
	pCWeight5,
	pCookID1,
	pCookID2,
	pCookID3,
	pCookID4,
	pCookID5,
};
new Cooking[MAX_PLAYERS][pCooking];

enum pGroceries
{
	pChickens,
	pChicken,
	pHamburgers,
	pHamburger,
	pPizzas,
	pPizza,
};
new Groceries[MAX_PLAYERS][pGroceries];

enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	sCam,
};

new Unspec[MAX_PLAYERS][pSpec];

enum eCars
{
	model_id,
	Float:pos_x,
	Float:pos_y,
	Float:pos_z,
	Float:z_angle,
};

enum hNews
{
	hTaken1,
	hTaken2,
	hTaken3,
	hTaken4,
	hTaken5,
	hAdd1[128],
	hAdd2[128],
	hAdd3[128],
	hAdd4[128],
	hAdd5[128],
	hContact1[128],
	hContact2[128],
	hContact3[128],
	hContact4[128],
	hContact5[128],
};
new News[hNews];

enum pInfo
{
	pKey[128],
	pLevel,
	pAdmin,
	pDonateRank,
	gPupgrade,
	pConnectTime,
	pReg,
	pSex,
	pAge,
	pOrigin,
	pCK,
	pMuted,
	pExp,
	pCash,
	pAccount,
	pCrimes,
	pKills,
	pDeaths,
	pArrested,
	pWantedDeaths,
	pPhoneBook,
	pKpk,
	pLottoNr,
	pFishes,
	pBiggestFish,
	pJob,
	pPayCheck,
	pHeadValue,
	pJailed,
	pJailTime,
	pMats,
	pDrugs,
	pLeader,
	pMember,
	pFMember,
	pRank,
	pChar,
	pContractTime,
	pDetSkill,
	pSexSkill,
	pBoxSkill,
	pLawSkill,
	pMechSkill,
	pJackSkill,
	pVorSkill,
	pCarSkill,
	pNewsSkill,
	pDrugsSkill,
	pCookSkill,
	pFishSkill,
	Float:pHealth,
	Float:pSHealth,
	pInt,
	pLocal,
	pTeam,
	pModel,
	pPnumber,
	pPhousekey,
	pPbiskey,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pCarLic,
	pFlyLic,
	pMotoLic,
	pBoatLic,
	pFishLic,
	pGunLic,
	pGun1,
	pGun2,
	pGun3,
	pGun4,
	pAmmo1,
	pAmmo2,
	pAmmo3,
	pAmmo4,
	pCarTime,
	pVorTime,
	pPayDay,
	pPayDayHad,
	pCDPlayer,
	pWins,
	pLoses,
	pAlcoholPerk,
	pDrugPerk,
	pMiserPerk,
	pPainPerk,
	pTraderPerk,
	pTut,
	pMissionNr,
	pWarns,
	pAdjustable,
	pFuel,
	pMarried,
	pMarriedTo[128],
	
	pMuteTime,
	pHaveMute,
	pNaga,
	pEnter,
	pWeap,
	pPenalty,
};
new PlayerInfo[MAX_PLAYERS][pInfo];

/*timeconvert(Time, &Minutes, &Seconds, &MSeconds)
{// timeconvert code mainly from Dabombber
	new Float:fTime = floatdiv(Time, 60000);
    Minutes = floatround(fTime, floatround_tozero);
    Seconds = floatround(floatmul(fTime - Minutes, 60), floatround_tozero);
    MSeconds = floatround(floatmul(floatmul(fTime - Minutes, 60) - Seconds, 1000), floatround_tozero);
}*/
/*GetTimeStamp()
{
	new hour,minute,second,year,month,day;
	gettime(hour, minute, second);
	getdate(year, month, day);
	new timestamp;
	timestamp=second;
	timestamp+=minute*60;
	timestamp+=hour*3600;
	new days_of_month[12];
	if((year%4==0 && year%100!=0) || year%400==0)
	{
		days_of_month = {31,29,31,30,31,30,31,31,30,31,30,31}; // Schaltjahr
	}
	else
	{
		days_of_month = {31,28,31,30,31,30,31,31,30,31,30,31}; // keins
	}
	new days_this_year = 0;
	days_this_year = day;
	if(month>1){ // No January Calculation, because its always the 0 past months
		for(new i=0; i<month-1;i++) days_this_year+=days_of_month[i];
	}
	timestamp+=days_this_year*86400;

	for(new j=1970;j<year;j++)
	{
		timestamp+=31536000;
		if((year%4==0 && year%100!=0) || year%400==0) timestamp+=86400; // Schaltjahr + 1 Tag
	}
	return timestamp;
}
MuteTimeUpdate(playerid){
	if( GetTimeStamp() - PlayerInfo[playerid][pHaveMute] >= PlayerInfo[playerid][pMuteTime] ){
	    PlayerInfo[playerid][pMuteTime] = 0;
	    PlayerInfo[playerid][pHaveMute] = 0;
	}
	else
	{
	    PlayerInfo[playerid][pMuteTime] -= GetTimeStamp() - PlayerInfo[playerid][pHaveMute];
	    PlayerInfo[playerid][pHaveMute] = GetTimeStamp();
	}
}*/
/*AdmCmdLog(string[])
{
	new File:file=fopen("AdmCmd.log",io_append);
	format(string,MAX_STRING,"%s\n",string);
	fwrite(file,string);
	fclose(file);
}*/

enum hInfo
{
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hHealthx,
	hHealthy,
	hHealthz,
	hArmourx,
	hArmoury,
	hArmourz,
	hOwner[MAX_PLAYER_NAME],
	hDiscription[MAX_PLAYER_NAME],
	hValue,
	hHel,
	hArm,
	hInt,
	hLock,
	hOwned,
	hRooms,
	hRent,
	hRentabil,
	hTakings,
	hVec,
	hVcol1,
	hVcol2,
	hDate,
	hLevel,
	hVirtual,
};

new HouseInfo[250][hInfo];
new slslsl = 215;

enum bInfo
{
    bOwned,
	bOwner[64],
	bMessage[128],
	bExtortion[MAX_PLAYER_NAME],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bLevelNeeded,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLocked,
	bInterior,
	bProducts,
	bMaxProducts,
	bPriceProd,
};
new BizzInfo[6][bInfo];

enum sbInfo
{
	sbOwned,
	sbOwner[64],
	sbMessage[128],
	sbExtortion[MAX_PLAYER_NAME],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbTill,
	sbLocked,
	sbInterior,
	sbProducts,
	sbMaxProducts,
	sbPriceProd,
};
new SBizzInfo[12][sbInfo];

enum pHaul
{
	pCapasity,
	pLoad,
};

new PlayerHaul[100][pHaul];

enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32],
};
new PlayerCrime[MAX_PLAYERS][pCrime];

enum mInfo
{
    mTitle[128],
    mText1[128],
    mText2[128],
    mText3[128],
    mText4[128],
    mText5[128],
    mText6[128],
    mText7[128],
    mText8[128],
    mText9[128],
    mText10[128],
    mText11[128],
    mText12[128],
    mText13[128],
    mText14[128],
    mText15[128],
    mText16[128],
    mText17[128],
    mText18[128],
    mGText1[128],
    mGText2[128],
    mGText3[128],
    mGText4[128],
    mGText5[128],
    mGText6[128],
	Float:mCP1[3],
	Float:mCP2[3],
	Float:mCP3[3],
	Float:mCP4[3],
	Float:mCP5[3],
	Float:mCP6[3],
	mReward,
	mToggle,
};
new MissionInfo[mInfo];

enum kInfo
{
    kTitle[128],
    kMaker[MAX_PLAYER_NAME],
    kText1[128],
    kText2[128],
    kText3[128],
    kText4[128],
    kText5[128],
    kText6[128],
    kText7[128],
    kText8[128],
    kText9[128],
    kText10[128],
    kText11[128],
    kText12[128],
    kText13[128],
    kText14[128],
    kText15[128],
    kText16[128],
    kText17[128],
    kText18[128],
    kGText1[128],
    kGText2[128],
    kGText3[128],
    kGText4[128],
    kGText5[128],
    kGText6[128],
	Float:kCP1[3],
	Float:kCP2[3],
	Float:kCP3[3],
	Float:kCP4[3],
	Float:kCP5[3],
	Float:kCP6[3],
	kNumber,
	kReward,
	kToggle,
};
new PlayMission[kInfo];

enum iInfo
{
	iAdmin[128],
	iMOTD[128],
	iPassword[128],
	iNeedPass,
	iLock,
	iPlayers,
};
new IRCInfo[10][iInfo];

/*new RandCars[20][1] = {
{496},{542},{507},{585},
{466},{492},{579},{559},
{400},{551},{516},{475},
{561},{550},{566},{558},
{562},{562},{603},{560}
};


new RandLCars[1][1] = {
{431}// coach
};*/


new GunPrice[30][1] = {
{500}, //parachute
{400}, //golfclub
{300}, //nightstick
{200}, //knife
{700}, //baseballbat
{300}, //shovel
{100}, //poolcue
{400}, //purpledildo
{780}, //whitedildo
{560}, //longwhitedildo
{530}, //whitedildo2
{200}, //flowers
{600}, //cane
{500}, //sdpistol
{1000}, //colt45
{3000}, //deagle
{2000}, //Tec9
{3000}, //uzi
{2500}, //mp5
{3000}, //shotgun
{6000}, //spas12
{4000}, //sawnoff
{5000}, //ak47
{5000}, //m4
{1000}, //rifle
{25}, //pistolammo
{40}, //shotgunammo
{25}, //smgammo
{40}, //assaultammo
{50} //rifle
};

new JoinPed[97][1] = {
{280},//POLICE_FORCE
{281},
{282},
{283},
{284},
{285},
{288},
{71},
{166},
{295},
{148},
{286},//FBI/ATF
{164},
{163},
{287},//NATIONAL_GUARD
{285},
{70},//FIRE/AMBULANCE
{274},
{275},
{276},
{277},
{278},
{279},
{258},//LA_COSA_NOSTRA
{127},
{126},
{125},
{124},
{113},
{111},
{98},
{120},//YAKUZA
{121},
{122},
{123},
{169},
{186},
{117},
{127},//HITMANS
{165},
{186},
{93},
{141},
{148},//NEWS_REPORTERS
{188},
{187},
{255},//TAXI_CAB_COMPANY
{253},
{59},//DRIVING/FLYING_SCHOOL
{60},//DRIVING/FLYING_SCHOOL
{76},//DRIVING/FLYING_SCHOOL
{150},//DRIVING/FLYING_SCHOOL
{100},//Flaming Cobra
{247},//Flaming Cobra
{248},//Flaming Cobra
{254},//Flaming Cobra
{112},//MAFIA
{66},//MAFIA
{125},//MAFIA
{126},//MAFIA
{105},//GROOVE
{106},//GROOVE
{107},//GROOVE
{269},//GROOVE
{270},//GROOVE
{271},//GROOVE
{114},//CORONAS
{115},//CORONAS
{116},//CORONAS
{102},//BALLAS
{103},//BALLAS
{104},//BALLAS
{173},//RIFA
{174},//RIFA
{175},//RIFA
{147},//Mer
{187},//Mer
{57},//Mer
{17},//Mer
{108},//VAGOS
{109},//VAGOS
{110},//VAGOS
{192},//SR
{12},//SR
{185},//SR
{216},//SR
{223},//SR
{157},
{158},
{159},
{160},
{161},
{162},
{24},
{66},
{67},
{183}
};

new Peds[198][1] = {
{264},
{247},//CIVILIANS DOWN HERE
{248},{100},{256},{263},{262},{261},{260},{259},{258},{257},{256},{255},
{253},{252},{251},{249},{246},{245},{244},{243},{242},{241},{240},{239},
{238},{237},{236},{235},{234},{233},{232},{231},{230},{229},
{226},{225},{173},{174},{175},{224},{222},{221},{220},{219},{218},
{217},{215},{214},{213},{212},{211},{210},{209},
{207},{206},{205},{204},{203},{202},{201},{200},{199},{198},{197},{196},
{195},{194},{193},{191},{190},{189},{184},{183},
{182},{181},{180},{179},{178},{176},{172},{170},{168},{167},{162},
{161},{160},{159},{158},{157},{156},{155},{154},{153},{152},{151},
{146},{145},{144},{143},{142},{141},{140},{139},{138},{239},{136},{135},
{134},{133},{132},{131},{130},{129},{128},{254},{99},{97},{96},{95},{94},
{92},{90},{89},{88},{87},{85},{84},{83},{82},{81},{80},{79},{78},{77},{76},
{75},{73},{72},{69},{68},{67},{64},{63},{62},{58},{56},{55},
{54},{53},{52},{51},{50},{49},{45},{44},{43},{41},{39},{38},{37},{36},{35},
{34},{33},{32},{31},{30},{29},{28},{27},{26},{25},{24},{23},{22},{21},{20},
{19},{18},{16},{15},{14},{13},{11},{10},{1},{2},
{290},//ROSE
{291},//PAUL
{292},//CESAR
{293},//OGLOC
{187},
{296},//JIZZY
{297},//MADDOGG
{298},//CAT
{299}//ZERO
};

new Float:HouseCarSpawns[250][4] = { // ??? ?? 1 ??????
{-2637.2544,165.0454,4.2919,179.9976},//House 2
{2064.4,-1694.4,13.1,271.1561},//House 1
{-2712.7625,870.3005,70.5348,89.1608},//House 2
{1109.8,-968.0,42.7,0.0},//house 3
{2497.6274,-2025.6306,13.2521,355.4281}, // House 4
{2645.0,-1990.8,13.1,180.0},//House - 5
{-2724.8965,914.8384,67.4253,110.1072},//house 6
{1910.5149,-1120.5304,25.4493,177.8350},//house 7
{828.8,-887.0,68.5,230.7095},//House 8
{2149.6,-1610.9,14.0,90.7904},//House 9
{760.1,-1687.8,4.3,180.6},//House 10
{645.5,-1616.1,14.9,0.0},//House 11
{-2635.2371,931.1931,71.5643,215.3709},//House 12
{-2665.9224,989.9724,64.6955,1.7814},//House 13
{959.5864,-901.0845,45.8584,177.3087},//House 14
{2445.8,-1326.8,23.6,18.4},//House 15
{2845.9,-1286.8,18.9,90.0},//house 16
{2159.8,-1803.9,13.3,271.4}, //House 17
{-2693.7847,132.3186,4.1676,89.5330},//House 18
{-2723.0105,977.7357,54.2926,359.9068},//House 19
{1514.0,-694.6,94.5,90.0},//House 20
{1246.7,-1107.6,25.5,266.4},//House 21
{831.7,-857.5,69.9,180.0},//House 22
{1007.9,-659.4,121.1,130.6194},//House 23
{1110.0,-726.4,100.1,90.0},//House 24
{259.7,-1221.0,74.7,202.0011},//House 25
{1463.7,-901.7,55.8,359.0},//house 26
{1440.1,-890.6,51.2,0.0},//house 27
{-2528.8298,2250.2998,4.8112,334.9590},//house 28
{-2554.7874,2270.5356,4.9064,333.9774}, //House 29
{-2371.1323,2438.4104,9.0698,159.2582},//House 30
{-2237.9492,893.7390,66.4872,89.7571},//House 31
{-2529.4817,-142.6608,19.7107,4.2929}, //House 32
{-2616.1897,-108.4479,4.1693,269.8246},//House 33
{1034.7,-638.7,119.6,269.8246},//House 34
{0.0,0.0,0.0,0.0},//35
{0.0,0.0,0.0,0.0},//36
{0.0,0.0,0.0,0.0},//37
{0.0,0.0,0.0,0.0},//38
{0.0,0.0,0.0,0.0},//39
{0.0,0.0,0.0,0.0},//40
{0.0,0.0,0.0,0.0},//41
{0.0,0.0,0.0,0.0},//42
{0.0,0.0,0.0,0.0},//43
{0.0,0.0,0.0,0.0},//44
{0.0,0.0,0.0,0.0},//45
{0.0,0.0,0.0,0.0},//46
{0.0,0.0,0.0,0.0},//47
{0.0,0.0,0.0,0.0},//48
{0.0,0.0,0.0,0.0},//49
{0.0,0.0,0.0,0.0},//50
{0.0,0.0,0.0,0.0},//51
{0.0,0.0,0.0,0.0},//52
{0.0,0.0,0.0,0.0},//53
{0.0,0.0,0.0,0.0},//54
{0.0,0.0,0.0,0.0},//55
{0.0,0.0,0.0,0.0},//56
{0.0,0.0,0.0,0.0},//57
{0.0,0.0,0.0,0.0},//58
{0.0,0.0,0.0,0.0},//59
{0.0,0.0,0.0,0.0},//60
{0.0,0.0,0.0,0.0},//61
{0.0,0.0,0.0,0.0},//62
{0.0,0.0,0.0,0.0},//63
{2095.3,-1281.8,24.9,178.8},//64
{2102.3,-1281.7,24.7,179.2},//65
{2138.0,-1285.4,24.2,180.0},//66
{2155.1,-1293.1,23.5,89.0},//67
{2141.0,-1317.5,24.3,359.7},//68
{2135.9,-1317.2,24.3,0.1},//69
{2096.0,-1320.3,24.7,359.8},//70
{2085.1,-1228.7,23.5,270.3},//71
{2105.0,-1244.0,24.7,1.1},//72
{2130.5,-1228.0,23.5,269.9},//73
{2148.6,-1242.8,24.3,358.6},//74
{2188.3,-1228.4,23.5,269.9},//75
{2204.1,-1228.4,23.5,270.3},//76
{2223.9,-1239.2,24.6,359.5},//77
{2242.3,-1234.6,24.1,0.4},//78
{2196.4,-1282.2,24.0,179.4},//79
{2210.6,-1293.5,23.5,271.4},//80
{2237.9,-1293.3,23.5,89.7},//81
{2256.0,-1285.0,24.5,180.7},//82
{2259.7,-1393.9,23.6,359.8},//83
{2247.1,-1393.8,23.6,0.0},//84
{2233.8,-1394.5,23.6,359.9},//85
{2195.7,-1368.2,25.2,180.6},//86
{2145.5,-1376.5,23.6,89.6},//87
{2137.0,-1364.6,24.8,180.4},//88
{2148.9,-1408.4,24.6,91.1},//89
{2141.9,-1430.5,24.2,91.2},//90
{2148.4,-1454.6,24.7,91.0},//91
{2136.1,-1470.7,23.5,358.6},//92
{2136.1,-1484.5,23.5,1.1},//93
{2205.1,-1401.3,23.5,180.3},//94
{2205.2,-1416.7,23.6,180.6},//95
{2195.4,-1434.6,24.5,270.3},//96
{2199.7,-1453.5,24.3,270.8},//97
{2192.7,-1465.6,25.1,270.1},//98
{2193.7,-1480.7,24.5,271.2},//99
{2228.9,-1472.1,23.5,180.1},//100
{2244.4,-1471.9,23.2,180.6},//101
{2260.7,-1472.3,22.9,181.1},//102
{2072.4,-1626.2,13.6,179.6},//103
{2068.1,-1636.9,13.1,269.7},//104
{2069.2,-1653.7,13.2,270.2},//105
{2074.1,-1713.5,13.1,180.9},//106
{2068.0,-1738.8,13.1,271.3},//107
{2009.2,-1720.8,13.1,1.0},//108
{2015.9,-1707.8,13.1,90.0},//109
{2011.0,-1659.2,13.1,89.9},//110
{2014.1,-1648.1,13.1,90.8},//111
{2014.0,-1631.3,13.1,90.3},//112
{2390.1,-1716.2,13.2,179.1},//113
{2319.3,-1718.7,13.1,180.2},//114
{2296.1,-1719.4,13.1,179.4},//115
{2328.1,-1677.3,14.0,269.9},//116
{2361.4,-1672.6,13.1,358.5},//117
{2393.1,-1676.5,13.8,0.2},//118
{2405.5,-1667.2,13.1,89.0},//119
{2419.3,-1651.0,13.1,90.0},//120
{2384.8,-1645.5,13.1,181.4},//121
{2366.1,-1651.2,13.1,88.5},//122
{2271.1,-1643.1,14.9,180.5},//123
{2262.0,-1651.2,15.0,88.2},//124
{2237.4,-1634.1,15.2,159.5},//125
{1941.4,-1924.5,13.2,91.3},//126
{1931.3,-1924.7,13.1,89.9},//127
{1910.4,-1924.7,13.1,90.0},//128
{1898.0,-1924.7,13.1,90.1},//129
{1877.1,-1924.8,13.2,89.6},//130
{1844.4,-1924.6,13.2,89.6},//131
{1899.0,-2060.2,13.2,270.1},//132
{1867.9,-2060.3,13.2,270.3},//133
{1846.0,-2060.3,13.2,271.0},//134
{1804.8,-2105.2,13.2,270.8},//135
{1773.4,-2099.6,13.2,180.0},//136
{1766.7,-2105.5,13.2,270.8},//137
{1747.5,-2098.0,13.2,180.3},//138
{1715.4,-2104.3,13.2,212.3},//139
{1689.4,-2104.3,13.2,271.0},//140
{1664.4,-2109.8,13.2,222.8},//141
{1680.5,-2125.7,13.2,359.3},//142
{1691.6,-2121.8,13.5,270.5},//143
{1711.2,-2120.2,13.2,270.4},//144
{1724.9,-2126.6,13.2,359.8},//145
{1757.8,-2120.4,13.2,270.4},//146
{1778.3,-2120.4,13.2,271.7},//147
{1800.0,-2120.2,13.2,270.6},//148
{1855.2,-2144.3,13.2,180.8},//149
{1877.8,-2144.0,13.2,181.2},//150
{1899.3,-2143.8,13.2,180.9},//151
{2685.5,-1991.4,13.2,180.9},//152
{2669.9,-1996.6,13.2,270.8},//153
{2635.4,-1999.1,13.2,270.1},//154
{2636.0,-2005.6,13.2,271.2},//155
{2648.4,-2027.5,13.2,1.5},//156
{2668.8,-2011.4,13.2,269.1},//157
{2685.6,-2017.2,13.2,359.9},//158
{2440.4,-2016.3,13.2,89.6},//159
{2468.0,-2016.5,13.2,89.7},//160
{2511.5,-2016.6,13.2,89.8},//161
{2527.7,-2011.9,13.2,90.8},//162
{2527.5,-2006.1,13.2,92.1},//163
{2511.3,-2002.3,13.2,89.6},//164
{2487.3,-2002.1,13.2,88.5},//165
{2467.2,-2002.2,13.2,88.5},//166
{2374.9,-1142.9,27.8,137.9},//167
{2399.7,-1136.5,29.8,180.1},//168
{2438.3,-1135.8,34.2,178.3},//169
{2492.1,-1142.3,38.1,91.7},//170
{2504.1,-1133.0,38.9,155.2},//171
{2854.6,-1355.3,10.7,274.1},//172
{2852.2,-1330.0,10.7,279.7},//173
{2813.4,-1186.0,24.9,303.0},//174
{2813.4,-1179.7,24.9,239.1},//175
{1535.1,-841.5,64.6,91.2},//176
{1530.2,-813.1,71.6,89.2},//177
{1514.8,-767.0,79.9,141.7},//178
{1460.7,-633.6,95.5,180.5},//179
{1254.7,-804.5,83.8,178.2},//180
{1089.9,-783.4,107.0,69.6},//181
{1028.8,-811.2,101.5,19.6},//182
{979.9,-831.1,95.3,27.0},//183
{944.7,-842.0,93.7,25.1},//184
{929.1,-856.1,93.1,335.2},//185
{871.3,-875.0,77.3,341.3},//186
{726.4,-995.2,52.3,60.8},//187
{687.4,-1073.6,49.1,60.4},//188
{636.5,-1122.1,44.3,46.1},//189
{346.3,-1197.4,76.2,38.9},//190
{2087.5,-1170.8,24.9,88.4},//191
{2079.0,-1189.8,23.5,359.9},//192
{2089.9,-1140.6,25.2,88.6},//193
{2052.1,-1116.6,24.8,179.3},//194
{2013.1,-1120.4,25.9,178.8},//195
{2004.1,-1120.2,26.4,132.3},//196
{1959.0,-1127.9,25.6,90.7},//197
{1934.6,-1119.4,26.1,180.6},//198
{1926.4,-1128.6,24.8,90.5},//199
{1886.6,-1128.3,23.8,91.2},//200
{989.0,-1812.4,13.9,347.1},//201
{977.7,-1810.0,13.8,344.3},//202
{967.8,-1807.5,13.9,346.3},//203
{955.4,-1804.3,13.9,345.3},//204
{932.0,-1801.0,13.4,355.4},//205
{926.3,-1801.1,13.3,0.5},//206
{858.2,-1644.1,13.2,180.7},//207
{887.1,-1646.6,13.2,268.9},//208
{793.1,-1758.0,13.1,176.8},//209
{767.9,-1758.6,12.7,82.1},//210
{764.5,-1660.4,4.1,91.7},//211
{800.8,-1735.9,13.2,210.4},//212
{802.7,-1705.0,13.2,181.3},//213
{802.6,-1690.3,13.2,180.5},//214
{793.3,-1665.0,13.2,178.9},//215
{763.1,-1601.3,13.1,90.8},//216
{648.0,-1716.5,13.9,84.7},//217
{645.2,-1698.6,14.5,352.7},//218
{653.8,-1657.1,14.3,89.9},//219
{647.0,-1639.5,14.7,1.7},//220
{688.3,-1599.6,13.8,1.3},//221
{1402.1,-923.0,35.7,169.0},//222
{1431.5,-928.6,36.7,169.3},//223
{1330.5,-1059.5,28.3,269.1},//224
{1330.6,-1100.4,24.5,234.8},//225
{1246.4,-1067.8,28.8,270.1},//226
{1280.7,-1098.4,25.7,88.7},//227
{1280.8,-1058.6,29.1,90.5},//228
{1145.9,-1101.1,25.4,271.6},//229
{1148.0,-1061.3,29.3,270.1},//230
{1178.9,-1107.9,25.0,93.4},//231
{1180.0,-1067.3,28.7,92.1},//232
{1040.8,-1052.9,31.4,359.7},//233
{1003.8,-1054.1,30.6,0.7},//234
{970.7,-1091.9,23.8,359.9},//235
{1023.3,-777.3,102.7,138.0},//236
{974.4,-760.4,111.7,56.5},//237
{887.3,-781.8,100.9,339.0},//238
{813.3,-767.4,76.4,286.1},//239
{796.4,-840.8,60.3,190.5},//240
{859.6,-847.2,77.0,206.5},//241
{911.8,-831.9,91.9,205.4},//242
{685.9,-1026.1,51.0,152.9},//243
{660.1,-1066.1,48.5,139.7},//244
{617.4,-1102.8,46.4,159.6},//245
{472.3,-1178.4,65.6,198.4},//246
{405.9,-1152.6,76.8,151.2},//247
{166.3,-1341.3,69.8,179.7},//248
{283.2,-1160.4,81.0,226.6}//249
};

new CarSpawns[183][eCars] = {
    {405,-2125.7424,658.0462,52.2988,93.9612},//carid 90
	{426,-2158.0222,657.3932,52.2775,272.8372},
	{445,-1926.3204,585.6179,34.9963,359.8303},
	{492,2229.2,-1170.2,25.7,86.9},
	{507,-2214.8047,-82.7890,35.0474,0.6476},
	{545,2217.0,-1157.2,25.7,269.8},
	{547,405.9748,-1264.3921,50.1237,24.2110},
	{550,-1497.4576,845.8479,6.9382,88.5201},
	{551,-1741.0051,811.0620,24.5782,270.6681},
	{560,2106.4695,-1248.7920,24.0461,0.1524},
	{566,2196.2891,-1277.7905,24.2147,180.4522},
	{402,-1704.3132,999.7747,17.3646,90.0725},
	{405,216.5521,-1431.4004,13.0853,132.5749},
	{554,334.2231,-1343.7405,14.3828,209.9581},
	{507,697.4343,-1230.9486,16.5063,298.7916},
	{545,723.9850,-1121.5535,18.1450,333.9010},
	{536,666.8468,-467.6579,16.0734,90.8623},
	{560,668.1161,-546.2436,16.0413,89.4239},
	{540,912.2176,-996.2035,38.1402,7.5764},
	{482,-1758.3512,910.7219,24.5923,269.8633},
	{547,981.8715,-917.3546,41.5443,88.0589},
	{550,1188.4082,-925.1859,42.8590,277.5563},
	{400,-1699.4597,1035.9624,45.0934,91.6588},
	{405,1450.2,-937.1,36.2,269.6909}, //116
	{492,2148.3257,-1175.2518,24.1959,269.6909},
	{507,-1786.7155,1205.1598,24.7812,178.8758},
	{545,-1716.5907,1350.4829,6.8346,44.2506},
	{540,2348.2910,-1167.9983,27.3637,323.1586},
	{482,2502.0388,-1134.9507,39.1953,150.9506},
	{547,-2166.4534,1251.1536,27.2650,1.0352},
	{550,2853.1858,-1326.8011,11.1511,278.9301},
	{551,-2040.4761,1107.7072,53.4166,89.8473},
	{533,2796.9031,-1567.2024,10.6386,272.4041},
	{482,2813.2175,-1673.0276,9.6638,2.3369},
	{547,2827.6736,-1703.9755,9.7308,77.2896},
	{550,2809.3872,-1837.2391,9.7398,268.9880},
	{551,-2438.0784,1341.1190,7.6988,84.5107},
	{566,2411.5386,-2134.7576,13.9352,0.7795},
	{554,1389.7467,-2695.9370,13.4164,121.1818},
	{405,783.1359,-1601.8208,13.2577,270.9069},
	{554,782.7205,-1619.3584,13.2653,93.0550},
	{426,923.0841,-1361.7990,13.0324,181.1371},
	{445,-2644.6819,1342.3251,6.8981,270.7903},
	{492,1174.6599,-922.1939,43.1189,276.8927},
	{507,1363.0210,-1288.3124,13.2839,180.1453},
	{545,1363.2723,-1260.8229,13.0954,179.5841},
	{540,2383.5627,-1927.9207,13.2436,359.6281},
	{482,-2635.0933,1377.1693,6.8692,180.6415},
	{547,-2513.1277,1209.6135,37.1506,270.2610},
	{550,2396.6899,-1966.8123,13.2793,271.6838},
	{551,2391.1135,-1500.6554,23.6355,269.7709},
	{560,-2273.8679,921.3550,66.3095,0.6336},
	{405,-2153.0779,953.6602,79.7271,180.3209},
	{554,334.3586,-1789.3143,4.6717,178.7722},
	{426,343.8039,-1808.9827,4.3090,181.8368},
	{445,-2129.2915,787.6183,69.3346,87.1812},
	{492,646.4998,-1771.6411,13.2905,348.7706},
	{507,-2151.9524,395.9857,34.9395,180.7696},//150
	{545,-2078.8027,265.4074,35.1672,268.0607},
	{540,-2034.8334,178.8471,28.5682,269.9615},
	{482,438.9431,-1625.4088,25.7951,0.1850},
	{547,453.3896,-1494.3240,30.7917,7.7513},
	{550,487.6469,-1516.2312,20.0235,185.5384},
	{551,300.5775,-1490.8882,24.3748,235.1359},
	{560,-2180.1323,41.8542,35.1717,269.9866},
	{566,524.0590,-1375.0093,15.8231,193.3626},
	{405,598.9131,-1519.1414,14.8214,180.4083},
	{554,-2488.1333,-133.0336,25.3507,90.1064},
	{426,-2499.5225,45.0666,25.2641,89.9251},
	{445,-2636.7976,-55.4094,4.0630,359.9826},
	{492,-2718.5115,-124.4794,4.3505,269.1428},
	{507,736.8572,-1337.1550,13.3140,271.3832},
	{545,856.7003,-1363.1852,13.4093,179.8542},//165
	{482,888.1506,-1659.2727,13.3296,1.2414},
	{547,879.1024,-1669.2560,13.3305,180.5853},
	{550,-2134.1443,-453.9576,35.1479,95.0877},
	{551,920.4441,-1823.0966,12.3452,84.1821},
	{560,-1639.3900,-567.5057,13.9530,80.1994},
	{566,1062.6744,-1757.9412,13.1956,89.0572},
	{405,-2265.1501,148.9554,34.8837,269.3405},
	{554,1081.8948,-1629.9564,13.4064,90.0880},
	{426,981.7941,-1523.5115,13.3379,267.2751},
	{520,1498.857300,-698.898376,94.121529},
	{445,1014.7464,-1434.4586,13.3292,266.3129},
	{492,492.6386,-1555.3513,17.1462,213.1128},//DERBY
	{507,2684.6,-2019.0,13.3 ,0.8777},
	{545,1096.1,-1379.9,13.3,270.1909},//178
	{540,-2743.6772,-303.1675,7.1422,49.0919},//179 DERBY
	{482,1182.2568,-1219.2407,18.4163,0.5578},
	{547,1260.9978,-1187.1921,23.3559,183.3606},
	{550,1331.9304,-1081.3899,24.9941,90.4092},
	{551,1284.8755,-1525.5013,13.3451,269.4388},//near taxi
	{560,1279.1887,-1539.2032,13.3201,94.8070},//near taxi
	{566,1275.9120,-1646.7448,13.3273,267.2669},
	{405,-2200.5999,-2503.3606,30.4213,321.7648},
	{554,1253.9153,-1833.3832,13.1734,175.3692},
	{426,1279.2875,-1814.4156,13.1657,93.6385},
	{445,-2205.5234,-2439.3523,30.4224,51.1660},
	{492,1479.9131,-1737.8813,13.2418,269.5805},
	{507,1508.1047,-1737.7089,13.2418,270.0250},
	{545,1618.0411,-1891.1044,13.3278,0.3364},
	{540,1623.7291,-1892.7234,13.3307,180.0126},
	{482,-2079.6389,-2303.7983,30.3466,322.7155},
	{547,1743.5837,-1844.6041,13.3557,180.3384},
	{550,1838.1904,-1871.3842,13.1703,358.5452},
	{551,-1557.8568,-2741.5632,48.3481,144.5150},
	{560,1777.1376,-1910.0310,13.1681,91.0725},
	{566,-16.7753,-2503.6228,36.4593,121.7103},
	{566,1981.0780,-1986.3513,13.3275,2.1479},
	{405,218.4485,-173.3024,1.3809,90.0117},
	{554,199.5586,-155.4912,1.3827,0.3471},
	{426,1984.7471,-2066.7776,13.1625,359.7226},
	{445,1938.0565,-2086.8459,13.3429,268.3414},
	{492,318.4840,-86.0588,2.0804,90.9324},
	{507,-113.9556,-39.4382,2.9209,164.0464},
	{545,115.3321,-217.1147,1.3028,89.7911},
	{540,1748.0751,-2084.2090,13.3324,0.4337},
	{482,1560.5026,-2260.5457,13.3258,268.7398},
	{547,1461.6943,-1505.1688,13.2541,356.9007},
	{550,1426.4930,-1402.3170,13.1800,181.0290},
	{551,1435.0645,-1325.6835,13.2580,270.9400},
	{560,1513.9486,-1272.5691,14.2685,181.0697},
	{566,1583.7561,-1338.7435,16.1896,359.8619},
	{405,-2760.5156,-312.1838,7.1557,3.8747},//DERBY
	{554,-2766.6875,-281.2887,7.1613,180.1256},//DERBY
	{426,1430.2316,-1054.8555,22.8693,359.3625},
	{445,1574.1168,-1036.7643,23.6151,145.6786},
	//{492,1617.6676,-1009.8663,23.6052,356.8697},
	{507,1645.3188,-1036.5238,23.6027,0.7258},
	{545,485.9422,-1467.4543,18.3154,157.6833},//DERBY
	{540,1770.4874,-1060.9886,23.6658,179.2750},
	{482,-2781.4741,-281.6054,7.1515,181.0279},//DERBY
	{547,1653.1766,-1134.8994,23.6110,178.6835},
	{550,1617.3746,-1132.8293,23.6117,91.7300},
	{551,1790.0190,-1292.9065,13.2653,267.2964},
	{560,1754.3009,-1476.8170,13.2402,269.6320},
	{554,2003.3417,-1121.4993,26.3879,357.4926},
	{426,2084.2334,-1170.0986,24.2042,91.8975},
	{492,2229.2278,-1345.4033,23.6892,93.3009},
	{507,2332.5684,-1362.4845,23.7297,358.1198},
	{545,2384.1567,-1275.6326,23.9198,101.6528},
	{540,2432.3149,-1226.0785,24.9941,17.9805},
	{482,2426.9612,-1224.4158,25.0000,202.7159},
	{547,2438.4309,-1321.6925,24.1225,269.7535},
	{551,2612.9702,-1262.6970,48.2461,269.4752},
	{560,2659.4529,-1428.4343,30.1790,266.5051},
	{566,2659.7053,-1422.6743,30.1714,89.8159},
	{405,2485.5313,-1556.1823,23.7478,178.8338},
	{554,2478.7664,-1555.7006,23.7226,183.6043},
	{426,2605.3967,-1365.8829,34.6461,359.9891},
	{445,2754.7136,-1373.0253,40.1154,91.4169},
	{492,2717.3662,-1468.0308,30.0894,1.0298},
	{507,2816.7195,-1449.4285,15.9549,268.9106},
	{545,2816.9937,-1441.5880,15.9544,90.7779},
	{540,2681.9016,-1673.3879,9.1290,0.5605},
	{482,2442.5845,-1642.7507,13.1644,180.3454},
	{547,2361.3120,-1674.6146,13.2505,357.4959},
	{550,2298.3535,-1633.7542,14.3849,80.8107},
	{551,2297.9077,-1639.9464,14.4352,94.4292},
	{560,2255.4045,-1664.5736,15.1304,74.6898},
	{566,2234.1057,-1726.9386,13.1665,271.7536},
	{405,2319.3833,-1716.6823,13.2518,359.8540},
	{554,2474.5105,-1755.9194,13.2522,270.5967},
	{426,2501.8213,-1754.2794,13.1208,176.4916}, //= 255
	{445,2489.1560,-1952.6886,13.1366,178.1629},
	{492,2495.4326,-1953.2922,13.1299,356.5514},
	{507,2306.7168,-1989.6796,13.2639,184.8385},
	{482,2056.1807,-1904.7751,13.2502,2.2910},
	{550,2064.9871,-1919.1674,13.2504,180.8575},
	{551,1886.4812,-2022.9338,13.0964,179.4265},
	{560,1824.8976,-2019.8374,13.0875,272.5273},
	{566,1942.1669,-1862.6425,13.2679,264.5590},
	{405,1923.9409,-1795.5616,13.0877,90.0886},
	{554,1807.0905,-1571.7120,13.1659,125.1048},
	{426,1809.9016,-1676.0603,13.2422,180.7589},
	{445,1809.6266,-1653.3402,13.2365,180.6530},
	{492,1809.7056,-1660.3019,13.2380,180.6262},
	{507,1978.4003,-1675.0157,15.6741,269.7336},
	{545,1974.8230,-1693.5488,15.6741,92.1162},
	{540,1929.2253,-1584.6954,13.2700,185.5542},
	{482,1731.9725,-1590.8959,13.1630,77.7249},
	{547,1721.5776,-1589.2834,13.1526,80.9057},
	{550,1695.1428,-1519.2667,13.1671,0.7121},
	{551,1694.7080,-1501.7454,13.1675,357.8150}
	        };

//------------------------------------------------------------------------------------------------------

main()
{
print(" ");
print(" ");
print("TheGodfather:LS/SF FullVersion");
print("_____________________");
print(" ??? by Carlos_Wayne a.k.a ????? ");
print(" ");
}

//------------------------------------------------------------------------------------------------------

public Encrypt(stringa[])
{
	for(new x=0; x < strlen(stringa); x++)
	{
		stringa[x] += (3^x) * (x % 15);
		if(stringa[x] > (0xff))
		{
			stringa[x] -= 64;
		}
	}
	return 1;
}

public SearchingHit(playerid)
{
	new string[256];
	new giveplayer[MAX_PLAYER_NAME];
	new searchhit = 0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(searchhit == 0)
		    {
			    if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0 && PlayerInfo[i][pMember] != 8)
			    {
			        GetPlayerName(i, giveplayer, sizeof(giveplayer));
			        searchhit = 1;
			        hitfound = 1;
			        hitid = i;
			        for(new k=0; k<MAX_PLAYERS; k++)
					{
						if(IsPlayerConnected(k))
						{
				        	if(PlayerInfo[k][pMember] == 8 || PlayerInfo[k][pLeader] == 8)
				        	{
	               				SendClientMessage(k, COLOR_WHITE, "|__________________??????? ???????? ????????.__________________|");
				                SendClientMessage(k, COLOR_DBLUE, "*** ???????? ?????????. ***");
				                format(string, sizeof(string), "???????: %s: ???? %d: $%d", giveplayer, i, PlayerInfo[i][pHeadValue]);
								SendClientMessage(k, COLOR_DBLUE, string);
								SendClientMessage(k, COLOR_YELLOW, "??????????? /givehit ????? ????????? ???????? ? ????? ?? ????????..");
								SendClientMessage(k, COLOR_WHITE, "|________________________________________________________|");
	      					}
					    }
					}
					return 0;
			    }
			}
		}
	}
	if(searchhit == 0)
	{
	    SendClientMessage(playerid, COLOR_GREY, "??? ????????? ??????????.");
	}
	return 0;
}

public ExtortionBiz(bizid, money)
{
    new string[256];
    format(string, sizeof(string), "No-one");
    if(strcmp(BizzInfo[bizid][bExtortion],string, true ) == 0 )
	{
	    return 0;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new name[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			GetPlayerName(i, name, sizeof(name));
			format(string, sizeof(string), "%s", name);
			strmid(wstring, string, 0, strlen(string), 255);
			if(strcmp(BizzInfo[bizid][bExtortion] ,wstring, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    GivePlayerMoney(i, value);
			    BizzInfo[bizid][bTill] -= value;
			}
		}
	}
	return 1;
}

public ExtortionSBiz(bizid, money)
{
    new string[256];
    format(string, sizeof(string), "No-one");
    if(strcmp(SBizzInfo[bizid][sbExtortion],string, true ) == 0 )
	{
	    return 0;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new name[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			GetPlayerName(i, name, sizeof(name));
			format(string, sizeof(string), "%s", name);
			strmid(wstring, string, 0, strlen(string), 255);
			if(strcmp(SBizzInfo[bizid][sbExtortion] ,wstring, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    GivePlayerMoney(i, value);
			    SBizzInfo[bizid][sbTill] -= value;
			}
		}
	}
	return 1;
}

public PreparePaintball()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            SendClientMessage(i, COLOR_YELLOW, "?? ???????? ????? 20 ??????.");
	        }
		}
	}
 	SetTimer("StartPaintball", 20000, 0);
	return 1;
}

public StartPaintball()
{
	PaintballRound = 1;
	StartingPaintballRound = 0;
	PaintballWinner = 999;
	PaintballWinnerKills = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            ResetPlayerWeapons(i);
	            GivePlayerWeapon(i, 29, 999);
	            TogglePlayerControllable(i, 1);
	            SendClientMessage(i, COLOR_YELLOW, "?? ???????? ????? 240 ??????.");
	            PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	        }
	    }
	}
	SetTimer("PaintballEnded", 240000, 0);
	return 1;
}

public PaintballEnded()
{
	new string[256];
	new name[MAX_PLAYER_NAME];
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            if(IsPlayerConnected(PaintballWinner))
	            {
	                GetPlayerName(PaintballWinner, name, sizeof(name));
	                format(string,sizeof(string), "** %s ??????? ?? ? %d ?????????? **",name,PaintballWinnerKills);
	                SendClientMessage(i, COLOR_WHITE, string);
	            }
	            ResetPlayerWeapons(i);
	            PlayerPaintballing[i] = 0;
	            SetPlayerPos(i, SBizzInfo[10][sbEntranceX],SBizzInfo[10][sbEntranceY],SBizzInfo[10][sbEntranceZ]);
	        }
		}
	}
	AnnouncedPaintballRound = 0;
    PaintballRound = 0;
	return 1;
}

public PrepareKarting()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
	        {
	            CP[i] = 9;
				SetPlayerCheckpoint(i,2308.3540,-2354.0039,12.6842,8.0);
				SendClientMessage(i, COLOR_YELLOW, "????? ?? ????????? ???????? ????? 20 ??????.");
	        }
		}
	}
	SetTimer("StartKarting", 20000, 0);
	return 1;
}

public StartKarting()
{
	KartingRound = 1;
	StartingKartRound = 0;
	EndingKartRound = 0;
	FirstKartWinner = 999;
	SecondKartWinner = 999;
	ThirdKartWinner = 999;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
	        {
	            CP[i] = 10;
	            SendClientMessage(i, COLOR_YELLOW, "??????? ????, go go go !");
	            PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	            SetPlayerCheckpoint(i,2308.3540,-2354.0039,12.6842,8.0);
	        }
	    }
	}
	SetTimer("KartingEnded", 240000, 0);
	return 1;
}

public KartingEnded()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
	        {
	            CP[i] = 0;
	            DisablePlayerCheckpoint(i);
	        }
		}
	}
	AnnouncedKartRound = 0;
    KartingRound = 0;
	return 1;
}

public DollahScoreUpdate()
{
	new LevScore;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
   			LevScore = PlayerInfo[i][pLevel];
			SetPlayerScore(i, LevScore);
		}
	}
	return 1;
}

stock right(source[], len)
{
	new retval[MAX_STRING], srclen;
	srclen = strlen(source);
	strmid(retval, source, srclen - len, srclen, MAX_STRING);
	return retval;
}

public Spectator()
{
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(KickPlayer[i]==1) { Kick(i); }
			else if(KickPlayer[i]==2) { Ban(i); }
			//if(GetPlayerPing(i) >= 500 && PlayerInfo[i][pAdmin] < 1) { Kick(i); }
			if(Spectate[i] < 253 && Spectate[i] != 255)
			{
				SetPlayerColor(i,COLOR_SPEC);
				TogglePlayerControllable(i, 0);
				new targetid = Spectate[i];
				if(IsPlayerConnected(targetid))
				{
				    TogglePlayerSpectating(i, 1);
				    if(PlayerInfo[i][pAdmin] >= 1)
				    {
				        new Float:health;
					    new name[MAX_PLAYER_NAME];
					    GetPlayerName(targetid, name, sizeof(name));
					    GetPlayerHealth(targetid, health);
					    format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~y~%s(ID:%d)~n~~y~health:%.1f",name,targetid,health);
					    GameTextForPlayer(i, string, 2500, 3);
				    }
				    if(IsPlayerInAnyVehicle(targetid))
					{
					    new carid = GetPlayerVehicleID(targetid);
					    PlayerSpectateVehicle(i, carid);
					}
					else
					{
					    PlayerSpectatePlayer(i, targetid);
					}
					if(GetPlayerInterior(targetid) == 0)
					{
						SetPlayerInterior(i,0);
					}
					else if(GetPlayerInterior(targetid) > 0)
					{
						SetPlayerInterior(i,GetPlayerInterior(targetid));
					}
				}//Targetid connected
			}
			if(Spectate[i] == 253)
			{
				TogglePlayerControllable(i, 1);
				TogglePlayerSpectating(i, 0);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				Unspec[i][sLocal] = 255;
				SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pModel], Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]-1.0, 1.0, -1, -1, -1, -1, -1, -1);
				gTeam[i] = PlayerInfo[i][pTeam];
				SetPlayerToTeamColor(i);
				MedicBill[i] = 0;
				if(PlayerInfo[i][pDonateRank] > 0)
		        {
		            SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pModel], Unspec[i][Coords][0], Unspec[i][Coords][1], Unspec[i][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(i);
					SetCameraBehindPlayer(i);
		        }
		        else
		        {
					SpawnPlayer(i);
				}
				Spectate[i] = 255;
			}
			if(Spectate[i] == 254)
			{
				TogglePlayerControllable(i, 1);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				SetPlayerPos(i, Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 256)
			{
				SetPlayerToTeamColor(i);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 257)
			{
				Spectate[i] = 254;
			}
		}
	}
}

//------------------------------------------------------------------------------------------------------

public IsAnInstructor(playerid)
{
 	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==11)
		{
		    return 1;
		}
		if(leader==11)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAMember(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==5 || member==6 || member==8)
		{
		    return 1;
		}
		if(leader==5 || leader==6 || leader==8)
		{
		    return 1;
		}
	}
	return 0;
}

public IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==1 || member==2 || member==3)
		{
		    return 1;
		}
		else if(leader==1 || leader==2 || leader==3)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAtClothShop(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(PlayerToPoint(25.0,playerid,207.5627,-103.7291,1005.2578) || PlayerToPoint(25.0,playerid,203.9068,-41.0728,1001.8047))
		{//Binco & Suburban
		    return 1;
		}
		else if(PlayerToPoint(30.0,playerid,214.4470,-7.6471,1001.2109) || PlayerToPoint(50.0,playerid,161.3765,-83.8416,1001.8047))
		{//Zip & Victim
		    return 1;
		}
	}
	return 0;
}

public IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-2029.4968,156.4366,28.9498) || PlayerToPoint(8.0,playerid,-2408.7590,976.0934,45.4175))
		{//SF
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
		{//Between LS and SF
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
		{//LV
		    return 1;
		}
	}
	return 0;
}

public IsAtFishPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(1.0,playerid,403.8266,-2088.7598,7.8359) || PlayerToPoint(1.0,playerid,398.7553,-2088.7490,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,396.2197,-2088.6692,7.8359) || PlayerToPoint(1.0,playerid,391.1094,-2088.7976,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,383.4157,-2088.7849,7.8359) || PlayerToPoint(1.0,playerid,374.9598,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,369.8107,-2088.7927,7.8359) || PlayerToPoint(1.0,playerid,367.3637,-2088.7925,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,362.2244,-2088.7981,7.8359) || PlayerToPoint(1.0,playerid,354.5382,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
	}
	return 0;
}

public IsAtCookPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
	    {//Cluckin Bell
	        return 1;
	    }
	    else if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078))
		{//Burgershot
		    return 1;
		}
		else if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
		{//Well Stacked Pizza
		    return 1;
		}
	}
	return 0;
}

public IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(4.0,playerid,495.7801,-76.0305,998.7578) || PlayerToPoint(4.0,playerid,499.9654,-20.2515,1000.6797))
		{//In grove street bar (with girlfriend), and in Havanna   
		    return 1;
		}
		else if(PlayerToPoint(4.0,playerid,1215.9480,-13.3519,1000.9219) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734))
		{//PIG Pen
		    return 1;
		}
		else if(PlayerToPoint(7.0,playerid,1207.2,-28.4,1000.9) || PlayerToPoint(7.0,playerid,968.6,-47.1,1001.1))
		{//PIG Pen
		    return 1;
		}
	}
	return 0;
}

public IsABoat(carid)
{
	new Boats[] = { 472, 473, 493, 495, 484, 430, 454, 453, 452, 446 };
	for(new i = 0; i < sizeof(Boats); i++)
	{
		if(GetVehicleModel(carid) == Boats[i]) return 1;
	}
	return 0;
}

public IsAPlane(carid)
{
	new AirVeh[] = { 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 497, 563, 447, 469 };
	for(new i = 0; i < sizeof(AirVeh); i++)
	{
		if(GetVehicleModel(carid) == AirVeh[i]) return 1;
	}
	return 0;
}

public IsACopCar(vehicleid)
{
	if(vehicleid == carcop[1] || vehicleid == carcop[2] || vehicleid == carcop[3] || vehicleid == carcop[4] || vehicleid == carcop[5] || vehicleid == carcop[6] || vehicleid == carcop[7] || vehicleid == carcop[8] || vehicleid == carcop[9] || vehicleid == carcop[10]
	|| vehicleid == carcop[11] || vehicleid == carcop[12] || vehicleid == carcop[13] || vehicleid == carcop[14] || vehicleid == carcop[15] || vehicleid == carcop[16] || vehicleid == carcop[17] || vehicleid == carcop[18] || vehicleid == carcop[19] || vehicleid == carcop[20]
	|| vehicleid == carcop[21] || vehicleid == carcop[22] || vehicleid == carcop[23] || vehicleid == carcop[24] || vehicleid == carcop[25] || vehicleid == carcop[26] || vehicleid == carcop[27] || vehicleid == carcop[28] || vehicleid == carcop[29] || vehicleid == carcop[30] || vehicleid == carcop[31] || vehicleid == carcop[32] || vehicleid == carcop[33])
	{
		return 1;
	}
	return 0;
}

public IsAnAmbulance(vehicleid)
{
	if(vehicleid == carmed[1] || vehicleid == carmed[2] || vehicleid == carmed[3] || vehicleid == carmed[4])
	{
		return 1;
	}
	return 0;
}

public IsATruck(carid)
{
    carid=carid-slslsl;
	if(carid >= 78 && carid <= 81)
	{
		return 1;
	}
	return 0;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerConnect(playerid)
{
    GangZoneShowForPlayer(playerid,gz[1],0x808080AA);//??????
	GangZoneShowForPlayer(playerid,gz[2],0xDE17E4AA);//??????
	GangZoneShowForPlayer(playerid,gz[3],0xB8860BAA);//?????
	GangZoneShowForPlayer(playerid,gz[4],0x36D352AA);//?????
	GangZoneShowForPlayer(playerid,gz[5],0x00FDFDAA);//??? ???????
	GangZoneShowForPlayer(playerid,gz[6],0x86B7B3AA);//????
	GangZoneShowForPlayer(playerid,gz[7],0x450778AA);//??????
	GangZoneShowForPlayer(playerid,gz[8],0x450778AA);//??????
	gActivePlayers[playerid]++;
	numplayers++;
	new plname[MAX_PLAYER_NAME];
	new string[MAX_PLAYER_NAME];
	new str[256], condisname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, condisname, sizeof(condisname));
	new f;
	GetPlayerName(playerid,plname,MAX_PLAYER_NAME);
	if(strfind(plname,"_",true,1)!=-1)
	f=1;
	if(plname[strlen(plname)-1]=='_')
    f=0;
	for(new i=0;i<strlen(plname);i++)
	if((plname[i]<='9')&&(plname[i]>='0'))
	f=0;
	if(!f)
	{
	    GetPlayerName(playerid, plname, sizeof(plname));
		format(str, sizeof(str), "?? ???? ???????, ???????: ????????? ???, ??????: ???_???????", plname);
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
		Kick(playerid);
	}
	SelectChar[playerid] = 0; HidePM[playerid] = 0; PhoneOnline[playerid] = 0; OnWeapon[playerid] = 0;
	SelectCharID[playerid] = 0; SelectCharPlace[playerid] = 0; ChosenSkin[playerid] = 0;
	GettingJob[playerid] = 0; GuardOffer[playerid] = 999; GuardPrice[playerid] = 0;
    ApprovedLawyer[playerid] = 0; CallLawyer[playerid] = 0; WantLawyer[playerid] = 0;
	KickPlayer[playerid] = 0; CurrentMoney[playerid] = 0; UsedFind[playerid] = 0;
	CP[playerid] = 0; Robbed[playerid] = 0; SpawnChange[playerid] = 1;
	CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; CarCalls[playerid] = 0;
	RobbedTime[playerid] = 0; MoneyMessage[playerid] = 0; Condom[playerid] = 0;
	STDPlayer[playerid] = 0; SexOffer[playerid] = 999; SexPrice[playerid] = 0;
	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0;
	TalkingLive[playerid] = 255; LiveOffer[playerid] = 999; TakingLesson[playerid] = 0;
	RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; MapIconsShown[playerid] = 0;
	DrugOffer[playerid] = 999; PlayerCuffed[playerid] = 0; PlayerCuffedTime[playerid] = 0;
	DrugPrice[playerid] = 0; OnCK[playerid] = 999; GettingCK[playerid] = 999;
	DrugGram[playerid] = 0; ConnectedToPC[playerid] = 0; OrderReady[playerid] = 0;
	JailPrice[playerid] = 0; MedicTime[playerid] = 0; NeedMedicTime[playerid] = 0; MedicBill[playerid] = 0; GotHit[playerid] = 0;
	WantedPoints[playerid] = 0; GoChase[playerid] = 999; GetChased[playerid] = 999; PlacedNews[playerid] = 0;
	OnDuty[playerid] = 0; WantedLevel[playerid] = 0; TestFishes[playerid] = 0;
	BoxWaitTime[playerid] = 0; SchoolSpawn[playerid] = 0; ChangePos2[playerid][1] = 0;
	SafeTime[playerid] = 60; SetPVarInt(playerid, "TransportDuty", 0); PlayerTied[playerid] = 0;
	SetPVarInt(playerid, "BusCallTime", 0); SetPVarInt(playerid, "TaxiCallTime", 0); SetPVarInt(playerid, "MedicCallTime", 0); SetPVarInt(playerid, "MechanicCallTime", 0);
	FindTimePoints[playerid] = 0; FindTime[playerid] = 0; JobDuty[playerid] = 0;
	Mobile[playerid] = 255; Music[playerid] = 0; BoxOffer[playerid] = 999; SetPVarInt(playerid, "PlayerBoxing", 0);
	Spectate[playerid] = 255; PlayerDrunk[playerid] = 0; PlayerDrunkTime[playerid] = 0;
	Unspec[playerid][sLocal] = 255; FishCount[playerid] = 0;
	WritingPaper[playerid] = 0; WritingPaperNumber[playerid] = 999; WritingLine[playerid] = 0; BringingPaper[playerid] = 0; GotPaper[playerid] = 0;
	PaperOffer[playerid] = 999; ConsumingMoney[playerid] = 0;
    gLastCar[playerid] = 0; FirstSpawn[playerid] = 0;
	gOoc[playerid] = 0; gNews[playerid] = 0; BigEar[playerid] = 0; gDice[playerid] = 0; gFam[playerid] = 0;
	gSpeedo[playerid] = 0; gGas[playerid] = 1;
	gPlayerLogged[playerid] = 0; gPlayerLogTries[playerid] = 0; gPlayerAccount[playerid] = 0;
	gPlayerSpawned[playerid] = 0; PlayerKarting[playerid] = 0; PlayerInKart[playerid] = 0;
	PlayerTazeTime[playerid] = 0; PlayerStoned[playerid] = 0;
	StartTime[playerid] = 0; TicketOffer[playerid] = 999; TicketMoney[playerid] = 0;
	MatsHolding[playerid] = 0; TutTime[playerid] = 0;
	gPlayerMission[playerid] = 0; SetPVarInt(playerid,"TaxiAccepted",999); SetPVarInt(playerid,"BusAccepted",999);
	PlayerInfo[playerid][pCash] = dollah; NoFuel[playerid] = 0;
	HireCar[playerid] = 299; PlayersChannel[playerid] = 999;
	SetPVarInt(playerid,"TransportValue",0); SetPVarInt(playerid,"TransportMoney",0); SetPVarInt(playerid,"TransportTime",0); SetPVarInt(playerid,"TransportCost",0); TransportDriver[playerid] = 999;
	Locator[playerid] = 0; PlayerOnMission[playerid] = 0; MissionCheckpoint[playerid] = 0;
	WatchingTV[playerid] = 0; PlayerPaintballing[playerid] = 0; PlayerPaintballKills[playerid] = 0;
	Fishes[playerid][pLastFish] = 0; Fishes[playerid][pFishID] = 0;
	ProposeOffer[playerid] = 999; MarryWitness[playerid] = 999; MarryWitnessOffer[playerid] = 999; MarriageCeremoney[playerid] = 0; ProposedTo[playerid] = 999; GotProposedBy[playerid] = 999; DivorceOffer[playerid] = 999;
	GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pPenalty] = 0;
	PlayerInfo[playerid][pDonateRank] = 0;
	PlayerInfo[playerid][gPupgrade] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pOrigin] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pAccount] = 0;
	PlayerInfo[playerid][pCrimes] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pArrested] = 0;
	PlayerInfo[playerid][pWantedDeaths] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pKpk] = 0;
	PlayerInfo[playerid][pLottoNr] = 0;
	PlayerInfo[playerid][pFishes] = 0;
	PlayerInfo[playerid][pBiggestFish] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pPayCheck] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pLeader] = 0;
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pFMember] = 255;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pChar] = 0;
	PlayerInfo[playerid][pContractTime] = 0;
	PlayerInfo[playerid][pDetSkill] = 0;
	PlayerInfo[playerid][pSexSkill] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pLawSkill] = 0;
	PlayerInfo[playerid][pMechSkill] = 0;
	PlayerInfo[playerid][pJackSkill] = 0;
	PlayerInfo[playerid][pVorSkill] = 0;
	PlayerInfo[playerid][pCarSkill] = 0;
	PlayerInfo[playerid][pNewsSkill] = 0;
	PlayerInfo[playerid][pDrugsSkill] = 0;
	PlayerInfo[playerid][pCookSkill] = 0;
	PlayerInfo[playerid][pFishSkill] = 0;
	PlayerInfo[playerid][pSHealth] = 0.0;
	PlayerInfo[playerid][pHealth] = 50.0;
	PlayerInfo[playerid][pPos_x] = 2246.6;
	PlayerInfo[playerid][pPos_y] = -1161.9;
	PlayerInfo[playerid][pPos_z] = 1029.7;
	PlayerInfo[playerid][pInt] = 15;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pModel] = 264;
	new randphone = 1000 + random(8999);//minimum 1000  max 9999 //giving one at the start
	PlayerInfo[playerid][pPnumber] = randphone;
	PlayerInfo[playerid][pPhousekey] = 255;
	PlayerInfo[playerid][pPbiskey] = 255;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pMotoLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pFishLic] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pGun1] = 0;
	PlayerInfo[playerid][pGun2] = 0;
	PlayerInfo[playerid][pGun3] = 0;
	PlayerInfo[playerid][pGun4] = 0;
	PlayerInfo[playerid][pAmmo1] = 0;
	PlayerInfo[playerid][pAmmo2] = 0;
	PlayerInfo[playerid][pAmmo3] = 0;
	PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pCarTime] = 0;
	PlayerInfo[playerid][pVorTime] = 0;
	PlayerInfo[playerid][pPayDay] = 0;
	PlayerInfo[playerid][pPayDayHad] = 0;
	PlayerInfo[playerid][pCDPlayer] = 0;
	PlayerInfo[playerid][pWins] = 0;
	PlayerInfo[playerid][pLoses] = 0;
	PlayerInfo[playerid][pAlcoholPerk] = 0;
	PlayerInfo[playerid][pDrugPerk] = 0;
	PlayerInfo[playerid][pMiserPerk] = 0;
	PlayerInfo[playerid][pPainPerk] = 0;
	PlayerInfo[playerid][pTraderPerk] = 0;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pMissionNr] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pFuel] = 0;
	PlayerInfo[playerid][pAdjustable] = 0;
	PlayerInfo[playerid][pEnter] = 0;
	ClearCrime(playerid);
	ClearFishes(playerid);
	ClearCooking(playerid);
	ClearGroceries(playerid);
	ClearMarriage(playerid);
	SetPlayerColor(playerid,COLOR_GRAD2);
	TextDrawShowForPlayer(playerid,Text:Textdraw0);
	GetPlayerName(playerid, plname, sizeof(plname));
	format(string, sizeof(string), "%s.ini", plname);
	if(fexist(string))
	{
		gPlayerAccount[playerid] = 1;
		new loginmsg[256+1];
		format(loginmsg,256,"?????????? ??????? ???? ?????? ? ??????");
		ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"???????????",loginmsg,"???????","??????");
	}
	else
	{
		gPlayerAccount[playerid] = 0;
		new loginmsg[256+1];
		format(loginmsg,256,"?????????? ??????? ???? ?????? ? ??????");
		ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"???????????",loginmsg,"???????","??????");
	}
	return 1;
}

public JoinChannel(playerid, number, line[])
{
    if(IsPlayerConnected(playerid))
	{
	    if(strcmp(IRCInfo[number][iPassword],line, true ) == 0 )
		{
	        JoinChannelNr(playerid, number);
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_GREY, "???????? ??????, (3 ???? ??????? ??????? ? ??? IP ???????.) !!!");
	    }
	}
	return 1;
}

public JoinChannelNr(playerid, number)
{
	if(IsPlayerConnected(playerid))
	{
	    new string[256];
		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayersChannel[playerid] < 999)
	    {
			format(string, sizeof(string), "* %s ??????? ?????.", sendername);
			SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
			IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
	    }
		new channel; channel = number; channel += 1;
	    PlayersChannel[playerid] = number;
	    IRCInfo[PlayersChannel[playerid]][iPlayers] += 1;
    	new wstring[128];
		format(string, sizeof(string), "%s", sendername);
		strmid(wstring, string, 0, strlen(string), 255);
		if(strcmp(IRCInfo[number][iAdmin],wstring, true ) == 0 )
		{
		    format(string, sizeof(string), "* ?? ?????????????? ? IRC %d ??? ?????????.", channel);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else
		{
		    format(string, sizeof(string), "* ?? ?????????????? ?  %d, ?????????????: %s.", channel, IRCInfo[number][iAdmin]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		format(string, sizeof(string), "MOTD: %s.", IRCInfo[number][iMOTD]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "* %s ????????????? ? ??????.", sendername);
		SendIRCMessage(number, COLOR_GREEN, string);
	}
	return 1;
}

public ClearCK(ck)
{
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "No-one");
	strmid(CKInfo[ck][cSendername], string, 0, strlen(string), 255);
	strmid(CKInfo[ck][cGiveplayer], string, 0, strlen(string), 255);
	CKInfo[ck][cUsed] = 0;
	SaveCK();
	return 1;
}

public ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "No-one");
		strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
		PlayerInfo[playerid][pMarried] = 0;
	}
	return 1;
}

public ClearPaper(paper)
{
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "None");
	PaperInfo[paper][PaperUsed] = 0;
	strmid(PaperInfo[paper][PaperMaker], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperTitle], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText1], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText2], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText3], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText4], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText5], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText6], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText7], string, 0, strlen(string), 255);
	SavePapers();
	return 1;
}

public ClearFamily(family)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerInfo[i][pFMember] == family)
	        {
	            SendClientMessage(i, COLOR_LIGHTBLUE, "*?? ???? ???????. ??????? ?????? ??????.");
	            PlayerInfo[i][pFMember] = 255;
	        }
	    }
	}
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "None");
	FamilyInfo[family][FamilyTaken] = 0;
	strmid(FamilyInfo[family][FamilyName], string, 0, strlen(string), 255);
	strmid(FamilyInfo[family][FamilyMOTD], string, 0, strlen(string), 255);
	strmid(FamilyInfo[family][FamilyLeader], string, 0, strlen(string), 255);
	format(string, sizeof(string), "0xFF000069");
	strmid(FamilyInfo[family][FamilyColor], string, 0, strlen(string), 255);
	FamilyInfo[family][FamilyMembers] = 0;
	FamilyInfo[family][FamilySpawn][0] = 0.0;
	FamilyInfo[family][FamilySpawn][1] = 0.0;
	FamilyInfo[family][FamilySpawn][2] = 0.0;
	FamilyInfo[family][FamilySpawn][3] = 0.0;
	FamilyInfo[family][FamilyInterior] = 0;
	SaveFamilies();
	return 1;
}

public ClearCrime(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "********");
		strmid(PlayerCrime[playerid][pBplayer], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusing], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusedof], string, 0, strlen(string), 255);
	}
	return 1;
}

public FishCost(playerid, fish)
{
	if(IsPlayerConnected(playerid))
	{
		new cost = 0;
		switch (fish)
		{
		    case 1:
		    {
		        cost = 1;
		    }
		    case 2:
		    {
		        cost = 3;
		    }
		    case 3:
		    {
		        cost = 3;
		    }
		    case 5:
		    {
		        cost = 5;
		    }
		    case 6:
		    {
		        cost = 2;
		    }
		    case 8:
		    {
		        cost = 8;
		    }
		    case 9:
		    {
		        cost = 12;
		    }
		    case 11:
		    {
		        cost = 9;
		    }
		    case 12:
		    {
		        cost = 7;
		    }
		    case 14:
		    {
		        cost = 12;
		    }
		    case 15:
		    {
		        cost = 9;
		    }
		    case 16:
		    {
		        cost = 7;
		    }
		    case 17:
		    {
		        cost = 7;
		    }
		    case 18:
		    {
		        cost = 10;
		    }
		    case 19:
		    {
		        cost = 4;
		    }
		    case 21:
		    {
		        cost = 3;
		    }
		}
		return cost;
	}
	return 0;
}

public ClearFishes(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Fishes[playerid][pFid1] = 0; Fishes[playerid][pFid2] = 0; Fishes[playerid][pFid3] = 0;
		Fishes[playerid][pFid4] = 0; Fishes[playerid][pFid5] = 0;
		Fishes[playerid][pWeight1] = 0; Fishes[playerid][pWeight2] = 0; Fishes[playerid][pWeight3] = 0;
		Fishes[playerid][pWeight4] = 0; Fishes[playerid][pWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "None");
		strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearFishID(playerid, fish)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "None");
		switch (fish)
		{
		    case 1:
		    {
		        strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight1] = 0;
		        Fishes[playerid][pFid1] = 0;
		    }
		    case 2:
		    {
		        strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight2] = 0;
		        Fishes[playerid][pFid2] = 0;
		    }
		    case 3:
		    {
		        strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight3] = 0;
		        Fishes[playerid][pFid3] = 0;
		    }
		    case 4:
		    {
		        strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight4] = 0;
		        Fishes[playerid][pFid4] = 0;
		    }
		    case 5:
		    {
		        strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight5] = 0;
		        Fishes[playerid][pFid5] = 0;
		    }
		}
	}
	return 1;
}

public ClearCooking(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Cooking[playerid][pCookID1] = 0; Cooking[playerid][pCookID2] = 0; Cooking[playerid][pCookID3] = 0;
		Cooking[playerid][pCookID4] = 0; Cooking[playerid][pCookID5] = 0;
		Cooking[playerid][pCWeight1] = 0; Cooking[playerid][pCWeight2] = 0; Cooking[playerid][pCWeight3] = 0;
		Cooking[playerid][pCWeight4] = 0; Cooking[playerid][pCWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nothing");
		strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearCookingID(playerid, cook)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nothing");
		switch (cook)
		{
		    case 1:
		    {
		        strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight1] = 0;
		        Cooking[playerid][pCookID1] = 0;
		    }
		    case 2:
		    {
		        strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight2] = 0;
		        Cooking[playerid][pCookID2] = 0;
		    }
		    case 3:
		    {
		        strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight3] = 0;
		        Cooking[playerid][pCookID3] = 0;
		    }
		    case 4:
		    {
		        strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight4] = 0;
		        Cooking[playerid][pCookID4] = 0;
		    }
		    case 5:
		    {
		        strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight5] = 0;
		        Cooking[playerid][pCookID5] = 0;
		    }
		}
	}
	return 1;
}

public ClearGroceries(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
	    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
	    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
	}
	return 1;
}

public Lotto(number)
{
	new JackpotFallen = 0;
	new string[256];
	new winner[MAX_PLAYER_NAME];
	format(string, sizeof(string), "??????? ???????: ??????? ?????????? ????? ???? ??: %d.", number);
    OOCOff(COLOR_WHITE, string);
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLottoNr] > 0)
		    {
			    if(PlayerInfo[i][pLottoNr] == number)
			    {
			        JackpotFallen = 1;
			        GetPlayerName(i, winner, sizeof(winner));
					format(string, sizeof(string), "??????? ???????: %s ????? ??????? $%d ?????", winner, Jackpot);
					OOCOff(COLOR_WHITE, string);
					format(string, sizeof(string), "* ?? ???????? $%d ?????", Jackpot);
					SendClientMessage(i, COLOR_YELLOW, string);
					ConsumingMoney[i] = 1;
					GivePlayerMoney(i, Jackpot);
			    }
			    else
			    {
			        SendClientMessage(i, COLOR_LIGHTBLUE, "* ??? ?????????? ????? ????????.");
			    }
			}
			PlayerInfo[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(125000); rand += 15789;
	    Jackpot = rand;
	    SaveStuff();
	    format(string, sizeof(string), "??????? ???????: ?????????? ????? ??????? $%d.", Jackpot);
		OOCOff(COLOR_WHITE, string);
	}
	else
	{
	    new rand = random(15000); rand += 2158;
	    Jackpot += rand;
	    SaveStuff();
	    format(string, sizeof(string), "??????? ???????: ??????? ?????? ?? $%d.", Jackpot);
		OOCOff(COLOR_WHITE, string);
	}
	return 1;
}

public DelP(playerid)
{
    DeletePVar(playerid,"TaxiCallTime");
    DeletePVar(playerid,"MedicCallTime");
    DeletePVar(playerid,"PlayerBoxing");
    DeletePVar(playerid,"BusCallTime");
    DeletePVar(playerid,"MechanicCallTime");
    DeletePVar(playerid,"TaxiAccepted");
    DeletePVar(playerid,"BusAccepted");
    DeletePVar(playerid,"TransportDuty");
    DeletePVar(playerid,"TransportValue");
    DeletePVar(playerid,"TransportMoney");
    DeletePVar(playerid,"TransportTime");
    DeletePVar(playerid,"TransportCost");
	return 1;
}

//------------------------------------------------------------------------------------------------------
public OnPlayerDisconnect(playerid, reason)
{
	gActivePlayers[playerid]--;
	numplayers--;
	PlayerInfo[playerid][pAdjustable] = 1;
	OnPlayerUpdate_GF(playerid);
	new condisname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, condisname, sizeof(condisname));
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(GetPVarInt(i,"TaxiAccepted") < 999)
	        {
		        if(GetPVarInt(i,"TaxiAccepted") == playerid)
		        {
              		SetPVarInt(i,"TaxiAccepted",999);
		            GameTextForPlayer(i, "~w~Taxi Caller~n~~r~Left the game", 5000, 1);
              		SetPVarInt(i, "TaxiCallTime", 0);
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(GetPVarInt(i,"BusAccepted") < 999)
	        {
		        if(GetPVarInt(i,"BusAccepted") == playerid)
		        {
		            SetPVarInt(i,"BusAccepted",999);
		            GameTextForPlayer(i, "~w~Bus Caller~n~~r~Left the game", 5000, 1);
		            SetPVarInt(i, "BusCallTime", 0);
		            DisablePlayerCheckpoint(i);
		        }
	        }
	    }
	}
	if(GettingCK[playerid] < 999)
	{
	    if(IsPlayerConnected(GettingCK[playerid]))
	    {
	        OnCK[GettingCK[playerid]] = 999;
	    }
	}
	if(GetPVarInt(playerid,"TransportCost") > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    new string[64],vasya,vasya2,vasya3;
		    vasya2=GetPVarInt(TransportDriver[playerid],"TransportMoney");
		    vasya3=GetPVarInt(playerid,"TransportCost");
		    vasya=vasya2 += vasya3;
		    SetPVarInt(TransportDriver[playerid],"TransportMoney",vasya);
		    SetPVarInt(TransportDriver[playerid],"TransportTime",0);
		    SetPVarInt(TransportDriver[playerid],"TransportCost",0);
		    format(string, sizeof(string), "~w~Passenger left~n~~g~Earned $%d",GetPVarInt(playerid,"TransportCost"));
		    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		}
	}
	if(GotHit[playerid] > 0)
	{
	    if(GetChased[playerid] < 999)
	    {
	        if(IsPlayerConnected(GetChased[playerid]))
	        {
	        	SendClientMessage(GetChased[playerid], COLOR_YELLOW, "?? ???????.");
	            GoChase[GetChased[playerid]] = 999;
			}
	    }
	}
	if(PlayerPaintballing[playerid] != 0)
	{
	    PaintballPlayers --;
	}
	if(PlayerKarting[playerid] > 0 && PlayerInKart[playerid] > 0)
	{
	    KartingPlayers --;
	}
	if(PlayersChannel[playerid] < 999)
	{
		IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
	}
	if(HireCar[playerid] != 299)
	{
		gLastDriver[HireCar[playerid]] = 300;
		gCarLock[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
	}
	if (gLastCar[playerid] > 0)
	{
		gLastDriver[gLastCar[playerid]] = 300;
		if(PlayerInfo[playerid][pPhousekey] != gLastCar[playerid]-1)
		{
			gCarLock[gLastCar[playerid]] = 0;
			UnLockCar(gLastCar[playerid]);
		}
	}
	if(GetPVarInt(playerid, "PlayerBoxing") > 0)
	{
	    if(Boxer1 == playerid)
	    {
	        if(IsPlayerConnected(Boxer2))
	        {
	        	SetPVarInt(Boxer2, "PlayerBoxing",0);
	        	SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
	        	SetPlayerInterior(Boxer2, 5);
	        	GameTextForPlayer(Boxer2, "~r~Match interupted", 5000, 1);
			}
	    }
	    else if(Boxer2 == playerid)
	    {
	        if(IsPlayerConnected(Boxer1))
	        {
          		SetPVarInt(Boxer1, "PlayerBoxing", 0);
	        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186);
	        	SetPlayerInterior(Boxer1, 5);
	        	GameTextForPlayer(Boxer1, "~r~Match interupted", 5000, 1);
			}
	    }
	    InRing = 0;
     	RoundStarted = 0;
		Boxer1 = 255;
		Boxer2 = 255;
		TBoxer = 255;
	}
	DelP(playerid);
    if(GetPVarInt(playerid, "TransportDuty") == 1)
	{
		TaxiDrivers -= 1;
	}
    else if(GetPVarInt(playerid, "TransportDuty") == 2)
	{
		BusDrivers -= 1;
	}
	if(PlayerInfo[playerid][pJob] == 11)
	{
	    if(JobDuty[playerid] == 1) { Medics -= 1; }
	}
	else if(PlayerInfo[playerid][pJob] == 7)
	{
	    if(JobDuty[playerid] == 1) { Mechanics -= 1; }
	}
}

public SetPlayerSpawn(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pTut] == 0)
	    {
			gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1;
			TogglePlayerControllable(playerid, 0);
			SetPlayerInterior(playerid,15);
			SendClientMessage(playerid, COLOR_YELLOW, "????? ?????????? ? ??? GodFather'a, ?????????? ??????? ?????????? ??????.");
		    new listitems[] = "???????\n???????";
	    	ShowPlayerDialog(playerid,3,DIALOG_STYLE_LIST,"???????? ??? ???:",listitems,"??","??????");
        	return 0;
	    }
		new rand;
		new house = PlayerInfo[playerid][pPhousekey];
		if(PlayerPaintballing[playerid] != 0)
		{
		    ResetPlayerWeapons(playerid);
      		GivePlayerWeapon(playerid, 29, 999);
		    rand = random(sizeof(PaintballSpawns));
			SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
		    return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 1)
		{
		    SetPlayerInterior(playerid, 6);
			SetPlayerPos(playerid,264.6288,77.5742,1001.0391);
			SendClientMessage(playerid, COLOR_LIGHTRED, "?? ??? ?? ???????? ???? ????, ?????? ? ??????? ??? ??????????.");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
		    SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,268.5777,1857.9351,9.8133);
			SetPlayerWorldBounds(playerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
			return 1;
		}
		if(MedicBill[playerid] == 1 && PlayerInfo[playerid][pJailed] == 0 && PlayerPaintballing[playerid] == 0)
		{
		    new string[256];
		    new cut = deathcost; //PlayerInfo[playerid][pLevel]*deathcost;
			GivePlayerMoney(playerid, -cut);
			format(string, sizeof(string), "??????: ? ??? ??????? ?? 50% ????????, ?? $%d!", cut);
			SendClientMessage(playerid, TEAM_CYAN_COLOR, string);
			MedicBill[playerid] = 0;
			MedicTime[playerid] = 0;
			NeedMedicTime[playerid] = 0;
			PlayerInfo[playerid][pDeaths] += 1;
			SetPlayerHealth(playerid, 50.0);
		    /*SetPlayerInterior(playerid, 5);
	        rand = random(sizeof(gMedicSpawns));
			SetPlayerPos(playerid, gMedicSpawns[rand][0], gMedicSpawns[rand][1], gMedicSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
	        TogglePlayerControllable(playerid, 0);
	        GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~y~You are recovering from your ~r~wounds~y~...", 35000, 3);
	        MedicTime[playerid] = 1;
	        if(PlayerInfo[playerid][pDonateRank] > 0)
	        {
	            NeedMedicTime[playerid] = 30;
	        }
	        else
	        {
	        	NeedMedicTime[playerid] = 60;
			}
	        PlayerPlaySound(playerid, 1062, 0.0, 0.0, 0.0);
		    return 1;*/
		}
		if(house !=255)
		{
		    if(SpawnChange[playerid]) //If 1, then you get to your house, else spawn somewhere else
		    {
				SetPlayerToTeamColor(playerid);
				SetPlayerInterior(playerid,HouseInfo[house][hInt]);
				SetPlayerPos(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity],HouseInfo[house][hExitz]); // Warp the player
				PlayerInfo[playerid][pLocal] = house;
				PlayerInfo[playerid][pInt] = HouseInfo[house][hInt];
				SetPlayerVirtualWorld(playerid, HouseInfo[house][hVirtual]);
				PlayerInfo[playerid][pNaga] = 1;
				return 1;
			}
		}
		if(PlayerInfo[playerid][pLeader] == 19)//Mer spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -2453.7285,504.0628,30.0798);
		    PlayerInfo[playerid][pInt] = 0;
			PlayerInfo[playerid][pLocal] = 241;
		    return 1;
		    }
		if(PlayerInfo[playerid][pLeader] == 20)//SR spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1362.1444,-1663.7166,13.5683);
		    PlayerInfo[playerid][pInt] = 0;
			PlayerInfo[playerid][pLocal] = 241;
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//Police Force spawn
		{
			SetPlayerToTeamColor(playerid);
		    rand = random(sizeof(gCopPlayerSpawns));
			SetPlayerPos(playerid, gCopPlayerSpawns[rand][0], gCopPlayerSpawns[rand][1], gCopPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			OnWeapon[playerid] = 0;
			return 1;
	    }
	    if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)//FBI/ATF
	    {
	        SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -1615.3795,677.2035,-4.9063);
		    PlayerInfo[playerid][pInt] = 0;
	    	OnWeapon[playerid] = 0;
		    return 1;
	    }
		if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//National Guard spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -1346.2050,492.3983,11.2027);
		    PlayerInfo[playerid][pInt] = 0;
	    	OnWeapon[playerid] = 0;
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)//Fire/Ambulance spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -2656.0393,635.0596,14.4531);
		    PlayerInfo[playerid][pInt] = 0;
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)//LaCosaNostra spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 2);
		    SetPlayerPos(playerid,2541.9,-1296.2,1054.6);
		    PlayerInfo[playerid][pInt] = 2;
		    SetPlayerVirtualWorld(playerid,12);
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//Yakuza spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPos(playerid,957.1,-51.1,1001.1);
		    PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid,6);
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)//Mer spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 3);
		    SetPlayerFacingAngle(playerid,267.3);
		    SetPlayerPos(playerid,348.7,162.2,1025.7);
		    PlayerInfo[playerid][pInt] = 3;
		    return 1;
		}
	    if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) //Hitman spawn
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 1102.7017,-299.0774,73.9922);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) //News spawn
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 228.8,165.7,1003.0);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid,10);
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) //Taxi Cab Company spawn
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, -1704.8436,1018.2231,17.5859);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) //Flaming Cobra Gang
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 745.2727,-1355.1206,13.5000);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) //Russian Mafia
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 931.7,-6.5,1001.5);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid,13);
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) //Groove
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid,2495.8,-1702.5,1014.7);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid,1);
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) //Coronas
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 2532.5,-1281.4,1031.4);
			SetPlayerInterior(playerid,2);
			PlayerInfo[playerid][pInt] = 2;
			SetPlayerVirtualWorld(playerid,11);
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) //Ballas
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid,1212.1,-28.5,1000.99);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid,9);
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17) //Rifa
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid,1212.1,-28.5,1000.9);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid,14);
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) //Vagos
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid,2533.4,-1281.4,1031.4);
			SetPlayerInterior(playerid,2);
			PlayerInfo[playerid][pInt] = 2;
			SetPlayerVirtualWorld(playerid,8);
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21) //??????
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, -379.8,-1422.1,25.7);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if(IsAnInstructor(playerid)) //Driving/Flying School spawn
	    {
			if(SchoolSpawn[playerid] == 0)
			{
		        SetPlayerToTeamColor(playerid);
				SetPlayerPos(playerid, -2032.6810,-117.4816,1035.1719);
				SetPlayerFacingAngle(playerid, 275.1114);
				SetPlayerInterior(playerid,3);
				PlayerInfo[playerid][pInt] = 3;
			}
			else if(SchoolSpawn[playerid] == 1)
			{
				SetPlayerToTeamColor(playerid);
				SetPlayerPos(playerid, 414.4144,2531.9580,19.1565);
				SetPlayerFacingAngle(playerid, 4.6505);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
	        return 1;
	    }
	    if ((gTeam[playerid]) == 1)
	    {
			SetPlayerToTeamColor(playerid);
			rand = random(sizeof(gMedPlayerSpawns));
			SetPlayerPos(playerid, gMedPlayerSpawns[rand][0], gMedPlayerSpawns[rand][1], gMedPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if(PlayerInfo[playerid][pFMember] != 255)
		{
		    new family = PlayerInfo[playerid][pFMember];
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, FamilyInfo[family][FamilyInterior]);
		    SetPlayerPos(playerid, FamilyInfo[family][FamilySpawn][0],FamilyInfo[family][FamilySpawn][1],FamilyInfo[family][FamilySpawn][2]);
		    SetPlayerFacingAngle(playerid, FamilyInfo[family][FamilySpawn][3]);
		    return 1;
		}
	    else
	    {
			SetPlayerToTeamColor(playerid);
			if(PlayerInfo[playerid][pOrigin] == 1)//USA
			{
			    SetPlayerPos(playerid,2223.8,-1147.1,1025.7);
				SetPlayerFacingAngle(playerid, 270.0);
				SetPlayerInterior(playerid,15);
				PlayerInfo[playerid][pInt] = 15;
			}
			else if(PlayerInfo[playerid][pOrigin] == 2)//europe
			{
			    SetPlayerPos(playerid,2223.8,-1147.1,1025.7);
				SetPlayerFacingAngle(playerid, 270.0);
				SetPlayerInterior(playerid,15);
				PlayerInfo[playerid][pInt] = 15;
			}
			else if(PlayerInfo[playerid][pOrigin] == 3)//asia
			{
			    SetPlayerPos(playerid,2223.8,-1147.1,1025.7);
				SetPlayerFacingAngle(playerid, 270.0);
				SetPlayerInterior(playerid,15);
				PlayerInfo[playerid][pInt] = 15;
			}
			else
			{
				rand = random(sizeof(gRandomPlayerSpawns));
				SetPlayerPos(playerid, gRandomPlayerSpawns[rand][0], gRandomPlayerSpawns[rand][1], gRandomPlayerSpawns[rand][2]); // Warp the player
				SetPlayerFacingAngle(playerid, 270.0);
				SetPlayerInterior(playerid,15);
				PlayerInfo[playerid][pInt] = 15;
			}
			return 1;
		}
	}
	return 1;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerDeath(playerid, killerid, reason)
{
	new name[MAX_PLAYER_NAME];
	new string[256];
	//new dmessage[128];
	//new deathreason[20];
	new playercash;
	new victimteam;
	new Float:px,Float:py,Float:pz;
	new killerteam;

	victimteam = gTeam[playerid];
	killerteam = gTeam[killerid];
	gPlayerSpawned[playerid] = 0;
	GetPlayerName(playerid, name, sizeof(name));
	PlayerInfo[playerid][pLocal] = 255;
	GetPlayerPos(playerid, px, py, pz);
	if(killerid != 255)
	{
		if(GetPlayerState(killerid) == 2)
		{
			SendClientMessage(killerid, COLOR_YELLOW, "???????? ?? ???? ?????? ???????? ?? ?????? ?? ?????? ???????? ????.");
			return 1;
		}
	}
	if(reason == 38)
	{
		new kstring[128];
		new kickname[MAX_PLAYER_NAME];
		if(IsPlayerConnected(killerid))
		{
			GetPlayerName(killerid, kickname, sizeof(kickname));
			format(string, 256, "AdmWarning: [%d]%s ?????? ??? ???? ??????? ?????????, ??????? ??? ????.",killerid,kickname);
			ABroadCast(COLOR_YELLOW,string,1);
			printf("%s", kstring);
		}
	}
	if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}
	new caller = Mobile[playerid];
	if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "??? ????? ?????????.");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	ClearCrime(playerid);
	if(PlayerPaintballing[playerid] != 0)
	{
	    PlayerPaintballKills[killerid] ++;
	    if(PlayerPaintballKills[killerid] > PaintballWinnerKills)
	    {
	        new killer[MAX_PLAYER_NAME];
	        PaintballWinner = killerid;
	        PaintballWinnerKills = PlayerPaintballKills[killerid];
	        GetPlayerName(killerid, killer, sizeof(killer));
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
	                if(PlayerPaintballing[i] != 0)
	                {
	                    format(string, sizeof(string), "* %s ????????? ? ??????? ??? ??????-????????? ? %d ??????????.",killer,PaintballWinnerKills);
						SendClientMessage(i, COLOR_WHITE, string);
	                }
	            }
	        }
	    }
	    return 1;
	}
	if(GettingCK[playerid] < 999 || OnCK[playerid] < 999)
	{
	    if(IsPlayerConnected(killerid))
	    {
	        if(GettingCK[killerid] < 999 || OnCK[playerid] < 999)
	        {
	            new killer[MAX_PLAYER_NAME];
	            new dier[MAX_PLAYER_NAME];
	            GetPlayerName(playerid, dier, sizeof(dier));
				GetPlayerName(killerid, killer, sizeof(killer));
	            format(string, sizeof(string), "* %s ???????? ???????? ?? ???, ?? ?? ?????? ?????? ?????? ? ???? ?????????.",killer);
	            SendClientMessage(playerid, COLOR_LIGHTRED, string);
	            format(string, sizeof(string), "** %s ??? ???? %s **",killer,dier);
	            CKLog(string);
	            PlayerInfo[playerid][pCK] = 1;
	            if(GettingCK[playerid] < 999) { GettingCK[playerid] = 999; }
	            else if(OnCK[playerid] < 999) { OnCK[playerid] = 999; }
	            if(GettingCK[killerid] < 999) { GettingCK[killerid] = 999; }
	            else if(OnCK[killerid] < 999) { OnCK[killerid] = 999; }
	            KickPlayer[playerid] = 1;
	        }
	    }
	}
	if(PlayerInfo[playerid][pHeadValue] > 0)
	{
	    if(IsPlayerConnected(killerid))
	    {
		    if(gTeam[killerid] == 10 || PlayerInfo[killerid][pLeader] == 8)
		    {
		        if(GoChase[killerid] == playerid)
		        {
		            ConsumingMoney[killerid] = 1;
					new killer[MAX_PLAYER_NAME];
					GetPlayerName(killerid, killer, sizeof(killer));
					GivePlayerMoney(killerid, PlayerInfo[playerid][pHeadValue]);
					format(string,128,"<< ?????? %s ???????? ????? ?? %s ? ??????? $%d ????? >>",killer,name,PlayerInfo[playerid][pHeadValue]);
					SendFamilyMessage(8, COLOR_YELLOW, string);
					PlayerInfo[playerid][pHeadValue] = 0;
					GotHit[playerid] = 0;
					GetChased[playerid] = 999;
					GoChase[killerid] = 999;
				}
			}
		}
	}
	if(victimteam >= 4)
	{
	    if(IsPlayerConnected(killerid))
	    {
			//new killer[MAX_PLAYER_NAME];
			//GetPlayerName(killerid, killer, sizeof(killer));
			new slice = 100; //$100
			playercash = GetPlayerMoney(playerid);
			if(SafeTime[playerid] <= 0)
			{
				if(gTeam[killerid] != gTeam[playerid])
				{
					if(GetPlayerState(killerid) == 1)
					{
						PlayerInfo[killerid][pKills] = PlayerInfo[killerid][pKills] + 2;
					}
					else
					{
						PlayerInfo[killerid][pKills]++;
					}
					PlayerInfo[playerid][pKills]--;
				}
			}
			/*if (strlen(deathreason) > 0)// patch
			{
				if (((gTeam[killerid]) == 1) || ((gTeam[killerid]) == 3 && civnokill) || gTeam[killerid] == gTeam[playerid])//med kill criminal
				{
					format(string, sizeof(string), ".: %s murdered %s. (%s) :.", killer, name, deathreason);
				}
				else
				{
					format(string, sizeof(string), ".: %s murdered %s. (%s) for $%d :.", killer, name, deathreason, slice);
				}

			}
			else
			{
				if (((gTeam[killerid]) == 1) || ((gTeam[killerid]) == 3 && civnokill || gTeam[killerid] == gTeam[playerid]))
				{
					format(string, sizeof(string), ".: %s murdered %s :.", killer, name);
				}
				else
				{
					format(string, sizeof(string), ".: %s murdered %s for $%d :.", killer, name, slice);
				}
			}*/
			if (((gTeam[killerid]) == 1) || ((gTeam[killerid]) == 3 && civnokill) || (gTeam[killerid] == gTeam[playerid] && gTeam[playerid] != 4))
			{
				slice = 0;
			}
			if (((gTeam[killerid]) != 4) && ((gTeam[killerid]) == gTeam[playerid]))//no team kill
			{
				slice = 0;
			}
			if (playercash > 0)
			{
				GivePlayerMoney(playerid, -slice);
			}
			else
			{
				slice = slice+500;
			}
			GivePlayerMoney(killerid, slice);
			//GameTextForPlayer(playerid, dmessage, 5000, 2);
			PlayerPlaySound(killerid, 1083, 0.0, 0.0, 0.0);
			if (((gTeam[killerid]) == 3) && reason != 49)
			{
			}
			else if (((gTeam[killerid]) == 3) && reason == 49)
			{
			}
		}
	}
	else if (victimteam == 2)
	{
	    if(IsPlayerConnected(killerid))
	    {
			//new killer[MAX_PLAYER_NAME];
			//GetPlayerName(killerid, killer, sizeof(killer));
			// Cop kill
			PlayerInfo[playerid][pKills]--;
			if (IsACop(killerid))//cops kill cop
			{
				//format(string,128,".: Officer %s murdered Officer %s (%s) and was sued for $%d :.",killer,name,deathreason,suecost);
				PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
				GivePlayerMoney(killerid, -suecost);
				GivePlayerMoney(playerid, suecost+100);//+100pays hospital bill
			}
			else
			{
				//format(string,128,".: %s murdered Officer %s (%s) :.",killer,name,deathreason);
		    }
			if (gTeam[killerid] >= 3)
			{
			    WantedPoints[killerid] += 2; //+ 2 wanted points
				if(reason != 49)
				{
				}
				else if (reason == 49)
				{
				}
			}
			if(gTeam[killerid] >= 5 && SafeTime[playerid] <= 0)
			{
				if(GetPlayerState(killerid) == 1)
				{
					PlayerInfo[killerid][pKills] = PlayerInfo[killerid][pKills]+2;
				}
				else
				{
					PlayerInfo[killerid][pKills]++;
				}
				WantedPoints[killerid]+=2;
			}
			//BroadCast(COLOR_RED, string);
		}
	}
	else if (victimteam == 3)
	{
	    if(IsPlayerConnected(killerid))
	    {
			//new killer[MAX_PLAYER_NAME];
			//GetPlayerName(killerid, killer, sizeof(killer));
			// Civ kill
			if (IsACop(killerid))//cops kill civ
			{
			    if(WantedLevel[playerid] < 1)
			    {
					//format(string,128,".: Officer %s murdered %s (%s) and was sued for $%d :.",killer,name,deathreason,suecost);
					PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
					GivePlayerMoney(killerid, -suecost);
					GivePlayerMoney(playerid, suecost+100);//+100pays hospital bill
				}
			}
			else
			{
				//format(string,128,".: %s murdered %s (%s) :.",killer,name,deathreason);
				WantedPoints[killerid] += 2;
		    }
			if (((gTeam[killerid]) >= 3 || (gTeam[killerid]) == 1) && reason != 49)
			{
			}
			else if (((gTeam[killerid]) >= 3 || (gTeam[killerid]) == 1) && reason == 49)
			{
			}
		    //BroadCast(COLOR_RED, string);
		}
	}
	else if (victimteam == 1)
	{
	    if(IsPlayerConnected(killerid))
	    {
			//new killer[MAX_PLAYER_NAME];
			//GetPlayerName(killerid, killer, sizeof(killer));
			// Civ kill
			if (IsACop(killerid))//cops kill civ
			{
				//format(string,128,".: Officer %s murdered Paramedic %s (%s) and was sued for $%d :.",killer,name,deathreason,suecost);
				PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
				GivePlayerMoney(killerid, -suecost);
				GivePlayerMoney(playerid, suecost+100);//+100pays hospital bill
			}
			else if ((gTeam[killerid]) == 1)//med kill civ
			{
				//format(string,128,".: Paramedic %s murdered %s (%s) and was sued for $%d :.",killer,name,deathreason,suecost);
				PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
				GivePlayerMoney(killerid, -suecost);
				GivePlayerMoney(playerid, suecost+100);//+100pays hospital bill
			}
			else
			{
				//format(string,128,".: %s murdered %s (%s) :.",killer,name,deathreason);
		    }
			if (((gTeam[killerid]) == 4) && reason != 49)
			{
			}
			else if (((gTeam[killerid]) == 3) && reason == 49)
			{
			}
		    //BroadCast(COLOR_RED, string);
		}
	}
	if (victimteam >= 3 && WantedPoints[playerid] > 0 && killerteam == 2)
	{
	    SetPlayerFree(playerid,killerid, "Got Killed");
	}
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid,COLOR_GRAD2);
	return 1;
}

public OnPlayerSpawn(playerid)
{
	InitLockDoors(playerid);
	STDPlayer[playerid] = 0;
	gTeam[playerid] = PlayerInfo[playerid][pTeam]; //Set the Team
	if (gTeam[playerid] == 4) //medic / criminal reset team
	{
		gTeam[playerid] = 3;
	}
	if(gPlayerLogged[playerid] == 0)
	{
    	SendClientMessage(playerid, COLOR_LIGHTRED, "???????? ?? ???? ??????? ??????? ??????????? ????? ??? ??? ????? ? ???? (?? ????? SHIFT).");
        KickPlayer[playerid] = 1;
 	}
	if(gTeam[playerid] == 11 && PlayerInfo[playerid][pLeader] < 1)
	{
	    MedicBill[playerid] = 0;
	    new rand = random(sizeof(CIV));
		SendClientMessage(playerid, COLOR_LIGHTRED, "?? ?? ?????.");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		SetSpawnInfo(playerid, gTeam[playerid], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
		PlayerInfo[playerid][pModel] = CIV[rand];
		SpawnPlayer(playerid);
	}
	if(gTeam[playerid] == 5)
	{
	    if(PlayerInfo[playerid][pMember] < 1)
	    {
	        MedicBill[playerid] = 0;
	        new rand = random(sizeof(CIV));
			SendClientMessage(playerid, COLOR_LIGHTRED, "?? ?? ?????.");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
            SetSpawnInfo(playerid, gTeam[playerid], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
			PlayerInfo[playerid][pModel] = CIV[rand];
			SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 10)
	{
	    if(PlayerInfo[playerid][pMember] != 8)
	    {
	        MedicBill[playerid] = 0;
	        new rand = random(sizeof(CIV));
			SendClientMessage(playerid, COLOR_LIGHTRED, "?? ?? ?????.");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
            SetSpawnInfo(playerid, gTeam[playerid], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
			PlayerInfo[playerid][pModel] = CIV[rand];
			SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 2 && PlayerInfo[playerid][pMember] > 3)
	{
	    MedicBill[playerid] = 0;
		new rand = random(sizeof(CIV));
		SendClientMessage(playerid, COLOR_LIGHTRED, "?? ?? ???????,??? ??? ?????.");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		SetSpawnInfo(playerid, gTeam[playerid], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
		PlayerInfo[playerid][pModel] = CIV[rand];
		SpawnPlayer(playerid);
	}
	if(gTeam[playerid] == 3)
	{
	    if(PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0)
	    {
			MedicBill[playerid] = 0;
			new model = PlayerInfo[playerid][pChar];
			if(PlayerInfo[playerid][pMember] == 1) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 2) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 3) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 4) { SetSpawnInfo(playerid, 1, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 5) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 6) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 8) { SetSpawnInfo(playerid, 10, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 9) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 10) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 11) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 12) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 13) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 14) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 15) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 16) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 17) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 18) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 1) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 2) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 3) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 4) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 5) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 6) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 7) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 8) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 9) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 10) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 11) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 12) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 13) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 14) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 15) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 16) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 17) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 18) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; PlayerInfo[playerid][pModel] = model; }
			SpawnPlayer(playerid);
		}
	}
	if(PlayerInfo[playerid][pChar] > 0) { SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]); }
	else { SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]); }
	SetPlayerWeapons(playerid);
	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	PlayerFixRadio(playerid);
	if(MapIconsShown[playerid] != 1)
	{
	    MapIconsShown[playerid] = 1;
	    for(new i = 0; i < sizeof(BizzInfo); i++)
		{
			SetPlayerMapIcon(playerid,i + 1,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],36,COLOR_LIGHTRED);
		}
		for(new i = 0; i < sizeof(SBizzInfo); i++)
		{
		    SetPlayerMapIcon(playerid,i + 20,SBizzInfo[i][sbEntranceX],SBizzInfo[i][sbEntranceY],SBizzInfo[i][sbEntranceZ],36,COLOR_LIGHTRED);
		}
	}
	return 1;
}

public CKLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("ck.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public PayLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("pay.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public KickLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("kick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public BanLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public OnPlayerEnterCheckpoint(playerid)
{
	new string[128];
	new name[MAX_PLAYER_NAME];
	if(GetPVarInt(playerid, "TaxiCallTime") > 0 && GetPVarInt(playerid,"TaxiAccepted") < 999)
	{
	    SetPVarInt(playerid,"TaxiAccepted",999);
		GameTextForPlayer(playerid, "~w~Reached destination", 5000, 1);
		SetPVarInt(playerid, "TaxiCallTime", 0);
		DisablePlayerCheckpoint(playerid);
	}
	else if(GetPVarInt(playerid, "BusCallTime") > 0 && GetPVarInt(playerid,"BusAccepted") < 999)
	{
	    SetPVarInt(playerid,"BusAccepted",999);
		GameTextForPlayer(playerid, "~w~Reached destination", 5000, 1);
		SetPVarInt(playerid, "BusCallTime", 0);
		DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid]==1)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
		    PlayerInfo[playerid][pJackSkill] ++;
			if(PlayerInfo[playerid][pJackSkill] == 50)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* ?? 2 ??????, ??????????? ???????, ???? ?????? ??????????."); }
			else if(PlayerInfo[playerid][pJackSkill] == 100)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* ?? 3 ??????, ??????????? ???????, ???? ?????? ??????????."); }
			else if(PlayerInfo[playerid][pJackSkill] == 200)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* ?? 4 ??????, ??????????? ???????, ???? ?????? ??????????."); }
			else if(PlayerInfo[playerid][pJackSkill] == 400)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* ?? 5 ??????, ??????????? ???????, ???? ?????? ??????????."); }
			new level = PlayerInfo[playerid][pJackSkill];
			if(level >= 0 && level <= 50)
			{
			    new rand = random(sizeof(SELLCAR1));
			    format(string, sizeof(string), "?? ??????? ?????????? $%d, ????? ? ???????? 20 ?????.", SELLCAR1[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerMoney(playerid, SELLCAR1[rand]);
			    PlayerInfo[playerid][pCarTime] = 1200;
			}
			else if(level >= 51 && level <= 100)
			{
			    new rand = random(sizeof(SELLCAR2));
			    format(string, sizeof(string), "?? ??????? ?????????? ?? $%d, ???? ??????? ?????????? ????? 18 ?????..", SELLCAR2[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerMoney(playerid, SELLCAR2[rand]);
			    PlayerInfo[playerid][pCarTime] = 1080;
			}
			else if(level >= 101 && level <= 200)
			{
			    new rand = random(sizeof(SELLCAR3));
			    format(string, sizeof(string), "?? ??????? ?????????? ?? $%d, ???? ??????? ?????????? ????? 16 ?????..", SELLCAR3[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerMoney(playerid, SELLCAR3[rand]);
			    PlayerInfo[playerid][pCarTime] = 960;
			}
			else if(level >= 201 && level <= 400)
			{
			    new rand = random(sizeof(SELLCAR4));
			    format(string, sizeof(string), "?? ??????? ?????????? ?? $%d, ???? ??????? ?????????? ????? 14 ?????..", SELLCAR4[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerMoney(playerid, SELLCAR4[rand]);
			    PlayerInfo[playerid][pCarTime] = 840;
			}
			else if(level >= 401)
			{
			    new money = 6000;
			    format(string, sizeof(string), "?? ??????? ?????????? ?? $%d, ???? ??????? ?????????? ????? 12 ?????.", money);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerMoney(playerid, money);
			    PlayerInfo[playerid][pCarTime] = 720;
			}
			GameTextForPlayer(playerid, "~y~Sold the car", 2500, 1);
			CP[playerid] = 0;
		    DisablePlayerCheckpoint(playerid);
		    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
		else
		{
		    GameTextForPlayer(playerid, "Not in a car", 5000, 1);
		}
	}
	else if(CP[playerid] == 5)
	{
	    GameTextForPlayer(playerid, "~y~At the Missions Checkpoint", 2500, 1);
		CP[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid] == 9)//Karting
	{
		GameTextForPlayer(playerid, "~r~Wait here for more Kart Racers", 4000, 3);
		DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid] == 10) { CP[playerid] = 11; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2258.7874,-2402.9712,12.7035,8.0); }
	else if(CP[playerid] == 11) { CP[playerid] = 12; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2225.8755,-2461.3875,12.7190,8.0); }
	else if(CP[playerid] == 12) { CP[playerid] = 13; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2276.9983,-2662.8328,12.8580,8.0); }
	else if(CP[playerid] == 13) { CP[playerid] = 14; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2449.1399,-2663.0562,12.8138,8.0); }
	else if(CP[playerid] == 14) { CP[playerid] = 15; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2566.9814,-2504.5686,12.7692,8.0); }
	else if(CP[playerid] == 15) { CP[playerid] = 16; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2719.0520,-2503.5962,12.7706,8.0); }
	else if(CP[playerid] == 16) { CP[playerid] = 17; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2720.7881,-2405.6589,12.7441,8.0); }
	else if(CP[playerid] == 17) { CP[playerid] = 18; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2571.5195,-2401.1531,12.7528,8.0); }
	else if(CP[playerid] == 18) { CP[playerid] = 19; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2406.6995,-2423.1182,12.6641,8.0); }
	else if(CP[playerid] == 19) { CP[playerid] = 20; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2322.9194,-2341.5715,12.6664,8.0); }
	else if(CP[playerid] == 20)//End of Karting
	{
	    CP[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	    GetPlayerName(playerid, name, sizeof(name));
	    if(FirstKartWinner == 999)
	    {
	        FirstKartWinner = playerid;
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
		            if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
		            {
		                format(string, sizeof(string), "* %s ??????? ?????? ? ????? ?? ??????",name);
		                SendClientMessage(i, COLOR_WHITE, string);
		            }
				}
			}
	    }
	    else if(SecondKartWinner == 999)
	    {
	        SecondKartWinner = playerid;
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
		            if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
		            {
		                format(string, sizeof(string), "* %s ??????? ?????? ? ????? ?? ??????",name);
		                SendClientMessage(i, COLOR_WHITE, string);
		            }
				}
			}
	    }
	    else if(ThirdKartWinner == 999)
	    {
	        ThirdKartWinner = playerid;
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
		            if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
		            {
		                format(string, sizeof(string), "* %s ??????? ?????? ? ????? ?? ??????",name);
		                SendClientMessage(i, COLOR_WHITE, string);
		                SendClientMessage(i, COLOR_WHITE, "** ????? ???????? **");
		                CP[i] = 0;
		                DisablePlayerCheckpoint(i);
		            }
				}
	        }
	    }
	}
	else if(MissionCheckpoint[playerid] > 0 && PlayMission[kToggle] == 1)//Missions + Checkpoint on toggle
	{
        	RingTone[playerid] = 20;
		    switch(MissionCheckpoint[playerid])
		    {
	        	case 1:
		        {
					format(string, sizeof(string), "%s", PlayMission[kGText1]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText4]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText5]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText6]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP2][0], PlayMission[kCP2][1], PlayMission[kCP2][2], 8);
					MissionCheckpoint[playerid] = 2;
		        }
		        case 2:
		        {
		            format(string, sizeof(string), "%s", PlayMission[kGText2]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText7]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText8]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText9]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP3][0], PlayMission[kCP3][1], PlayMission[kCP3][2], 8);
					MissionCheckpoint[playerid] = 3;
		        }
		        case 3:
		        {
		            format(string, sizeof(string), "%s", PlayMission[kGText3]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText10]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText11]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText12]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP4][0], PlayMission[kCP4][1], PlayMission[kCP4][2], 8);
					MissionCheckpoint[playerid] = 4;
		        }
		        case 4:
		        {
		            format(string, sizeof(string), "%s", PlayMission[kGText4]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText13]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText14]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText15]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP5][0], PlayMission[kCP5][1], PlayMission[kCP5][2], 8);
					MissionCheckpoint[playerid] = 5;
		        }
		        case 5:
		        {
		            format(string, sizeof(string), "%s", PlayMission[kGText5]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText16]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText17]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText18]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP6][0], PlayMission[kCP6][1], PlayMission[kCP6][2], 8);
					MissionCheckpoint[playerid] = 6;
		        }
		        case 6:
		        {
		            format(string, sizeof(string), "%s", PlayMission[kGText6]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "..:: ?????? ????????: %s | ??????? ????????: $%d ::..", PlayMission[kTitle], PlayMission[kReward]);
					SendClientMessage(playerid, COLOR_GREEN, string);
					DisablePlayerCheckpoint(playerid);
					GivePlayerMoney(playerid, PlayMission[kReward]);
					PlayerInfo[playerid][pMissionNr] = PlayerOnMission[playerid];
					MissionCheckpoint[playerid] = 0;
					PlayerOnMission[playerid] = 0;
		        }
		    }
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_HOME:
		    {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
				GameTextForPlayer(playerid, "~w~You are~n~~y~Home", 5000, 1);
		    }
		}
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(pickupid == pickweapon[1])
	{
	 	if(IsACop(playerid))
	 	{
	 	    if(OnWeapon[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"?? ??? ????? ?????");
	 	    new s[256];
		    format(s,sizeof(s),"????? ??????? ?????\n????? ??????? ?????\n????? ???????? ?????\n????? ?????????? ?????\n????? ?????? ?????\n????? ??????? ?????\n");
		    ShowPlayerDialog(playerid,8,DIALOG_STYLE_LIST,"????? ?????? ??? ??????????",s,"?????","??????");
		    return 1;
		}
	}
	else if(pickupid == pickweapon[2])
	{
	    if(IsACop(playerid))
	    {
	        if(OnWeapon[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"?? ??? ????? ?????");
	        new s[256];
		    format(s,sizeof(s),"????? ??????? ?????\n????? ??????? ?????\n????? ???????? ?????\n????? ?????????? ?????\n????? ?????? ?????\n????? ??????? ?????\n");
		    ShowPlayerDialog(playerid,8,DIALOG_STYLE_LIST,"????? ?????? ??? ??????????",s,"?????","??????");
		    return 1;
	    }
 	}
 	else if(pickupid == pizza1)
 	{
 	    GameTextForPlayer(playerid,"ZOECTJ /mak", 2500, 3);
 	}
 	else if(pickupid == pizza2)
 	{
        GameTextForPlayer(playerid,"ZOECTJ /mak", 2500, 3);
 	}
 	else if(pickupid == pizza3)
 	{
        GameTextForPlayer(playerid,"ZOECTJ /mak", 2500, 3);
 	}
 	else if(pickupid == pizza4)
 	{
        GameTextForPlayer(playerid,"ZOECTJ /mak", 2500, 3);
 	}
 	else if(pickupid == ammmo)
 	{
 	    new Float:x,Float:y,Float:z;
        ShowPlayerDialog(playerid,333,DIALOG_STYLE_LIST,"??????? ??????","Deagle\nSel Pistol\nShotGun\nMP5\nM4\nAK-47\nRifle\n?????? 300$\n??? 300$\n????? 300$\n???? 300$\n??????? 300$\n??? 300$\n?????? 300$\n??? ???? 300$\n?????? 300$\n????? 300$\n????? ?????? 300$","OK","??????");
        GetPlayerPos(playerid,x,y,z);
		SetPlayerPos(playerid,x,y-2,z);
 	}
  	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

public SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
			if (num != 255)
			{
				gPlayerCheckpointStatus[i] = num;
			}
		}
	}

}

public SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] == 2)
			{
				SetPlayerCheckpoint(i,allx,ally,allz, radi);
			}
		}
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new string[256];
	new vehicleid = GetPlayerVehicleID(playerid);
    if(newstate == PLAYER_STATE_DRIVER)
	{
		CarEnter(playerid,vehicleid);
		speedom[playerid] = Create3DTextLabel("",COLOR_WHITE,0.0,0.0,0.0,3.0,0,0);
		Attach3DTextLabelToVehicle(speedom[playerid],vehicleid,0.0,0.0,1.3);
		if(gTeam[playerid] >= 3)
		{
			if (IsACopCar(vehicleid))
			{
				if(PlayerInfo[playerid][pLeader]==1||PlayerInfo[playerid][pLeader]==2||PlayerInfo[playerid][pLeader]==3) {}
			    else { SetPlayerCriminal(playerid,255, "????? ???????????? ??????????."); }
			}
			if (IsAnAmbulance(vehicleid))
			{
			    if(PlayerInfo[playerid][pMember]==4||PlayerInfo[playerid][pLeader]==4) { }
			    else { SetPlayerCriminal(playerid,255, "????? ??????????? ???????."); }
			}
		}
	}
	
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    Delete3DTextLabel(speedom[playerid]);
	    if(PlayerKarting[playerid] > 0 && PlayerInKart[playerid] > 0)
		{
		    PlayerInKart[playerid] = 0;
		    KartingPlayers --;
		}
		if (GetPlayerState(playerid) == 1)
		{
			return 1;
		}
		if(gGas[playerid] == 1)
		{
		    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~Left car", 500, 3);
		}
	    if(GetPVarInt(playerid, "TransportDuty") > 0)
		{
		    if(GetPVarInt(playerid, "TransportDuty") == 1)
			{
		        TaxiDrivers -= 1;
			}
			else if(GetPVarInt(playerid, "TransportDuty") == 2)
			{
			    BusDrivers -= 1;
			}
			SetPVarInt(playerid, "TransportDuty", 0);
			format(string, sizeof(string), "* ?? ?????? ?? ?? ????????? ? ?? ?????????? $%d.", GetPVarInt(playerid,"TransportMoney"));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerMoney(playerid, GetPVarInt(playerid,"TransportMoney"));
			ConsumingMoney[playerid] = 1; SetPVarInt(playerid,"TransportValue",0); SetPVarInt(playerid,"TransportMoney",0);
		}
		if(GetPVarInt(playerid,"TransportCost") > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    new vasya,vasya2,vasya3;
			    vasya2=GetPVarInt(TransportDriver[playerid],"TransportMoney");
			    vasya3 = GetPVarInt(playerid,"TransportCost");
			    vasya = vasya2 + vasya3;
			    SetPVarInt(TransportDriver[playerid],"TransportMoney",vasya);
			    SetPVarInt(TransportDriver[playerid],"TransportTime",0);
			    SetPVarInt(TransportDriver[playerid],"TransportCost",0);
			    format(string, sizeof(string), "~w~The ride cost~n~~r~$%d",GetPVarInt(playerid,"TransportCost"));
			    GameTextForPlayer(playerid, string, 5000, 1);
			    format(string, sizeof(string), "~w~Passenger left the taxi~n~~g~Earned $%d",GetPVarInt(playerid,"TransportCost"));
			    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
				GivePlayerMoney(playerid, - GetPVarInt(playerid,"TransportCost"));
				SetPVarInt(playerid,"TransportCost",0);
				SetPVarInt(playerid,"TransportTime",0);
				TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if(newstate == PLAYER_STATE_PASSENGER) // TAXI & BUSSES
	{
	    new name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && GetPVarInt(i, "TransportDuty") > 0)
	            {
	                if(GetPlayerMoney(playerid) < GetPVarInt(i,"TransportValue"))
	                {
	                    format(string, sizeof(string), "* ??? ????? $%d ?????, ????? ?????.", GetPVarInt(i,"TransportValue"));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						RemovePlayerFromVehicle(playerid);
	                }
	                else
	                {
	                    if(GetPVarInt(i, "TransportDuty") == 1)
	                    {
	                        new vasya;
	                        format(string, sizeof(string), "* ?? ????????? $%d ????? ???????? ?????.", GetPVarInt(i,"TransportValue"));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* ???????? %s ??? ? ??? ? ?????.", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
       						SetPVarInt(i,"TransportTime",1);
	                    	SetPVarInt(playerid,"TransportTime",1);
	                    	vasya = GetPVarInt(i,"TransportValue");
	                    	SetPVarInt(playerid,"TransportCost",vasya);
	                    	vasya = GetPVarInt(i,"TransportValue");
	                    	SetPVarInt(i,"TransportCost",vasya);
	                    	TransportDriver[playerid] = i;
	                    }
	                    else if(GetPVarInt(i, "TransportDuty") == 2)
	                    {
	                        format(string, sizeof(string), "* ?? ????????? $%d ????? ???????? ????????.", GetPVarInt(i,"TransportValue"));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* ???????? %s ??? ? ??? ???????.", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
	                    }
						GivePlayerMoney(playerid, - GetPVarInt(i,"TransportValue"));
						new vasya,vasya2,vasya3;
						vasya2 = GetPVarInt(i,"TransportMoney");
						vasya3 = GetPVarInt(i,"TransportValue");
						vasya = vasya2 += vasya3;
						SetPVarInt(i,"TransportMoney",vasya);
	                }
	            }
	        }
	    }
	}
	if(newstate == PLAYER_STATE_WASTED)
	{
		if(WantedLevel[playerid] >= 1)
		{
		    new price = WantedLevel[playerid] * 4000;
			new count;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(gTeam[i] == 2 && CrimInRange(30.0, playerid,i))
				    {
						count = 1;
						format(string, sizeof(string), "~w~Running Suspect~r~Killed~n~Bonus~g~$%d", price);
						GameTextForPlayer(i, string, 5000, 1);
						ConsumingMoney[i] = 1;
						GivePlayerMoney(i, price / 2);
						PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
					}
				}
			}
			if(count == 1)
			{
				PlayerInfo[playerid][pWantedDeaths] += 1;
				PlayerInfo[playerid][pJailed] = 1;
			    PlayerInfo[playerid][pJailTime] = (WantedLevel[playerid])*(600);
			    format(string, sizeof(string), "* ?? ?????????? ? ?????? ? ??????? %d", PlayerInfo[playerid][pJailTime]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, string);
			    WantedPoints[playerid] = 0;
				WantedLevel[playerid] = 0;
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER) //buggy dont finnish
	{// 38 / 49 / 56 = SS
		new newcar = GetPlayerVehicleID(playerid);
		new oldcar = gLastCar[playerid];
		new housecar = PlayerInfo[playerid][pPhousekey]+1;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		if(IsABoat(newcar))
		{
		    if(PlayerInfo[playerid][pBoatLic] < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??????, ??? ????????? ?????? !");
			    RemovePlayerFromVehicle(playerid);
			}
		}
		else if(IsAPlane(newcar))
		{
		    if(PlayerInfo[playerid][pFlyLic] < 1)
			{
			    if(TakingLesson[playerid] == 1) { }
			    else {
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??????, ??? ?????? !");
			    RemovePlayerFromVehicle(playerid); }
			}
		}
		else
		{
		    new carid = GetPlayerVehicleID(playerid);
			if(PlayerInfo[playerid][pCarLic] < 1 && GetVehicleModel(carid) != 462)
			{
			    if(PlayerDrunk[playerid] >= 5)
				{
					SetPlayerCriminal(playerid,255, "???????? ? ????????? ????");
				}
				if(TakingLesson[playerid] == 1) { }
				else {
				SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??????, ??? ?????? ?????? !");
                RemovePlayerFromVehicle(playerid); }
			}
			else if(PlayerDrunk[playerid] >= 5)
			{
				SetPlayerCriminal(playerid,255, "???????? ? ????????? ????");
			}
		}//Done with car check
  		if(IsACopCar(newcar))
		{
		    if(IsACop(playerid)) { }
		    else { RemovePlayerFromVehicle(playerid); }
		}
		else if(IsAnAmbulance(vehicleid))
		{
		    if(PlayerInfo[playerid][pMember] == 4||PlayerInfo[playerid][pLeader] == 4) { }
		    else { RemovePlayerFromVehicle(playerid); }
		}
		if(IsATruck(newcar))
		{
			format(string, sizeof(string), "????????: %d/%d", PlayerHaul[newcar][pLoad],PlayerHaul[newcar][pCapasity]);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
			SendClientMessage(playerid, COLOR_WHITE, "??????????: ?? ?????? ???????? ??????? ??? ???????.");
			SendClientMessage(playerid, COLOR_WHITE, "??????????: ??????? /load /buyprods /sellprods");
		}
		if(PlayerKarting[playerid] != 0)
		{
		    new kart = GetPlayerVehicleID(playerid);
		    if(kart == (110+slslsl) || kart == (111+slslsl) || kart == (112+slslsl) || kart == (113+slslsl) || kart == (114+slslsl) || kart == (115+slslsl))
		    {
		        PlayerInKart[playerid] = 1;
		    	KartingPlayers ++;
			}
		}
		if(newcar == (39+slslsl) || newcar == (40+slslsl) || newcar == (91+slslsl) || newcar == (92+slslsl)|| newcar == (93+slslsl) || newcar == (192+slslsl) || newcar == (193+slslsl)|| newcar == (194+slslsl) || newcar == (195+slslsl))
		{
		    if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//national guard
		    {
		        if(PlayerInfo[playerid][pRank] < 10)
		        {
			        SendClientMessage(playerid,COLOR_GREY,"   ?? ?????????? ? ??????? 10, ????? ????????? ????  !");
			        RemovePlayerFromVehicle(playerid);
		        }
		    }
		    else
		    {
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar==(110+slslsl)||newcar==(111+slslsl)||newcar==(112+slslsl)||newcar==(113+slslsl)||newcar==(114+slslsl)||newcar==(115+slslsl))
		{
		    if(PlayerKarting[playerid] != 1)
		    {
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar >= (72+slslsl) && newcar <= (74+slslsl))
		{
			if (HireCar[playerid] != newcar)
			{
				format(string, sizeof(string), "~w~You can Rent this car~n~Cost:~g~$%d~n~~w~To rent type ~g~/rentcar~w~~n~to get out type ~r~/exit",SBizzInfo[0][sbEntranceCost]);
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
		}
		if(newcar >= (75+slslsl) && newcar <= (77+slslsl))
		{
			if (HireCar[playerid] != newcar)
			{
				format(string, sizeof(string), "~w~You can Rent this car~n~Cost:~g~$%d~n~~w~To rent type ~g~/rentcar~w~~n~to get out type ~r~/exit",SBizzInfo[1][sbEntranceCost]);
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
		}
		if(oldcar != 301)
		{
			if((housecar != oldcar && oldcar != 0) && (HireCar[playerid] != oldcar && newcar != housecar))
			{
				if(gLastDriver[oldcar] == playerid && oldcar != newcar)
				{
					gLastDriver[oldcar] = 300;
					gCarLock[oldcar] = 0;
					UnLockCar(oldcar);
				}
			}
		}
		gLastCar[playerid] = newcar;
		gLastDriver[newcar] = playerid;
	}
	if(newstate == PLAYER_STATE_SPAWNED)
	{
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1)) //the highest land point in sa = 526.8
		{
			SetPlayerSpawn(playerid);
		}
		if(WantedPoints[playerid] > 0)
		{
		    new dstring[128];
			new wanted = WantedPoints[playerid];
			new diecash = 0;
		    while(WantedPoints[playerid] > 0)
		    {
		        diecash += 500;
		        WantedPoints[playerid] --;
		    }
		    format(dstring, sizeof(dstring), "?? ???????? $%d ?? ?? ?????? ? %d ????????.", diecash, wanted);
		    SendClientMessage(playerid, COLOR_YELLOW, dstring);
		    GivePlayerMoney(playerid, - diecash);
		    PlayerInfo[playerid][pWantedDeaths] += 1;
		}
		if(PlayerOnMission[playerid] > 0)
		{
			GameTextForPlayer(playerid, "~r~Mission failed", 5000, 3);
			PlayerOnMission[playerid] = 0;
		    PlayerInfo[playerid][pMissionNr] = 0;
		}
		WantedPoints[playerid] = 0;
		WantedLevel[playerid] = 0;
		if(PlayerInfo[playerid][pDonateRank] > 0) { SetPlayerHealth(playerid, 100.0); }
		else { SetPlayerHealth(playerid, 50.0+PlayerInfo[playerid][pSHealth]); }
		MedicBill[playerid] = 1;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		gPlayerSpawned[playerid] = 1;
		SafeTime[playerid] = 60;
	}
	return 1;
}

public HireCost(carid)
{
    carid=carid-slslsl;
	switch (carid)
	{
		case 69:
		{
			return 90000; //bullit
		}
		case 70:
		{
			return 130000; //infurnus
		}
		case 71:
		{
			return 100000; //turismo
		}
		case 72:
		{
			return 80000;
		}
		case 73:
		{
			return 70000;
		}
		case 74:
		{
			return 60000;
		}
	}
	return 0;
}

public CarCheck()
{
	new string[256];
	for(new j = 0; j<MAX_PLAYERS; j++)
	{
	    if(IsPlayerConnected(j))
	    {
	        SetVehicleParamsForPlayer(99, j, 0, 0);
	        SetVehicleParamsForPlayer(100, j, 0, 0);
	        SetVehicleParamsForPlayer(101, j, 0, 0);
	        SetVehicleParamsForPlayer(102, j, 0, 0);
	        SetVehicleParamsForPlayer(103, j, 0, 0);
	        SetVehicleParamsForPlayer(104, j, 0, 0);
	        SetVehicleParamsForPlayer(105, j, 0, 0);
	        SetVehicleParamsForPlayer(106, j, 0, 0);
	        SetVehicleParamsForPlayer(107, j, 0, 0);
	        SetVehicleParamsForPlayer(108, j, 0, 0);
	        SetVehicleParamsForPlayer(109, j, 0, 0);
		    new Float:health;
		    GetPlayerHealth(j, health);
			SetPlayerHealth(j, health - 1.0);
			if(STDPlayer[j]==1)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 5.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* ???????? 4 ????????");
			}
			else if(STDPlayer[j]==2)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 12.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* ???????? 8 ????????");
			}
			else if(STDPlayer[j]==3)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 20.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* ???????? 12 ????????");
			}

			if(GetPlayerMoney(j) < 0)
			{
			    if(MoneyMessage[j]==0)
			    {
				    format(string, sizeof(string), " ? ??? ??????? ??????????? ? ??????? $%d. ???? ?? ?? ??????? ??? ??????, ?? ????? ??? ???????", GetPlayerMoney(j));
					SendClientMessage(j, COLOR_LIGHTRED, string);
					MoneyMessage[j] = 1;
				}
			}
			else
			{
			    MoneyMessage[j] = 0;
			}
		}
	}
	for(new c = 1; c < 254; c++)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pJob] == 5)
				{
					SetVehicleParamsForPlayer(c, i, 0, 0);
				}
			}
		}
		if (gLastDriver[c] == 301)
		{
			CarRespawn(c);
		}
		if (gLastDriver[c] >= 300)
		{
			gLastDriver[c]++;
		}
		//foundowner = -1;
	}
	return 1;
}

public CarInit()
{
	for(new c = 1; c < 254; c++)
	{
 		gLastDriver[c] = 299;
	}
	gLastDriver[301]=255;
	return 1;
}

public CarTow(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehiclePos(carid,HouseCarSpawns[carid-1][0], HouseCarSpawns[carid-1][1], HouseCarSpawns[carid-1][2]);
	SetVehicleZAngle(carid, HouseCarSpawns[carid-1][3]);
	return 1;
}

public CarRespawn(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehicleToRespawn(carid);
	gLastDriver[carid] = 299;
	return 1;
}

public LockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid,i,0,1);
		}
	}
}

public UnLockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(!IsAPlane(carid))
			{
				SetVehicleParamsForPlayer(carid,i,0,0);
			}
		}
	}
}

public InitLockDoors(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		new c;
		while (c < 254)
		{
			c++;
			if (gCarLock[c] == 1)
			{
				SetVehicleParamsForPlayer(c,playerid,0,1);
			}
		}
	}
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	new string[128];
	PlayerPlaySound(playerid, 1187, 0.0, 0.0, 0.0);
	PlayerInfo[playerid][pModel] = Peds[classid][0];
	format(string, sizeof(string), "~y~> ~g~Civilian ~y~<");
	GameTextForPlayer(playerid,string,3500,6);
	SetPlayerTeamFromClass(playerid,classid);
	SetupPlayerForClassSelection(playerid);
	return 1;
}

public SetupPlayerForClassSelection(playerid)
{
	switch (gTeam[playerid])
	{
		case TEAM_BLUE:
		{
			SetPlayerInterior(playerid,5);
			SetPlayerPos(playerid,323.4,305.6,999.1);
			SetPlayerFacingAngle(playerid, 90.0);
			SetPlayerCameraPos(playerid,323.4-1.5-1.0,305.6,999.1+0.7);
			SetPlayerCameraLookAt(playerid,323.4-1.0,305.6,999.1+0.7);

		}
		case TEAM_ADMIN:
		{
		    SetPlayerInterior(playerid,3);
			SetPlayerPos(playerid,-2654.4,1424.2,912.4);
			SetPlayerFacingAngle(playerid, 90.0);
			SetPlayerCameraPos(playerid,-2654.4-1.5,1424.2,912.4+0.7);
			SetPlayerCameraLookAt(playerid,-2654.4,1424.2,912.4+0.7);
		}
		default:
		{
		    SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,-1657.5237,1207.6644,13.6719);
			SetPlayerFacingAngle(playerid,357.6906);
		    SetPlayerCameraPos(playerid, -1657.4678,1211.2292,13.6781);
		    SetPlayerCameraLookAt(playerid,-1657.5237,1207.6644,13.6719);
		}
	}
}

//---------------------------------------------------------

public SetPlayerTeamFromClass(playerid,classid)
{
 	if (classid >= 1 && classid <= 11)
	{
		gTeam[playerid] = 11; //admin
		PlayerInfo[playerid][pTeam] = 11;
	}
	else
	{
	    gTeam[playerid] = 3;
	    PlayerInfo[playerid][pTeam] = 3;
	}
}

//---------------------------------------------------------

public SetPlayerCriminal(playerid,declare,reason[])
{//example: SetPlayerCriminal(playerid,255, "Stealing A Police Vehicle");
	if(IsPlayerConnected(playerid))
	{
	    PlayerInfo[playerid][pCrimes] += 1;
	    new points = WantedPoints[playerid];
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new wlevel;
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
			format(turner, sizeof(turner), "Unknown");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		format(turnmes, sizeof(turnmes), "?? ????????? ???????????? (%s). ????????: %s.",reason,turner);
		SendClientMessage(playerid, COLOR_LIGHTRED, turnmes);
		if(points > 0)
		{
		    new yesno;
			if(points == 3) { if(WantedLevel[playerid] != 1) { WantedLevel[playerid] = 1; wlevel = 1; yesno = 1; } }
			else if(points >= 4 && points <= 5) { if(WantedLevel[playerid] != 2) { WantedLevel[playerid] = 2; wlevel = 2; yesno = 1; } }
			else if(points >= 6 && points <= 7) { if(WantedLevel[playerid] != 3) { WantedLevel[playerid] = 3; wlevel = 3; yesno = 1; } }
			else if(points >= 8 && points <= 9) { if(WantedLevel[playerid] != 4) { WantedLevel[playerid] = 4; wlevel = 4; yesno = 1; } }
			else if(points >= 10 && points <= 11) { if(WantedLevel[playerid] != 5) { WantedLevel[playerid] = 5; wlevel = 5; yesno = 1; } }
			else if(points >= 12 && points <= 13) { if(WantedLevel[playerid] != 6) { WantedLevel[playerid] = 6; wlevel = 6; yesno = 1; } }
			else if(points >= 14) { if(WantedLevel[playerid] != 10) { WantedLevel[playerid] = 10; wlevel = 10; yesno = 1; } }
			if(WantedLevel[playerid] >= 1) { if(gTeam[playerid] == 3) { gTeam[playerid] = 4; } }
			if(yesno)
			{
				format(wantedmes, sizeof(wantedmes), "??????? ??????? ???????: %d", wlevel);
				SendClientMessage(playerid, COLOR_YELLOW, wantedmes);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
					    {
							format(cbjstore, sizeof(turnmes), "???? - ????????: ??? ??????? APB: ????????: %s",turner);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
							format(cbjstore, sizeof(turnmes), "???? - ????????: ????????????: %s, ?????????????: %s",reason,turned);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
						}
					}
				}
			}
		}
	}//not connected
}
//---------------------------------------------------------

public SetPlayerFree(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new crbjstore[128];
		if (declare == 255)
		{
			format(turner, sizeof(turner), "911");
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		format(turnmes, sizeof(turnmes), "SMS: %s, ????????? ?? %s, ?? ?????? ?? ??????????, ???????????: ??? (555)",turned,reason);
		RingTone[playerid] = 20;
		SendClientMessage(playerid, COLOR_YELLOW, turnmes);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
			    if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
			    {
					format(crbjstore, sizeof(crbjstore), "???? - ????????: ???? ?????? ?????? %s ???????? ??????????",turner);
					SendClientMessage(i, COLOR_DBLUE, crbjstore);
					format(crbjstore, sizeof(crbjstore), "???? - ????????: %s ??? ?????????, %s",turned,reason);
					SendClientMessage(i, COLOR_DBLUE, crbjstore);
				}
			}
		}
	}
}

public RingToner()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 6 && RingTone[i] != 0 && RingTone[i] < 11)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1138, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 6)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 20)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
			}
		}
	}
	SetTimer("RingTonerRev", 1000, 0);
	return 1;
}

public RingTonerRev()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 5 && RingTone[i] != 0 && RingTone[i] < 10)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1137, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 5)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 19)
			{
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
				RingTone[i] = 0;
			}
		}
	}
	SetTimer("RingToner", 1000, 0);
	return 1;
}

public OtherTimer()
{
    new Float:maxspeed = 175.0;
    new plname[MAX_PLAYER_NAME];
	new string[256];
	new Float:oldposx, Float:oldposy, Float:oldposz;
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
            if(SafeTime[i] > 0)
			{
				SafeTime[i]--;
			}
			if(SafeTime[i] == 1)
			{
				if(gPlayerAccount[i] == 1 && gPlayerLogged[i] == 0)
				{
					SendClientMessage(i, COLOR_WHITE, "??????: ?????? ??? ?????? ??????????? ??????????? ??????? ?????? ? ??????");
				}
			}
		    if(GetPlayerState(i) == 2)
		    {
				GetPlayerPos(i, TelePos[i][3], TelePos[i][4], TelePos[i][5]);
				if(TelePos[i][5] > 550.0)
				{
					TelePos[i][0] = 0.0;
					TelePos[i][1] = 0.0;
				}
				if(TelePos[i][0] != 0.0)
				{
					new Float:xdist = TelePos[i][3]-TelePos[i][0];
					new Float:ydist = TelePos[i][4]-TelePos[i][1];
					new Float:sqxdist = xdist*xdist;
					new Float:sqydist = ydist*ydist;
					new Float:distance = (sqxdist+sqydist)/31;
					if(gSpeedo[i] == 2)
					{
						if(distance <10)
						{
							format(string, 256, "sp: %.0f",distance);
						}
						if(distance > 10 && distance < 100)
						{
							format(string, 256, "sp: %.0f",distance);
						}
						if(distance > 100)
						{
							format(string, 256, "sp: %.0f",distance);
						}
					}
					if(distance > maxspeed && PlayerInfo[i][pAdmin] < 1)
					{
						new tmpcar = GetPlayerVehicleID(i);
						if(!IsAPlane(tmpcar))
						{
							GetPlayerName(i, plname, sizeof(plname));
							format(string, 256, "AdmWarning: [%d]%s %d ????? ????????????? ?? ????????? ???? ? ???((???????? ??? ??))",i,plname,distance);
							ABroadCast(COLOR_YELLOW,string,1);
						}
					}
				}
				if(TelePos[i][5] < 550.0 && TelePos[i][3] != 0.0)
				{
					TelePos[i][0] = TelePos[i][3];
					TelePos[i][1] = TelePos[i][4];
				}
			}
		    if(PlayerInfo[i][pLocal] != 255 && PlayerInfo[i][pInt] != 0)
			{
				new house = PlayerInfo[i][pLocal];
				GetPlayerPos(i, oldposx, oldposy, oldposz);
				if(oldposz != 0.0)
				{
					if(oldposz < 600.0)
					{
						if(house > 10000)
						{
							new tmpcar = GetPlayerVehicleID(i);
							if (!PlayerToPoint(6, i,1040.6,-1021.0,31.7) && house == 10001 ||!PlayerToPoint(6, i,-2720.5,217.5,4.1) && house == 10002 ||!PlayerToPoint(6, i,2644.6,-2044.9,13.3) && house == 10003)
							{
								if (GetPlayerState(i) == 2)
								{
									SetVehiclePos(tmpcar, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
									SetVehicleZAngle(tmpcar, HouseCarSpawns[tmpcar-1][3]);
								}
								else
								{
									SetPlayerPos(i, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
								}
								new oldcash = gSpentCash[i];
								new Total = GetPlayerMoney(i) - oldcash;
								printf("Total %d = GetPlayerMoney(playerid) %d - oldcash %d",Total,GetPlayerMoney(i),oldcash);
								new name[MAX_PLAYER_NAME];
								GetPlayerName(i, name, sizeof(name));
								format(string,128,"<< %s has left the homemodshop with $%d >>",name,Total);
								PayLog(string);
								gSpentCash[i] = 0;
								TelePos[i][0] = 0.0;
								TelePos[i][1] = 0.0;
								PlayerInfo[i][pLocal] = 255;
								SetPlayerInterior(i,0);
								PlayerInfo[i][pInt] = 0;
								Spectate[i] = 255;
							}
						}
						if(house == 241)//City Hall
						{
						    SetPlayerInterior(i,0);
							SetPlayerPos(i,-2162.2554,-2385.9541,30.6250);
							PlayerInfo[i][pInt] = 0;
							PlayerInfo[i][pLocal] = 255;
						}
						if(house == 242)
						{
						    SetPlayerInterior(i,0);
							SetPlayerPos(i,1073.0619,-344.5148,73.9922);
							PlayerInfo[i][pInt] = 0;
							PlayerInfo[i][pLocal] = 255;
						}
						if(house >= 99 && house != 10000)
						{
							SetPlayerPos(i, BizzInfo[house-99][bEntranceX], BizzInfo[house-99][bEntranceY],BizzInfo[house-99][bEntranceZ]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
						}
						else if(house < 99 && house != 10000)
						{
							SetPlayerPos(i, HouseInfo[house][hEntrancex], HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
						}
					}
				}
			}
		    if(CellTime[i] > 0)
			{
				if (CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[Mobile[i]] == i)
					{
						CallCost[i] = CallCost[i]+callcost;
					}
				}
				CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] == 255 && CellTime[i] == 5)
				{
				    if(IsPlayerConnected(Mobile[i]))
				    {
						new called[MAX_PLAYER_NAME];
						GetPlayerName(Mobile[i], called, sizeof(called));
						format(string, sizeof(string), "* %s's ?????? ???????.", called);
						RingTone[Mobile[i]] = 10;
						ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				format(string, sizeof(string), "~w~The call cost~n~~r~$%d",CallCost[i]);
				GivePlayerMoney(i, -CallCost[i]);
				SBizzInfo[2][sbTill] += CallCost[i];
				ExtortionSBiz(2, CallCost[i]);
				GameTextForPlayer(i, string, 5000, 1);
				CallCost[i] = 0;
			}
			if(GetPVarInt(i,"TransportTime") > 0)
			{//Taxi driver and passenger only
			    if(GetPVarInt(i,"TransportTime") >= 16)
				{
					SetPVarInt(i,"TransportTime",1);
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
							new vasya,vasya2;
							vasya = GetPVarInt(TransportDriver[i],"TransportValue");
							vasya2 = GetPVarInt(i,"TransportCost");
							SetPVarInt(i,"TransportCost",vasya+vasya2);
                            SetPVarInt(TransportDriver[i],"TransportCost",vasya+vasya2);
						}
					}
				}
				new vasyas;
				vasyas = GetPVarInt(i,"TransportTime");
			    SetPVarInt(i,"TransportTime",vasyas+1);
			    format(string, sizeof(string), "~r~%d ~w~: ~g~$%d",GetPVarInt(i,"TransportTime"),GetPVarInt(i,"TransportCost"));
			    GameTextForPlayer(i, string, 15000, 6);
			}
		}
	}
	return 1;
}

public SetPlayerUnjail()
{
	new plname[MAX_PLAYER_NAME];
	new string[256];
	if(PaintballPlayers >= 2 && PaintballRound != 1 && StartingPaintballRound != 1)
	{
		StartingPaintballRound = 1;
	   	SetTimer("PreparePaintball", 15000, 0);
	}
	if(KartingPlayers >= 2 && KartingRound != 1 && StartingKartRound != 1)
	{
	    StartingKartRound = 1;
	    SetTimer("PrepareKarting", 15000, 0);
	}
	if(KartingRound != 0 && KartingPlayers < 2)
	{
	    StartingKartRound = 0;
	    KartingRound = 0;
	    EndingKartRound = 1;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			new newcar = GetPlayerVehicleID(i)-slslsl;
			new level = PlayerInfo[i][pLevel];
			if(level >= 0 && level <= 2) { PlayerInfo[i][pPayCheck] += 1; }
			else if(level >= 3 && level <= 4) { PlayerInfo[i][pPayCheck] += 2; }
			else if(level >= 5 && level <= 6) { PlayerInfo[i][pPayCheck] += 3; }
			else if(level >= 7 && level <= 8) { PlayerInfo[i][pPayCheck] += 4; }
			else if(level >= 9 && level <= 10) { PlayerInfo[i][pPayCheck] += 5; }
			else if(level >= 11 && level <= 12) { PlayerInfo[i][pPayCheck] += 6; }
			else if(level >= 13 && level <= 14) { PlayerInfo[i][pPayCheck] += 7; }
			else if(level >= 15 && level <= 16) { PlayerInfo[i][pPayCheck] += 8; }
			else if(level >= 17 && level <= 18) { PlayerInfo[i][pPayCheck] += 9; }
			else if(level >= 19 && level <= 20) { PlayerInfo[i][pPayCheck] += 10; }
			else if(level >= 21) { PlayerInfo[i][pPayCheck] += 11; }
		    if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0 && WantLawyer[i] == 0)
				{
					PlayerInfo[i][pJailTime]--;
				}
				if(PlayerInfo[i][pJailTime] <= 0 && WantLawyer[i] == 0)
				{
				    PlayerInfo[i][pJailTime] = 0;
					if(PlayerInfo[i][pJailed] == 1)
					{
						SetPlayerInterior(i, 6);
						SetPlayerPos(i,268.0903,77.6489,1001.0391);
					}
					else if(PlayerInfo[i][pJailed] == 2)
					{
					    SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000); //Reset world to player
					    SetPlayerInterior(i, 0);
					    SetPlayerPos(i, 90.2101,1920.4854,17.9422);
					}
					PlayerInfo[i][pJailed] = 0;
					SendClientMessage(i, COLOR_GRAD1,"   ?? ????????? ???? ???? ????????.");
					format(string, sizeof(string), "~g~Freedom~n~~w~Try to be a better citizen");
					GameTextForPlayer(i, string, 5000, 1);
					if(gTeam[i] == 4) { gTeam[i] = 3; }
					ClearCrime(i);
					SetPlayerToTeamColor(i);
				}
			}
			if(GetPlayerMoney(i) - CurrentMoney[i] >= 1000000 && PlayerInfo[i][pAdmin] < 1)
		    {
		        if(ConsumingMoney[i])
		        {
                    CurrentMoney[i] = GetPlayerMoney(i);
					ConsumingMoney[i] = 0;
		        }
		        else
		        {
			        GetPlayerName(i, plname, sizeof(plname));
			        format(string, 256, "??????????????: [%d]%s ?????? ??? ???? ??????????? ?????? 1000000$ ? ???? ??????? (moneycheat), ???????????? /check ?? ???.",i,plname);
					ABroadCast(COLOR_YELLOW,string,1);
					PayLog(string);
			        CurrentMoney[i] = GetPlayerMoney(i);
		        }
		    }
		    else
		    {
		        CurrentMoney[i] = GetPlayerMoney(i);
		    }
		    if(IsABoat(newcar))
			{
			    if(PlayerInfo[i][pBoatLic] < 1 && GetPlayerState(i) == 2)
				{
				    RemovePlayerFromVehicle(i);
				}
			}
			else if(IsAPlane(newcar))
			{
			    if(PlayerInfo[i][pFlyLic] < 1 && GetPlayerState(i) == 2)
				{
				    if(TakingLesson[i] == 1) { }
				    else { RemovePlayerFromVehicle(i); }
				}
			}
			else
			{
				if(PlayerInfo[i][pCarLic] < 1 && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == 2)
				{
					if(TakingLesson[i] == 1) { }
				    else { RemovePlayerFromVehicle(i); }
				}
			}//Done with car check
		    if(UsedFind[i] >= 1)
		    {
		        UsedFind[i] += 1;
				if(UsedFind[i] >= 120)
				{
				    UsedFind[i] = 0;
				}
		    }
			if(MedicTime[i] > 0)
			{
			    if(MedicTime[i] == 3)
			    {
			        SetPlayerInterior(i, 5);
			        new Float:X, Float:Y, Float:Z;
			        GetPlayerPos(i, X,Y,Z);
			        SetPlayerCameraPos(i, X + 3, Y, Z);
			        SetPlayerCameraLookAt(i,X,Y,Z);
			    }
			    MedicTime[i] ++;
			    if(MedicTime[i] >= NeedMedicTime[i])
			    {
					new cut = deathcost; //PlayerInfo[playerid][pLevel]*deathcost;
					GivePlayerMoney(i, -cut);
					format(string, sizeof(string), "??????: ??? ??????????? ???? ????????? ? $%d, ????? ????????.", cut);
					SendClientMessage(i, TEAM_CYAN_COLOR, string);
					TogglePlayerControllable(i, 1);
			        MedicBill[i] = 0;
			        MedicTime[i] = 0;
			        NeedMedicTime[i] = 0;
			        PlayerInfo[i][pDeaths] += 1;
			        PlayerFixRadio(i);
			        SpawnPlayer(i);
			    }
			}
			if(WantLawyer[i] >= 1)
			{
			    CallLawyer[i] = 111;
			    if(WantLawyer[i] == 1)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "?? ?????? ????????? (????????? yes (???? ?????) ??? no (???? ?? ?????) )");
				}
				WantLawyer[i] ++;
				if(WantLawyer[i] == 8)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "?? ?????? ????????? (????????? yes (???? ?????) ??? no (???? ?? ?????) )");
				}
	            if(WantLawyer[i] == 15)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "?? ?????? ????????? (????????? yes (???? ?????) ??? no (???? ?? ?????) )");
				}
				if(WantLawyer[i] == 20)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "???????? ????. ???????? ?????????? ????????.");
				    WantLawyer[i] = 0;
				    CallLawyer[i] = 0;
				}
			}
			if(TutTime[i] >= 1)
			{
			    TutTime[i] += 1;
			    if(TutTime[i] == 3)
			    {
			        SendClientMessage(i, COLOR_YELLOW2, "|____?????? ???????.____|");
			        SendClientMessage(i, COLOR_YELLOW2, "??? ?????? ?????????? ???????? ???????? ? ???? ????????? ??? /licensers, ????? ????? ??????? ?? ?????.");
			        SendClientMessage(i, COLOR_YELLOW2, "??? ???? ?? ?? ??????? ?????? ??????, ? ??? ???? ??? ?????? ??????");
			        SendClientMessage(i, COLOR_YELLOW2, "?? ??????? ????????? ????? ?? ????? ?????,cleo ???????,???????,????????, ?? ??? ??? ?? ?????? ???????, ??? ????????.");
			    }
			    else if(TutTime[i] == 14)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "|____?? ??????? ?????????.____|");
			    }
			    else if(TutTime[i] == 16)
			    {
			        SendClientMessage(i, COLOR_YELLOW2, "?? ???? ??????? ????????? ????, ???????, ???????????.");
			        SendClientMessage(i, COLOR_YELLOW2, "???? ?? ???????? ???????? ???????? /report ? ?????");
			        SendClientMessage(i, COLOR_YELLOW2, "??? ?????? ??????, ??? ???? ????????? ???????? ???? ????? ??????????????????.");
			        SendClientMessage(i, COLOR_YELLOW2, "??? ???? ???????, ?????? (/service medic), ????? (/service taxi)");
			        SendClientMessage(i, COLOR_YELLOW2, "????? ????? ???????????, ????????, ??????? ? ?.?. ?????????? ? ???? ? ?????? ??????????????? ??????. /leaders");
			        SendClientMessage(i, COLOR_YELLOW2, "???????? ??? ?????: http://gta-gflife.ucoz.ru/");
			    }
			    else if(TutTime[i] == 30)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "|____??????____|");
			    }
			    else if(TutTime[i] == 32)
			    {
			        SendClientMessage(i, COLOR_YELLOW2, "????? ?????? ????????? ??????? ???????? /help");
			        SendClientMessage(i, COLOR_YELLOW2, "????????? ??????? ?? ????? ????? http://gta-gflife.ucoz.ru/");
			        SendClientMessage(i, COLOR_YELLOW2, "?????????? ????-???? ?????????.");
			        SendClientMessage(i, COLOR_YELLOW2, "???????????? ???? ???? ?????????.");
			        SendClientMessage(i, COLOR_YELLOW2, "???? ???? ????????? ??????? ??????? ? ICQ 964256, ???????.");
			    }
			    else if(TutTime[i] == 52)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "|____???.____|");
			    }
			    else if(TutTime[i] == 54)
			    {
			        SendClientMessage(i, COLOR_YELLOW2, "???????????? ?? ??????? ? ????.");
			        SendClientMessage(i, COLOR_YELLOW2, "?? ?????, ????? ? ???? ?? ????????????? ?? ??????? ?????.");
			        SendClientMessage(i, COLOR_YELLOW2, "???? ?????? ??????????? ?? ?????? ????? ?????????? ??? ????? ??????? /w id ??????, ???????? ?????? ???????.");
			        SendClientMessage(i, COLOR_YELLOW2, "?????? ?? ???? ??????");
			        SendClientMessage(i, COLOR_YELLOW2, "??? ?????? ??????... ??? ???? ??????????? ????????. ???? ??????? http://gta-gflife.ucoz.ru/");
			        SendClientMessage(i, COLOR_YELLOW2, "??? ????? ???????? ????????, ?? ??????? ????????????? ???????? ?? ?????? ????????.");
			    }
			    else if(TutTime[i] == 74)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "|____??????.____|");
			    }
			    else if(TutTime[i] == 76)
			    {
			        SendClientMessage(i, COLOR_YELLOW2, "???? ?? ?? ??????? ??????? ?? ?????? ? ????? ???? ?????? ?????????? ? ??????????????.");
			        SendClientMessage(i, COLOR_YELLOW2, "????????? ?????????????? ????? ? ??????? ?? ?????????.");
			        SendClientMessage(i, COLOR_YELLOW2, "???? ? ??? ???? ??????????? ???????? ??? ?? ??????.");
			        SendClientMessage(i, COLOR_YELLOW2, "?????? ? ?????????? ????? ????????? ?? ?????? ? ?????? ?????????.");
			    }
			    else if(TutTime[i] == 96)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "|____????????????.____|");
			    }
			    else if(TutTime[i] == 98)
			    {
			        SendClientMessage(i, COLOR_YELLOW2, "???? ?? ????? ?????-???? ???????? ?????????? ???????? ?????? ???? ?? ???? ? ??????.");
			        SendClientMessage(i, COLOR_YELLOW2, "???? ?? ????? 3 ???? ? ??????.");
			        SendClientMessage(i, COLOR_YELLOW2, "? ?????? ?????? ?????? ??? ? 3 ??????, ????? ??? ??????? ?????????? ?????????????");
			    }
			    else if(TutTime[i] == 108)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "|_______??????_______|");
			    }
			    else if(TutTime[i] == 110)
			    {
			        SendClientMessage(i, COLOR_YELLOW2, "?? ???? ??????? ????? ??????? ?? ??????. ?????? ????? ??? ???? ??????? ?");
			        SendClientMessage(i, COLOR_YELLOW2, "???????? ????? ?????????????? ???????. ??????????? ?????? ???????, ???????? ????????");
			    }
			    else if(TutTime[i] == 119)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "|____????????.____|");
			    }
			    else if(TutTime[i] == 121)
			    {
			        SendClientMessage(i, COLOR_YELLOW2, "???? ????? ?? ???? - ?? ????????? ????????? ???.");
			        SendClientMessage(i, COLOR_YELLOW2, "?????? ???? ???? ? ???? ?? ?????.");
			        SendClientMessage(i, COLOR_YELLOW2, "???? ?? ?????????, ? ? ??? ?????? ??? ?????, ??? ???? ?? ?????? ????????? /sync");
			    }
			    else if(TutTime[i] == 127)
			    {
			        TutTime[i] = 0; PlayerInfo[i][pTut] = 1;
					gOoc[i] = 0; gNews[i] = 0; gFam[i] = 0;
					TogglePlayerControllable(i, 1);
					MedicBill[i] = 0;
					SetPlayerSpawn(i);
			    }
			}
			if(PlayerTazeTime[i] >= 1)
			{
			    PlayerTazeTime[i] += 1;
			    if(PlayerTazeTime[i] == 15)
			    {
                    PlayerTazeTime[i] = 0;
			    }
			    else
			    {
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
			    }
			}
			if(PlayerDrunk[i] >= 5)
			{
			    PlayerDrunkTime[i] += 1;
			    if(PlayerDrunkTime[i] == 8)
			    {
			        PlayerDrunkTime[i] = 0;
					ApplyAnimation(i,"PED", "WALK_DRUNK",4.0,0,1,0,0,0);
			    }
			}
			if(PlayerStoned[i] >= 2)
			{
		        PlayerStoned[i] += 1;
			    if(PlayerStoned[i] == 10)
			    {
			        PlayerStoned[i] = 2;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    SetPlayerFacingAngle(i, angle + 90);
					}
			    }
			}
			if(PlayerInfo[i][pCarTime] > 0)
			{
			    if(PlayerInfo[i][pCarTime] <= 0)
			    {
			        PlayerInfo[i][pCarTime] = 0;
			    }
			    else
			    {
			        PlayerInfo[i][pCarTime] -= 1;
			    }
			}
			if(PlayerInfo[i][pVorTime] > 0)
			{
			    if(PlayerInfo[i][pVorTime] <= 0)
			    {
			        PlayerInfo[i][pVorTime] = 0;
			    }
			    else
			    {
			        PlayerInfo[i][pVorTime] -= 1;
			    }
			}
			if(BoxWaitTime[i] > 0)
			{
			    if(BoxWaitTime[i] >= BoxDelay)
				{
				    BoxDelay = 0;
					BoxWaitTime[i] = 0;
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					GameTextForPlayer(i, "~g~Match Started", 5000, 1);
					TogglePlayerControllable(i, 1);
					RoundStarted = 1;
				}
			    else
				{
				    format(string, sizeof(string), "%d", BoxDelay - BoxWaitTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					BoxWaitTime[i] += 1;
				}
			}
			if(RoundStarted > 0)
			{
			    if(GetPVarInt(i, "PlayerBoxing") > 0)
			    {
			        new trigger = 0;
			        new Lost = 0;
		        	new Float:angle;
		            new Float:health;
					GetPlayerHealth(i, health);
		            if(health < 12)
					{
					    if(i == Boxer1) { Lost = 1; trigger = 1; }
			            else if(i == Boxer2) { Lost = 2; trigger = 1; }
					}
			        if(health < 28) { GetPlayerFacingAngle(i, angle); SetPlayerFacingAngle(i, angle + 85); }
			        if(trigger)
			        {
			            new winner[MAX_PLAYER_NAME];
			            new loser[MAX_PLAYER_NAME];
			            new titel[MAX_PLAYER_NAME];
			            if(Lost == 1)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, loser, sizeof(loser));
			                	GetPlayerName(Boxer2, winner, sizeof(winner));
		                		if(PlayerInfo[Boxer1][pJob] == 12) { PlayerInfo[Boxer1][pLoses] += 1; }
								if(PlayerInfo[Boxer2][pJob] == 12) { PlayerInfo[Boxer2][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer2)
				                	    {
				                	        if(PlayerInfo[Boxer2][pJob] == 10)
				                	        {
				                	            TBoxer = Boxer2;
				                	            GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(string, sizeof(string), "??????? ?????: %s ??????? ?????? ?????? ???????? %s ? ???????? ?????? ????? ????????? ?????.",  titel, loser);
												OOCOff(COLOR_WHITE,string);
				                	        }
				                	        else
				                	        {
				                	            SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "* ?? ???? ?? ?????????, ???? ? ??? ???? ?????? ??????? !");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(string, sizeof(string), "??????? ?????: ??????? %s ??????? ?????? ?????? %s.",  titel, loser);
											OOCOff(COLOR_WHITE,string);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer2][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(string, sizeof(string), "* ?? ????????? ?????? %s.", winner);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer1, "~r~You lost", 3500, 1);
								format(string, sizeof(string), "* ?? ???????? ?????? ?????? %s.", loser);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer2, "~r~You won", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "* ?? ?????????? ???? ??????????? ?? ??????, ???????, ??????? ???-??????.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "* ?? ?????????? ???? ?????????, ???? ????? ??????.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "* ?? ?????????? ???? ??????????? ?? ??????, ???????, ??????? ???-??????.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "* ?? ?????????? ???? ?????????, ???? ????? ??????.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Match Over", 5000, 1); GameTextForPlayer(Boxer2, "~g~Match Over", 5000, 1);
								if(PlayerInfo[Boxer2][pJob] == 10) { PlayerInfo[Boxer2][pBoxSkill] += 1; }
                                SetPVarInt(Boxer1, "PlayerBoxing", 0);
								SetPVarInt(Boxer2, "PlayerBoxing", 0);
							}
			            }
			            else if(Lost == 2)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, winner, sizeof(winner));
			                	GetPlayerName(Boxer2, loser, sizeof(loser));
		                		if(PlayerInfo[Boxer2][pJob] == 10) { PlayerInfo[Boxer2][pLoses] += 1; }
								if(PlayerInfo[Boxer1][pJob] == 10) { PlayerInfo[Boxer1][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer1)
				                	    {
				                	        if(PlayerInfo[Boxer1][pJob] == 10)
				                	        {
					                	        TBoxer = Boxer1;
					                	        GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(string, sizeof(string), "??????? ?????: %s ??????? ?????? ?????? ???????? %s ? ???????? ?????? ????? ????????? ?????.",  titel, loser);
												OOCOff(COLOR_WHITE,string);
											}
				                	        else
				                	        {
				                	            SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "* ?? ???? ?? ?????????, ???? ? ??? ???? ?????? ??????? !");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(string, sizeof(string), "??????? ?????: ??????? %s ??????? ?????? ?????? %s.",  titel, loser);
											OOCOff(COLOR_WHITE,string);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(string, sizeof(string), "* ?? ????????? ?????? %s.", winner);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer2, "~r~You lost", 3500, 1);
								format(string, sizeof(string), "* ?? ???????? ?????? ?????? %s.", loser);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer1, "~g~You won", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "* ?? ?????????? ???? ?????????? ?? ??????, ???????, ??????? ???-??????.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "* ?? ?????????? ???? ?????????, ???? ????? ??????.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "* ?? ?????????? ???? ?????????? ?? ??????, ???????, ??????? ???-??????.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "* ?? ?????????? ???? ?????????, ???? ????? ??????.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Match Over", 5000, 1); GameTextForPlayer(Boxer2, "~g~Match Over", 5000, 1);
								if(PlayerInfo[Boxer1][pJob] == 10) { PlayerInfo[Boxer1][pBoxSkill] += 1; }
								SetPVarInt(Boxer1, "PlayerBoxing", 0);
								SetPVarInt(Boxer2, "PlayerBoxing", 0);
							}
			            }
			            InRing = 0;
			            RoundStarted = 0;
			            Boxer1 = 255;
			            Boxer2 = 255;
			            TBoxer = 255;
			            trigger = 0;
			        }
			    }
			}
			if(StartingPaintballRound == 1 && AnnouncedPaintballRound == 0)
			{
			    AnnouncedPaintballRound = 1;
			    if(PlayerPaintballing[i] != 0)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "? ????????? ??????? ????? 15 ?????? (??? ????, ????? ???????? ?????? ??????? ??????????).");
			    }
			}
			if(StartingKartRound == 1 && AnnouncedKartRound == 0)
			{
			    AnnouncedKartRound = 1;
			    if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "? ????? ???????? ??????? ????? 15 ?????? (??? ????, ????? ???????? ?????? ???????? ?????).");
			    }
			}
			if(EndingKartRound == 1)
			{
			    if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
			    {
			        DisablePlayerCheckpoint(i);
			        CP[i] = 0;
			    }
			}
			if(FindTime[i] > 0)
			{
			    if(FindTime[i] == FindTimePoints[i]) { FindTime[i] = 0; FindTimePoints[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
			    else
				{
				    format(string, sizeof(string), "%d", FindTimePoints[i] - FindTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					FindTime[i] += 1;
				}
			}
			if(GetPVarInt(i, "TaxiCallTime") > 0)
			{
			    if(GetPVarInt(i,"TaxiAccepted") < 999)
			    {
				    if(IsPlayerConnected(GetPVarInt(i,"TaxiAccepted")))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(GetPVarInt(i,"TaxiAccepted"), X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(GetPVarInt(i, "BusCallTime") > 0)
			{
			    if(GetPVarInt(i,"BusAccepted") < 999)
			    {
				    if(IsPlayerConnected(GetPVarInt(i,"BusAccepted")))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(GetPVarInt(i,"BusAccepted"), X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(GetPVarInt(i, "MedicCallTime") > 0)
			{
			    if(GetPVarInt(i, "MedicCallTime") == 30) { SetPVarInt(i, "MedicCallTime", 0); DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
			    else
				{
				    format(string, sizeof(string), "%d", 30 - GetPVarInt(i, "MedicCallTime"));
					GameTextForPlayer(i, string, 1500, 6);
					new vacya = GetPVarInt(i,"MedicCallTime");
					SetPVarInt(i, "MedicCallTime",vacya +=1 );
				}
			}
			if(GetPVarInt(i, "MechanicCallTime") > 0)
			{
			    if(GetPVarInt(i, "MechanicCallTime") == 30) { SetPVarInt(i, "MechanicCallTime", 0); DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
			    else
				{
				    format(string, sizeof(string), "%d", 30 - GetPVarInt(i, "MechanicCallTime"));
					GameTextForPlayer(i, string, 1500, 6);
					new vacya = GetPVarInt(i,"MechanicCallTime");
                    SetPVarInt(i, "MechanicCallTime", vacya += 1);
				}
			}
			if(Robbed[i] == 1)
			{
			    if(RobbedTime[i] <= 0)
			    {
			        RobbedTime[i] = 0;
					Robbed[i] = 0;
			    }
			    else
			    {
			        RobbedTime[i] -= 1;
			    }
			}
			if(PlayerCuffed[i] == 1)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			        PlayerTazeTime[i] = 1;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
			if(PlayerCuffed[i] == 2)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        GameTextForPlayer(i, "~r~You broke the Cuffs, you are free!", 2500, 3);
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
			if(PlayerToPoint(20, i,2015.4500,1017.0900,996.8750))
			{//Four Dragons
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(20, i,2233.9099,1710.7300,1011.2987))
			{//Caligula
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(10, i,2265.7900,1619.5800,1090.4453))
			{//Caligula Roof 1
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(10, i,2265.7800,1675.9301,1090.4453))
			{//Caligula Roof 2
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(20, i,1133.0699,-9.5731,1000.6797))
			{//West Casino place
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(20, i,292.0274,-36.0291,1001.5156))
			{//Ammunation 1
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
			else if(PlayerToPoint(20, i,308.2740,-141.2833,999.6016))
			{//Ammunation 2
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
			else if(PlayerToPoint(20, i,294.3212,-108.7869,1001.5156))
			{//Ammunation 3 (small one's)
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
			else if(PlayerToPoint(20, i,288.8592,-80.4535,1001.5156))
			{//Ammunation 4 (small one's)
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
			else if(PlayerToPoint(20, i,316.9583,-165.4707,999.6010))
			{//Ammunation 5 (Unprotected)
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
		}
	}
}

public CheckGas()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
    	if(IsPlayerConnected(i))
       	{
       	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
       	    {
	       		new vehicle = GetPlayerVehicleID(i);
	        	if(Gas[vehicle] >= 1)
		   		{
					if(IsAPlane(vehicle) || IsABoat(vehicle)) { Gas[vehicle]++; }
	              	Gas[vehicle]--;
		   		}
			}
    	}
	}
	return 1;
}

public Check1()
{
	new string[256];
	for(new i=0;i<MAX_PLAYERS;i++)
	{
    	if(IsPlayerConnected(i))
       	{
       	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
       	    {
	       		new vehicle = GetPlayerVehicleID(i);
	        	if(Gas[vehicle] >= 1)
		   		{
		   		    new Float:X,Float:Y,Float:Z,Float:PointToPoint;
		   		    GetVehicleVelocity(vehicle, X, Y, Z);
		   		    PointToPoint = (floatsqroot(floatpower(X, 2) + floatpower(Y, 2) + floatpower(Z, 2)))*100;
		      		format(string, sizeof(string), "??????: %d\n????????: %d",Gas[vehicle],floatround(PointToPoint, floatround_floor));
					Update3DTextLabelText(speedom[i],COLOR_WHITE,string);
		   		}
	   			else
	           	{
	              	NoFuel[i] = 1;
	              	TogglePlayerControllable(i, 0);
                    Update3DTextLabelText(speedom[i],COLOR_RED,"?????? ????????\n/exit - ????? ?? ?????");
				}
			}
    	}
	}
	return 1;
}

public Fillup()
{
	for(new i=0; i<MAX_PLAYERS; i++)
   	{
	   	if(IsPlayerConnected(i))
	   	{
		    new VID;
		    new FillUp;
		    new string[256];
		    VID = GetPlayerVehicleID(i);
		    FillUp = GasMax - Gas[VID];
			if(Refueling[i] == 1)
		    {
				if(GetPlayerMoney(i) >= FillUp+4)
				{
					Gas[VID] += FillUp;
					FillUp = FillUp * SBizzInfo[3][sbEntranceCost];
				    format(string,sizeof(string),"* ???? ?????????? ?? $%d.",FillUp);
				    SendClientMessage(i,COLOR_LIGHTBLUE,string);
					GivePlayerMoney(i, - FillUp);
					SBizzInfo[3][sbTill] += FillUp;
					ExtortionSBiz(3, FillUp);
					Refueling[i] = 0;
				}
			   	else
			   	{
			   	    format(string,sizeof(string),"* ? ??? ????????? ?????, ????? ????????? ???? ???????????? ????????",FillUp);
				    SendClientMessage(i,COLOR_LIGHTBLUE,string);
			   	}
		 	}
		}
	}
	return 1;
}

public StoppedVehicle()
{
	new Float:x,Float:y,Float:z;
	new Float:distance,value;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInAnyVehicle(i))
			{
				new VID;
				VID = GetPlayerVehicleID(i);
				GetPlayerPos(i, x, y, z);
				distance = floatsqroot(floatpower(floatabs(floatsub(x,SavePlayerPos[i][LastX])),2)+floatpower(floatabs(floatsub(y,SavePlayerPos[i][LastY])),2)+floatpower(floatabs(floatsub(z,SavePlayerPos[i][LastZ])),2));
				value = floatround(distance * 7200);
				if(UpdateSeconds > 1)
				{
					value = floatround(value / UpdateSeconds);
				}
				if(SpeedMode)
				{
	            }
				if(value == 0)
				{
					Gas[VID]++;
				}
				SavePlayerPos[i][LastX] = x;
				SavePlayerPos[i][LastY] = y;
				SavePlayerPos[i][LastZ] = z;
			}
		}
	}
	return 1;
}

public SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    ResetPlayerWeapons(playerid);
	    if(PlayerInfo[playerid][pJailed] < 1)
	    {
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
				GivePlayerWeapon(playerid, 41, 1500); //spray
				GivePlayerWeapon(playerid, 3, 1);
				if(OnDuty[playerid] == 1 || PlayerInfo[playerid][pMember] == 2)//Cops & FBI/ATF
				{
					GivePlayerWeapon(playerid, 41, 1500); //spray
					GivePlayerWeapon(playerid, 3, 1);
					if(PlayerInfo[playerid][pChar] == 285)//SWAT
					{
						GivePlayerWeapon(playerid, 41, 1500); //spray
						GivePlayerWeapon(playerid, 3, 1);
					}
					else if(PlayerInfo[playerid][pChar] == 287)//Army
					{
						GivePlayerWeapon(playerid, 41, 1500); //spray
						GivePlayerWeapon(playerid, 3, 1);
					}
				}
				if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//National Guard
				{
					GivePlayerWeapon(playerid, 41, 1500); //spray
					GivePlayerWeapon(playerid, 3, 1);
				}
			}
			if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
			{
   	            GivePlayerWeapon(playerid, 24, 25);
			}
			if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
			{
   	            GivePlayerWeapon(playerid, 24, 25);
   	            GivePlayerWeapon(playerid, 4, 1);
			}
			if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
			{
   	            GivePlayerWeapon(playerid, 24, 25);
			}
			if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
			{
   	            GivePlayerWeapon(playerid, 24, 25);
   	            GivePlayerWeapon(playerid, 1, 1);
			}
			if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
			{
   	            GivePlayerWeapon(playerid, 24, 25);
			}
			if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
			{
   	            GivePlayerWeapon(playerid, 24, 25);
			}
			if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
			{
   	            GivePlayerWeapon(playerid, 24, 25);
   			}
			if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
			{
   	            GivePlayerWeapon(playerid, 24, 35);
   			}
			if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
			{
   	            GivePlayerWeapon(playerid, 24, 35);
   	            GivePlayerWeapon(playerid, 29, 60);
			}
			if(gTeam[playerid] >= 3)
			{
				GivePlayerWeapon(playerid, 5, 0);
			}
			if(PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
			{
   	            GivePlayerWeapon(playerid, 24, 35);
   	            GivePlayerWeapon(playerid, 6, 1);
			}
			if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
			{
			    GivePlayerWeapon(playerid, 8, 1);
   	            GivePlayerWeapon(playerid, 24, 35);
			}
			if(PlayerInfo[playerid][pDonateRank] > 0)
			{
				if (PlayerInfo[playerid][pGun1] > 0)
				{
					GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun1], PlayerInfo[playerid][pAmmo1]);
					PlayerInfo[playerid][pGun1] = 0; PlayerInfo[playerid][pAmmo1] = 0;
				}
				if (PlayerInfo[playerid][pGun2] > 0)
				{
					GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun2], PlayerInfo[playerid][pAmmo2]);
					PlayerInfo[playerid][pGun2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
				}
				if (PlayerInfo[playerid][pGun3] > 0)
				{
					GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun3], PlayerInfo[playerid][pAmmo3]);
					PlayerInfo[playerid][pGun3] = 0; PlayerInfo[playerid][pAmmo3] = 0;
				}
				if (PlayerInfo[playerid][pGun4] > 0)
				{
					GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun4], PlayerInfo[playerid][pAmmo4]);
					PlayerInfo[playerid][pGun4] = 0; PlayerInfo[playerid][pAmmo4] = 0;
				}
			}
			else
			{
			    if (PlayerInfo[playerid][pGun1] > 0)
				{
					GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun1], PlayerInfo[playerid][pAmmo1]);
					PlayerInfo[playerid][pGun1] = 0; PlayerInfo[playerid][pAmmo1] = 0;
				}
				if (PlayerInfo[playerid][pGun2] > 0)
				{
					GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun2], PlayerInfo[playerid][pAmmo2]);
					PlayerInfo[playerid][pGun2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
				}
			}
		}
	}
}

public PrintSBizInfo(playerid,targetid)
{
	if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		format(coordsstring, sizeof(coordsstring),"*** %s ***",SBizzInfo[targetid][sbMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "????????: %d ????: $%d ??: $%d", SBizzInfo[targetid][sbLocked], SBizzInfo[targetid][sbEntranceCost], SBizzInfo[targetid][sbTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "????????: %d/%d ??????????????: %s", SBizzInfo[targetid][sbProducts],SBizzInfo[targetid][sbMaxProducts],SBizzInfo[targetid][sbExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
}

public PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		format(coordsstring, sizeof(coordsstring),"*** %s ***",BizzInfo[targetid][bMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "????????: %d ????: $%d ??: $%d", BizzInfo[targetid][bLocked], BizzInfo[targetid][bEntranceCost], BizzInfo[targetid][bTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "????????: %d/%d ??????????????: %s", BizzInfo[targetid][bProducts],BizzInfo[targetid][bMaxProducts],BizzInfo[targetid][bExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new cash =  GetPlayerMoney(targetid);
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "male"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "female"; }
  		new otext[20];
		if(PlayerInfo[targetid][pOrigin] == 1) { otext = "???????"; }
		else if(PlayerInfo[targetid][pOrigin] == 2) { otext = "??????"; }
		else if(PlayerInfo[targetid][pOrigin] == 3) { otext = "?????"; }
		new ttext[25];
		if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) { ttext = "Medic"; }
		else if(gTeam[targetid] == 3 || gTeam[targetid] == 4) { ttext = "?????????"; }
		else if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1) { ttext = "???????"; }
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2) { ttext = "???"; }
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3) { ttext = "?????"; }
		else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) { ttext = "??????????????"; }
		else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5) { ttext = "LCN"; }
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6) { ttext = "Yakuza"; }
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8) { ttext = "Hitmen"; }
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9) { ttext = "News Reporter"; }
		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10) { ttext = "Taxi"; }
		else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11) { ttext = "School Instructor"; }
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12) { ttext = "Flaming Cobra Gang"; }
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13) { ttext = "??????? ?????"; }
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14) { ttext = "Grove Street Gang"; }
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15) { ttext = "El Coronas Gang"; }
		else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16) { ttext = "The Ballas Gang"; }
		else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17) { ttext = "The Rife Gang"; }
		else if(PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18) { ttext = "Los Santos Vagos Gang"; }
		else if(PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19) { ttext = "??"; }
		else if(PlayerInfo[targetid][pMember] == 21 || PlayerInfo[targetid][pLeader] == 21) { ttext = "??????"; }
		new dtext[20];
		if(STDPlayer[targetid] == 1) { dtext = "Chlamydia"; }
		else if(STDPlayer[targetid] == 2) { dtext = "Gonorrhea"; }
		else if(STDPlayer[targetid] == 3) { dtext = "Syphilis"; }
		else { dtext = "None"; }
	    new ftext[25];
	    if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4)
		{ ftext = "??????????????"; }
  		else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5)
		{ ftext = "La Cosa Nostra"; }
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6)
		{ ftext = "Yakuza"; }
		else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11)
		{ ftext = "License Faction"; }
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12)
		{ ftext = "Flaming Cobra Gang"; }
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13)
		{ ftext = "??????? ?????"; }
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14)
		{ ftext = "Grove Street Gang"; }
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15)
		{ ftext = "El Coronas Gang"; }
		else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16)
		{ ftext = "The Ballas Gang"; }
		else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17)
		{ ftext = "The Rife Gang"; }
		else if(PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18)
		{ ftext = "Los Santos Vagos Gang"; }
		else if(PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19)
		{ ftext = "??"; }
		else if(PlayerInfo[targetid][pMember] == 21 || PlayerInfo[targetid][pLeader] == 21)
		{ ftext = "??????"; }
		else
		{ ftext = "None"; }
		new f2text[20];
	    if(PlayerInfo[targetid][pFMember] < 255) { f2text = FamilyInfo[PlayerInfo[targetid][pFMember]][FamilyName]; }
		else { f2text = "None"; }
	    new rtext[64];
	    if(gTeam[targetid] == 5 || PlayerInfo[targetid][pFMember] < 255)//The 2 Organisations
	    {
        	if(PlayerInfo[targetid][pRank] == 1) { rtext = "Outsider"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Associate"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Soldier"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Capo"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Underboss"; }
  			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Godfather"; }
			else { rtext = "Godfather"; }
		}
		else if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1)//PD Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "??????? LSPD"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "??.??????? LSPD"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "??????? LSPD"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "??.??????? LSPD"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "???????? LSPD"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "????????? LSPD"; }
	        else if(PlayerInfo[targetid][pRank] == 7) { rtext = "??.????????? LSPD"; }
	        else if(PlayerInfo[targetid][pRank] == 8) { rtext = "??.????????? LSPD"; }
	        else if(PlayerInfo[targetid][pRank] == 9) { rtext = "????????? LSPD"; }
	        else if(PlayerInfo[targetid][pRank] == 10) { rtext = "??.????????? LSPD"; }
	        else if(PlayerInfo[targetid][pRank] == 11) { rtext = "??????? LSPD"; }
	        else if(PlayerInfo[targetid][pRank] == 12) { rtext = "????? LSPD"; }
	        else if(PlayerInfo[targetid][pRank] == 13) { rtext = "???????????? LSPD"; }
	        else if(PlayerInfo[targetid][pRank] == 14) { rtext = "????????? LSPD"; }
	        else if(PlayerInfo[targetid][pRank] == 15) { rtext = "??????? LSPD"; }
			else { rtext = "??????? LSPD"; }
		}
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2)//FBI Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "??????"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "??.?????"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "?????"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "??.?????"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "??????????? ?????"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "??????????? ????? ??????"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "????? ??????"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "????????? ???"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "??????????? ?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 10) { rtext = "????????"; }
			else { rtext = "????????"; }
		}
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3)//NG Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "???????"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "????????"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "??.???????"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "???????"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "??.???????"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "????????"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "??.?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "??.?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 10) { rtext = "?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 11) { rtext = "??.?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 12) { rtext = "???????"; }
		    else if(PlayerInfo[targetid][pRank] == 13) { rtext = "?????"; }
		    else if(PlayerInfo[targetid][pRank] == 14) { rtext = "????????????"; }
		    else if(PlayerInfo[targetid][pRank] == 15) { rtext = "?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 16) { rtext = "???????-?????"; }
		    else if(PlayerInfo[targetid][pRank] == 17) { rtext = "???????-?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 18) { rtext = "???????-?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 19) { rtext = "??????? ?????"; }
		    else if(PlayerInfo[targetid][pRank] == 20) { rtext = "??????? ???????"; }
			else { rtext = "??????? ????????"; }
		}
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8)//Hitman Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Freelancer"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Marksman"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Agent"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Special Agent"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Vice-Director"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Director"; }
			else { rtext = "Director"; }
		}
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9)//NR Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Intern"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Local Reporter"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Local Editor"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Network Anchor"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Network Editor"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Network Producer"; }
			else { rtext = "Network Producer"; }
		}
		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10)//Taxi Company Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Trainee"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Taxi Rookie"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Cabbie"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Dispatcher"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Shift Supervisor"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Taxi Company Owner"; }
			else { rtext = "Taxi Company Owner"; }
		}
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6)
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "??????"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "?????"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "???????????"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "??????????"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "??-???????"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "?????"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "?????"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "????? ?????"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "????? ?????"; }
		    else if(PlayerInfo[targetid][pRank] == 10) { rtext = "??????"; }
			else { rtext = "??????"; }
		}
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12)
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "???????"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "??????"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "???????"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "????????? ?????"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "?????????? ??????"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "?????? ????"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "????"; }
			else { rtext = "????"; }
		}
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13)
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "?????"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "?????"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "????????"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "??????"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "????????? ?????"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "?????"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "???"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "??? ? ??????"; }
		    else if(PlayerInfo[targetid][pRank] == 10) { rtext = "?????"; }
			else { rtext = "?????"; }
		}
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14)
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "???????"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "????????????"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "???????????"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "????"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "????????"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "???????"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "?????? ????"; }
		    else if(PlayerInfo[targetid][pRank] == 10) { rtext = "??????"; }
			else { rtext = "??????"; }
		}
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15)
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Stanger"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Novato"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Verificado"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Soldato"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Gangster"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Cutthroat"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Autoridad"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Gestion"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Cabeza"; }
		    else if(PlayerInfo[targetid][pRank] == 10) { rtext = "Capitulo"; }
		    else if(PlayerInfo[targetid][pRank] == 11) { rtext = "Adjutno"; }
		    else if(PlayerInfo[targetid][pRank] == 12) { rtext = "Padre"; }
			else { rtext = "Padre"; }
		}
		else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16)
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "?????"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "??????"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "???????"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "?????"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "???????????"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "??????????"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "???????"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "??????"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "??????"; }
		    else if(PlayerInfo[targetid][pRank] == 10) { rtext = "?????"; }
		    else if(PlayerInfo[targetid][pRank] == 11) { rtext = "??????"; }
		    else if(PlayerInfo[targetid][pRank] == 12) { rtext = "??????"; }
		    else if(PlayerInfo[targetid][pRank] == 13) { rtext = "???????"; }
		    else if(PlayerInfo[targetid][pRank] == 14) { rtext = "????"; }
		    else if(PlayerInfo[targetid][pRank] == 15) { rtext = "?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 16) { rtext = "?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 17) { rtext = "??????"; }
			else { rtext = "??????"; }
		}
		else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17)
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "????"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "????????"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "??????"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "????????"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "????????"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "??????"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "?????"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "??????"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "????????"; }
		    else if(PlayerInfo[targetid][pRank] == 10) { rtext = "????????"; }
		    else if(PlayerInfo[targetid][pRank] == 11) { rtext = "??????"; }
		    else if(PlayerInfo[targetid][pRank] == 12) { rtext = "?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 13) { rtext = "????????"; }
		    else if(PlayerInfo[targetid][pRank] == 14) { rtext = "?????"; }
			else { rtext = "?????"; }
		}
		else if(PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18)
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "?????"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "??????????"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "???????"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "???????"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "??????????"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "?????"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "???????"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "??????"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "?????????"; }
		    else if(PlayerInfo[targetid][pRank] == 10) { rtext = "?????? ????"; }
		    else if(PlayerInfo[targetid][pRank] == 11) { rtext = "?????"; }
			else { rtext = "?????"; }
		}
		else if(PlayerInfo[targetid][pMember] == 21 || PlayerInfo[targetid][pLeader] == 21)
		{
			if(PlayerInfo[targetid][pRank] == 1) { rtext = "???????"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "??????????"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "???????"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "??????"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "??????"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "???????????"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "?????????"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rtext = "???"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rtext = "?????? ????"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rtext = "?????"; }
			else { rtext = "?????"; }
		}
		else if(IsAnInstructor(targetid))//Driving/Flying School Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Trainee"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Instructor"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Senior Instructor"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Manager"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Under Boss"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Boss"; }
			else { rtext = "Boss"; }
		}
		else
		{
		    rtext = "None";
		}
        new jtext[20];
        if(PlayerInfo[targetid][pJob] == 1) { jtext = "????????"; }
        else if(PlayerInfo[targetid][pJob] == 2) { jtext = "???????"; }
        else if(PlayerInfo[targetid][pJob] == 3) { jtext = "?????"; }
        else if(PlayerInfo[targetid][pJob] == 4) { jtext = "?????????????"; }
        else if(PlayerInfo[targetid][pJob] == 5) { jtext = "???? ???????"; }
        else if(PlayerInfo[targetid][pJob] == 6) { jtext = "????????"; }
        else if(PlayerInfo[targetid][pJob] == 7) { jtext = "????????"; }
        else if(PlayerInfo[targetid][pJob] == 8) { jtext = "?????????????"; }
        else if(PlayerInfo[targetid][pJob] == 9) { jtext = "?????????"; }
        else if(PlayerInfo[targetid][pJob] == 10) { jtext = "??????????"; }
		else if(PlayerInfo[targetid][pJob] == 12) { jtext = "??????"; }
        else if(PlayerInfo[targetid][pJob] == 14) { jtext = "???????? ????????"; }
        else if(PlayerInfo[targetid][pJob] == 15) { jtext = "????????? ?????"; }
        else if(PlayerInfo[targetid][pJob] == 16) { jtext = "????????"; }
        else if(PlayerInfo[targetid][pJob] == 17) { jtext = "???"; }
        else { jtext = "None"; }
		new drank[20];
		if(PlayerInfo[targetid][pDonateRank] == 1) { drank = "Power User"; }
		else if(PlayerInfo[targetid][pDonateRank] >= 2) { drank = "Donater"; }
		else { drank = "None"; }
		new married[20];
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
		new age = PlayerInfo[targetid][pAge];
		new ptime = PlayerInfo[targetid][pConnectTime];
		new lotto = PlayerInfo[targetid][pLottoNr];
		new deaths = PlayerInfo[targetid][pDeaths];
		new fishes = PlayerInfo[targetid][pFishes];
		new bigfish = PlayerInfo[targetid][pBiggestFish];
		new crimes = PlayerInfo[targetid][pCrimes];
		new arrests = PlayerInfo[targetid][pArrested];
		new warrests = PlayerInfo[targetid][pWantedDeaths];
		new drugs = PlayerInfo[targetid][pDrugs];
		new mats = PlayerInfo[targetid][pMats];
		new wanted = WantedLevel[targetid];
		new level = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pExp];
		new kills = PlayerInfo[targetid][pKills];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new account = PlayerInfo[targetid][pAccount];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		new costlevel = nxtlevel*levelcost;//10k for testing purposes
		new housekey = PlayerInfo[targetid][pPhousekey];
		new bizkey = PlayerInfo[targetid][pPbiskey];
		new intir = PlayerInfo[targetid][pInt];
		new local = PlayerInfo[targetid][pLocal];
		new Float:shealth = PlayerInfo[targetid][pSHealth];
		new Float:health;
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);
		new coordsstring[256];
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		format(coordsstring, sizeof(coordsstring),"*** %s ***",name);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "???????:[%d] ???:[%s] ???????:[%d] ??????:[%s] ???????? ??? ??????:[%.1f] ???????? ??????:[$%d] ????:[$%d] ???????:[%d]", level,atext,age,otext,shealth+50, cash, account, pnumber);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "VIP ??????:[%s] ?????(??)??:[%s] ????? ? ????:[%d] ?????????? ?????:[%d] ??????:[%s]", drank,married,ptime,lotto,jtext);
		SendClientMessage(playerid, COLOR_GRAD3,coordsstring);
		format(coordsstring, sizeof(coordsstring), "???? ???????:[%d] ????? ??????? ????:[%d] ????????? ????????????:[%d] ????? ??????????:[%d] ??????? ??? ???????:[%d]", fishes,bigfish,crimes,arrests,warrests );
		SendClientMessage(playerid, COLOR_GRAD4,coordsstring);
		format(coordsstring, sizeof(coordsstring), "????? ???????:[%d] ????? ???????:[%d] ????????? ????????? ??????:[$%d] ????????:[%d/%d] ??????? ???????:[%d] ?????:[%s]",kills,deaths,costlevel,exp,expamount,wanted,f2text);
		SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
		format(coordsstring, sizeof(coordsstring), "?????????:[%d] ?????????:[%d] ??????:[%s] ???????:[%s] ???????????:[%s] ????:[%s]",drugs,mats,ttext,dtext,ftext,rtext);
		SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			format(coordsstring, sizeof(coordsstring), "?????? ?? ????? [%d] ?????? ?? ???????? [%d] HireKey [%d] ????????:[%d] ?????????[%d]", housekey,bizkey,HireCar[targetid],intir,local);
			SendClientMessage(playerid, COLOR_GRAD6,coordsstring);
		}
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
}
//---------------------------------------------------------

public SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    SetPlayerColor(playerid,TEAM_HIT_COLOR); // white
	}
}

//---------------------------------------------------------

public GameModeInitExitFunc()
{
	new string[128];
	format(string, sizeof(string), "Traveling...");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
			GameTextForPlayer(i, string, 4000, 5);
			SetPlayerCameraPos(i,1460.0, -1324.0, 287.2);
			SetPlayerCameraLookAt(i,1374.5, -1291.1, 239.0);
			OnPlayerUpdate_GF(i);
			gPlayerLogged[i] = 0;
		}
	}
	SetTimer("GameModeExitFunc", 4000, 0);
	return 1;
}

public GameModeExitFunc()
{
	KillTimer(synctimer);
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(accountstimer);
	KillTimer(checkgastimer);
	KillTimer(check1timer);
	KillTimer(idletimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(stoppedvehtimer);
	KillTimer(timer[1]);
	KillTimer(timer[2]);
	KillTimer(timer[3]);
	KillTimer(timer[4]);
	KillTimer(timer[5]);
	KillTimer(timer[6]);
	KillTimer(timer[7]);
	KillTimer(timer[8]);
	KillTimer(timer[9]);
	KillTimer(timer[10]);
	KillTimer(timer[11]);
	KillTimer(timer[12]);
	KillTimer(timer[13]);
	KillTimer(timer[14]);
	KillTimer(timer[15]);
	KillTimer(timer[16]);
	KillTimer(timer[17]);
	KillTimer(rek);
	GameModeExit();
}

//------------------------------------------------------------------------------------------------------
public SaveMission(playerid,name[])
{
	if(IsPlayerConnected(playerid))
	{
	    new coordsstring[256];
	    new missionname[64];
		new var[128];
		new makername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, makername, sizeof(makername));
		new rand = random(999);
		if(rand == 0) { rand = 1; }
		new number = rand;
		if(MissionInfo[mToggle] == 0 || MissionInfo[mToggle] == 1) { }
		else { MissionInfo[mToggle] = 1; }
		format(missionname, sizeof(missionname), "%s.mis",name);
		new File: hFile = fopen(missionname, io_write);
		format(var, 128, "Title=%s\n", MissionInfo[mTitle]);fwrite(hFile, var);
		format(var, 128, "Maker=%s\n", makername);fwrite(hFile, var);
		format(var, 128, "Text1=%s\n", MissionInfo[mText1]);fwrite(hFile, var);
		format(var, 128, "Text2=%s\n", MissionInfo[mText2]);fwrite(hFile, var);
		format(var, 128, "Text3=%s\n", MissionInfo[mText3]);fwrite(hFile, var);
		format(var, 128, "Text4=%s\n", MissionInfo[mText4]);fwrite(hFile, var);
		format(var, 128, "Text5=%s\n", MissionInfo[mText5]);fwrite(hFile, var);
		format(var, 128, "Text6=%s\n", MissionInfo[mText6]);fwrite(hFile, var);
		format(var, 128, "Text7=%s\n", MissionInfo[mText7]);fwrite(hFile, var);
		format(var, 128, "Text8=%s\n", MissionInfo[mText8]);fwrite(hFile, var);
		format(var, 128, "Text9=%s\n", MissionInfo[mText9]);fwrite(hFile, var);
		format(var, 128, "Text10=%s\n", MissionInfo[mText10]);fwrite(hFile, var);
		format(var, 128, "Text11=%s\n", MissionInfo[mText11]);fwrite(hFile, var);
		format(var, 128, "Text12=%s\n", MissionInfo[mText12]);fwrite(hFile, var);
		format(var, 128, "Text13=%s\n", MissionInfo[mText13]);fwrite(hFile, var);
		format(var, 128, "Text14=%s\n", MissionInfo[mText14]);fwrite(hFile, var);
		format(var, 128, "Text15=%s\n", MissionInfo[mText15]);fwrite(hFile, var);
		format(var, 128, "Text16=%s\n", MissionInfo[mText16]);fwrite(hFile, var);
		format(var, 128, "Text17=%s\n", MissionInfo[mText17]);fwrite(hFile, var);
		format(var, 128, "Text18=%s\n", MissionInfo[mText18]);fwrite(hFile, var);
		format(var, 128, "GText1=%s\n", MissionInfo[mGText1]);fwrite(hFile, var);
		format(var, 128, "GText2=%s\n", MissionInfo[mGText2]);fwrite(hFile, var);
		format(var, 128, "GText3=%s\n", MissionInfo[mGText3]);fwrite(hFile, var);
		format(var, 128, "GText4=%s\n", MissionInfo[mGText4]);fwrite(hFile, var);
		format(var, 128, "GText5=%s\n", MissionInfo[mGText5]);fwrite(hFile, var);
		format(var, 128, "GText6=%s\n", MissionInfo[mGText6]);fwrite(hFile, var);
		format(var, 128, "CP1X=%f\n", MissionInfo[mCP1][0]);fwrite(hFile, var);
		format(var, 128, "CP1Y=%f\n", MissionInfo[mCP1][1]);fwrite(hFile, var);
		format(var, 128, "CP1Z=%f\n", MissionInfo[mCP1][2]);fwrite(hFile, var);
		format(var, 128, "CP2X=%f\n", MissionInfo[mCP2][0]);fwrite(hFile, var);
		format(var, 128, "CP2Y=%f\n", MissionInfo[mCP2][1]);fwrite(hFile, var);
		format(var, 128, "CP2Z=%f\n", MissionInfo[mCP2][2]);fwrite(hFile, var);
		format(var, 128, "CP3X=%f\n", MissionInfo[mCP3][0]);fwrite(hFile, var);
		format(var, 128, "CP3Y=%f\n", MissionInfo[mCP3][1]);fwrite(hFile, var);
		format(var, 128, "CP3Z=%f\n", MissionInfo[mCP3][2]);fwrite(hFile, var);
		format(var, 128, "CP4X=%f\n", MissionInfo[mCP4][0]);fwrite(hFile, var);
		format(var, 128, "CP4Y=%f\n", MissionInfo[mCP4][1]);fwrite(hFile, var);
		format(var, 128, "CP4Z=%f\n", MissionInfo[mCP4][2]);fwrite(hFile, var);
		format(var, 128, "CP5X=%f\n", MissionInfo[mCP5][0]);fwrite(hFile, var);
		format(var, 128, "CP5Y=%f\n", MissionInfo[mCP5][1]);fwrite(hFile, var);
		format(var, 128, "CP5Z=%f\n", MissionInfo[mCP5][2]);fwrite(hFile, var);
		format(var, 128, "CP6X=%f\n", MissionInfo[mCP6][0]);fwrite(hFile, var);
		format(var, 128, "CP6Y=%f\n", MissionInfo[mCP6][1]);fwrite(hFile, var);
		format(var, 128, "CP6Z=%f\n", MissionInfo[mCP6][2]);fwrite(hFile, var);
		format(var, 128, "Number=%d\n", number);fwrite(hFile, var);
		format(var, 128, "Reward=%d\n", MissionInfo[mReward]);fwrite(hFile, var);
		format(var, 128, "Toggle=%d\n", MissionInfo[mToggle]);fwrite(hFile, var);
		fclose(hFile);
		format(coordsstring, sizeof(coordsstring), "%s ????????? ??????.",name);
		SendClientMessage(playerid, COLOR_GREEN,coordsstring);
	}
	return 1;
}

public LoadMission(playerid,name[])
{
	if(IsPlayerConnected(playerid))
	{
		new strFromFile2[128];
		new missionname[64];
		format(missionname, sizeof(missionname), "%s.mis",name);
		new File: file = fopen(missionname, io_read);
		if (file)
		{
		    new key[ 256 ] , val[ 256 ];
		    new Data[ 256 ];
		    while ( fread( file , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Title" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kTitle], val, 0, strlen(val), 255); }
				if( strcmp( key , "Maker" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kMaker], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText1], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText2], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText3], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText4], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text5" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText5], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text6" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText6], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text7" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText7], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text8" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText8], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text9" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText9], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text10" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText10], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text11" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText11], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text12" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText12], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text13" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText13], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text14" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText14], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text15" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText15], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text16" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText16], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text17" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText17], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text18" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText18], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText1], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText2], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText3], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText4], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText5" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText5], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText6" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText6], val, 0, strlen(val), 255); }
				if( strcmp( key , "CP1X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP1][0] = floatstr( val ); }
				if( strcmp( key , "CP1Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP1][1] = floatstr( val ); }
				if( strcmp( key , "CP1Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP1][2] = floatstr( val ); }
				if( strcmp( key , "CP2X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP2][0] = floatstr( val ); }
				if( strcmp( key , "CP2Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP2][1] = floatstr( val ); }
				if( strcmp( key , "CP2Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP2][2] = floatstr( val ); }
				if( strcmp( key , "CP3X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP3][0] = floatstr( val ); }
				if( strcmp( key , "CP3Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP3][1] = floatstr( val ); }
				if( strcmp( key , "CP3Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP3][2] = floatstr( val ); }
				if( strcmp( key , "CP4X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP4][0] = floatstr( val ); }
				if( strcmp( key , "CP4Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP4][1] = floatstr( val ); }
				if( strcmp( key , "CP4Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP4][2] = floatstr( val ); }
				if( strcmp( key , "CP5X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP5][0] = floatstr( val ); }
				if( strcmp( key , "CP5Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP5][1] = floatstr( val ); }
				if( strcmp( key , "CP5Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP5][2] = floatstr( val ); }
				if( strcmp( key , "CP6X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP6][0] = floatstr( val ); }
				if( strcmp( key , "CP6Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP6][1] = floatstr( val ); }
				if( strcmp( key , "CP6Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP6][2] = floatstr( val ); }
				if( strcmp( key , "Number" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kNumber] = strval( val ); }
				if( strcmp( key , "Reward" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kReward] = strval( val ); }
				if( strcmp( key , "Toggle" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kToggle] = strval( val ); }
			}
			fclose(file);
			format(strFromFile2, sizeof(strFromFile2), "%s ??????????? ??????.",name);
			SendClientMessage(playerid, COLOR_GREEN,strFromFile2);
			format(strFromFile2, sizeof(strFromFile2), "????????? ??????: %s: %s | ???????: $%d",PlayMission[kTitle],PlayMission[kMaker],PlayMission[kReward]);
			SendClientMessageToAll(COLOR_GREEN, strFromFile2);
			MissionPlayable = PlayMission[kNumber];
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREEN,"???? ??????, ?? ?????????.");
		}
	}
	return 1;
}

public LoadBoxer()
{
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("boxer.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Titel[TitelWins] = strval(arrCoords[0]);
		strmid(Titel[TitelName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
		Titel[TitelLoses] = strval(arrCoords[2]);
		fclose(file);
	}
	return 1;
}

public SaveBoxer()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%s,%d", Titel[TitelWins],Titel[TitelName],Titel[TitelLoses]);
	new File: file2 = fopen("boxer.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadStuff()
{
	new arrCoords[4][64];
	new strFromFile2[256];
	new File: file = fopen("stuff.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		TaxValue = strval(arrCoords[2]);
		Security = strval(arrCoords[3]);
		fclose(file);
		if(Security == 0 || Security == 1)
		{
		}
		else
		{
		    GameModeExit();
		}
	}
	else
	{
	    GameModeExit();
	}
	return 1;
}

public SaveStuff()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d", Jackpot,Tax,TaxValue,Security);
	new File: file2 = fopen("stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadIRC()
{
	new arrCoords[5][64];
	new strFromFile2[256];
	new File: file = fopen("channels.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(IRCInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(IRCInfo[idx][iAdmin], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(IRCInfo[idx][iMOTD], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(IRCInfo[idx][iPassword], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			IRCInfo[idx][iNeedPass] = strval(arrCoords[3]);
			IRCInfo[idx][iLock] = strval(arrCoords[4]);
			printf("IRC:%d Admin:%s MOTD: %s Password: %s NeedPass: %d Lock: %d",idx,IRCInfo[idx][iAdmin],IRCInfo[idx][iMOTD],IRCInfo[idx][iPassword],IRCInfo[idx][iNeedPass],IRCInfo[idx][iLock]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveIRC()
{
	new idx;
	new File: file2;
	while (idx < sizeof(IRCInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%s|%d|%d\n",
		IRCInfo[idx][iAdmin],
		IRCInfo[idx][iMOTD],
		IRCInfo[idx][iPassword],
		IRCInfo[idx][iNeedPass],
		IRCInfo[idx][iLock]);
		if(idx == 0)
		{
			file2 = fopen("channels.cfg", io_write);
		}
		else
		{
			file2 = fopen("channels.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadCK()
{
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("ck.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(CKInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(CKInfo[idx][cSendername], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(CKInfo[idx][cGiveplayer], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			CKInfo[idx][cUsed] = strval(arrCoords[2]);
			printf("CK:%d Taken: %d Sendername:%s Giveplayer: %s",
			idx,CKInfo[idx][cUsed],CKInfo[idx][cSendername],CKInfo[idx][cGiveplayer]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveCK()
{
	new idx;
	new File: file2;
	while (idx < sizeof(CKInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%d\n",
		CKInfo[idx][cSendername],
		CKInfo[idx][cGiveplayer],
		CKInfo[idx][cUsed]);
		if(idx == 0)
		{
			file2 = fopen("ck.cfg", io_write);
		}
		else
		{
			file2 = fopen("ck.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadFamilies()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("families.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(FamilyInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			FamilyInfo[idx][FamilyTaken] = strval(arrCoords[0]);
			strmid(FamilyInfo[idx][FamilyName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(FamilyInfo[idx][FamilyMOTD], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(FamilyInfo[idx][FamilyColor], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			strmid(FamilyInfo[idx][FamilyLeader], arrCoords[4], 0, strlen(arrCoords[4]), 255);
			FamilyInfo[idx][FamilyMembers] = strval(arrCoords[5]);
			FamilyInfo[idx][FamilySpawn][0] = floatstr(arrCoords[6]);
			FamilyInfo[idx][FamilySpawn][1] = floatstr(arrCoords[7]);
			FamilyInfo[idx][FamilySpawn][2] = floatstr(arrCoords[8]);
			FamilyInfo[idx][FamilySpawn][3] = floatstr(arrCoords[9]);
			FamilyInfo[idx][FamilyInterior] = strval(arrCoords[10]);
			printf("Family:%d Taken: %d Name:%s MOTD:%s Leader:%s Members:%d SpawnX:%f SpawnY:%f SpawnZ:%f Int:%d",
			idx,FamilyInfo[idx][FamilyTaken],FamilyInfo[idx][FamilyName],FamilyInfo[idx][FamilyMOTD],FamilyInfo[idx][FamilyLeader],FamilyInfo[idx][FamilyMembers],FamilyInfo[idx][FamilySpawn][0],FamilyInfo[idx][FamilySpawn][1],FamilyInfo[idx][FamilySpawn][2],FamilyInfo[idx][FamilyInterior]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveFamilies()
{
	new idx;
	new File: file2;
	while (idx < sizeof(FamilyInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%s|%d|%f|%f|%f|%f|%d\n",
		FamilyInfo[idx][FamilyTaken],
		FamilyInfo[idx][FamilyName],
		FamilyInfo[idx][FamilyMOTD],
		FamilyInfo[idx][FamilyColor],
		FamilyInfo[idx][FamilyLeader],
		FamilyInfo[idx][FamilyMembers],
		FamilyInfo[idx][FamilySpawn][0],
		FamilyInfo[idx][FamilySpawn][1],
		FamilyInfo[idx][FamilySpawn][2],
		FamilyInfo[idx][FamilySpawn][3],
		FamilyInfo[idx][FamilyInterior]);
		if(idx == 0)
		{
			file2 = fopen("families.cfg", io_write);
		}
		else
		{
			file2 = fopen("families.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadPapers()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("papers.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(PaperInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			PaperInfo[idx][PaperUsed] = strval(arrCoords[0]);
			strmid(PaperInfo[idx][PaperMaker], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(PaperInfo[idx][PaperTitle], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(PaperInfo[idx][PaperText1], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			strmid(PaperInfo[idx][PaperText2], arrCoords[4], 0, strlen(arrCoords[4]), 255);
			strmid(PaperInfo[idx][PaperText3], arrCoords[5], 0, strlen(arrCoords[5]), 255);
			strmid(PaperInfo[idx][PaperText4], arrCoords[6], 0, strlen(arrCoords[6]), 255);
			strmid(PaperInfo[idx][PaperText5], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			strmid(PaperInfo[idx][PaperText6], arrCoords[8], 0, strlen(arrCoords[8]), 255);
			strmid(PaperInfo[idx][PaperText7], arrCoords[9], 0, strlen(arrCoords[9]), 255);
			PaperInfo[idx][SafeSaving] = strval(arrCoords[10]);
			printf("Paper:%d Used: %d Maker:%s Title: %s Text1: %s Text2: %s Text3: %s Text4: %s Text5: %s Text6: %s Text7: %s",
			idx,PaperInfo[idx][PaperUsed],PaperInfo[idx][PaperMaker],PaperInfo[idx][PaperTitle],PaperInfo[idx][PaperText1],PaperInfo[idx][PaperText2],PaperInfo[idx][PaperText3],PaperInfo[idx][PaperText4],PaperInfo[idx][PaperText5],PaperInfo[idx][PaperText6],PaperInfo[idx][PaperText7]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SavePapers()
{
	new idx;
	new File: file2;
	while (idx < sizeof(IRCInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%s|%s|%s|%s|%s|%s|%d\n",
		PaperInfo[idx][PaperUsed],
		PaperInfo[idx][PaperMaker],
		PaperInfo[idx][PaperTitle],
		PaperInfo[idx][PaperText1],
		PaperInfo[idx][PaperText2],
		PaperInfo[idx][PaperText3],
		PaperInfo[idx][PaperText4],
		PaperInfo[idx][PaperText5],
		PaperInfo[idx][PaperText6],
		PaperInfo[idx][PaperText7],
		PaperInfo[idx][SafeSaving]);
		if(idx == 0)
		{
			file2 = fopen("papers.cfg", io_write);
		}
		else
		{
			file2 = fopen("papers.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadProperty()
{
	new arrCoords[30][64];
	new strFromFile2[256];
	new File: file = fopen("property.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[0]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[1]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[2]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[3]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[5]);
			HouseInfo[idx][hHealthx] = strval(arrCoords[6]);
			HouseInfo[idx][hHealthy] = strval(arrCoords[7]);
			HouseInfo[idx][hHealthz] = strval(arrCoords[8]);
			HouseInfo[idx][hArmourx] = strval(arrCoords[9]);
			HouseInfo[idx][hArmoury] = strval(arrCoords[10]);
			HouseInfo[idx][hArmourz] = strval(arrCoords[11]);
			//printf("HouseInfo hEntrancez %f",HouseInfo[idx][hEntrancez]);
			strmid(HouseInfo[idx][hOwner], arrCoords[12], 0, strlen(arrCoords[12]), 255);
			strmid(HouseInfo[idx][hDiscription], arrCoords[13], 0, strlen(arrCoords[13]), 255);
			HouseInfo[idx][hValue] = strval(arrCoords[14]);
			HouseInfo[idx][hHel] = strval(arrCoords[15]);
			HouseInfo[idx][hArm] = strval(arrCoords[16]);
			HouseInfo[idx][hInt] = strval(arrCoords[17]);
			HouseInfo[idx][hLock] = strval(arrCoords[18]);
			HouseInfo[idx][hOwned] = strval(arrCoords[19]);
			HouseInfo[idx][hRooms] = strval(arrCoords[20]);
			HouseInfo[idx][hRent] = strval(arrCoords[21]);
			HouseInfo[idx][hRentabil] = strval(arrCoords[22]);
			HouseInfo[idx][hTakings] = strval(arrCoords[23]);
			HouseInfo[idx][hVec] = strval(arrCoords[24]);
  	        if(HouseInfo[idx][hVec] == 457)
			{
				HouseInfo[idx][hVec] = 411;
			}
			HouseInfo[idx][hVcol1] = strval(arrCoords[25]);
			HouseInfo[idx][hVcol2] = strval(arrCoords[26]);
			HouseInfo[idx][hDate] = strval(arrCoords[27]);
			HouseInfo[idx][hLevel] = strval(arrCoords[28]);
			HouseInfo[idx][hVirtual] = strval(arrCoords[29]);
			printf("HouseInfo:%d Owner:%s hTakings %d hVec %d",idx,HouseInfo[idx][hOwner],HouseInfo[idx][hTakings],HouseInfo[idx][hVec]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public LoadBizz()
{
	new arrCoords[19][64];
	new strFromFile2[256];
	new File: file = fopen("bizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(BizzInfo[idx][bMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(BizzInfo[idx][bExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			BizzInfo[idx][bEntranceX] = floatstr(arrCoords[4]);
			BizzInfo[idx][bEntranceY] = floatstr(arrCoords[5]);
			BizzInfo[idx][bEntranceZ] = floatstr(arrCoords[6]);
			BizzInfo[idx][bExitX] = floatstr(arrCoords[7]);
			BizzInfo[idx][bExitY] = floatstr(arrCoords[8]);
			BizzInfo[idx][bExitZ] = floatstr(arrCoords[9]);
			BizzInfo[idx][bLevelNeeded] = strval(arrCoords[10]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[11]);
			BizzInfo[idx][bEntranceCost] = strval(arrCoords[12]);
			BizzInfo[idx][bTill] = strval(arrCoords[13]);
			BizzInfo[idx][bLocked] = strval(arrCoords[14]);
			BizzInfo[idx][bInterior] = strval(arrCoords[15]);
			BizzInfo[idx][bProducts] = strval(arrCoords[16]);
			BizzInfo[idx][bMaxProducts] = strval(arrCoords[17]);
			BizzInfo[idx][bPriceProd] = strval(arrCoords[18]);
			printf("BizzInfo:%d Owner:%s Message:%s Entfee:%d Till:%d Products:%d/%d Interior:%d.\n",
			idx,
			BizzInfo[idx][bOwner],
			BizzInfo[idx][bMessage],
			BizzInfo[idx][bEntranceCost],
			BizzInfo[idx][bTill],
			BizzInfo[idx][bProducts],
			BizzInfo[idx][bMaxProducts],
			BizzInfo[idx][bInterior]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}


public LoadSBizz()
{
	new arrCoords[16][64];
	new strFromFile2[256];
	new File: file = fopen("sbizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(SBizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
			strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(SBizzInfo[idx][sbExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[4]);
			SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[5]);
			SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[6]);
			SBizzInfo[idx][sbLevelNeeded] = strval(arrCoords[7]);
			SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[8]);
			SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[9]);
			SBizzInfo[idx][sbTill] = strval(arrCoords[10]);
			SBizzInfo[idx][sbLocked] = strval(arrCoords[11]);
			SBizzInfo[idx][sbInterior] = strval(arrCoords[12]);
			SBizzInfo[idx][sbProducts] = strval(arrCoords[13]);
			SBizzInfo[idx][sbMaxProducts] = strval(arrCoords[14]);
			SBizzInfo[idx][sbPriceProd] = strval(arrCoords[15]);
			printf("SBizzInfo:%d Owner:%s Message:%s Entfee:%d Till:%d Products:%d/%d Interior:%d.\n",
			idx,
			SBizzInfo[idx][sbOwner],
			SBizzInfo[idx][sbMessage],
			SBizzInfo[idx][sbEntranceCost],
			SBizzInfo[idx][sbTill],
			SBizzInfo[idx][sbProducts],
			SBizzInfo[idx][sbMaxProducts],
			SBizzInfo[idx][sbInterior]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

//------------------------------------------------------------------------------------------------------
public OnGameModeInit()
{
    new string[MAX_PLAYER_NAME];
    new string1[MAX_PLAYER_NAME];
    ////////////////////////TEXTDRAW//////////////////////////
    Textdraw0 = TextDrawCreate(484.000000,4.000000,"gta-gflife.ucoz.ru");
	TextDrawAlignment(Textdraw0,0);
	TextDrawBackgroundColor(Textdraw0,0x000000FF);
	TextDrawFont(Textdraw0,1);
	TextDrawLetterSize(Textdraw0,0.399999,2.000000);
	TextDrawColor(Textdraw0,0x18EF74AA);
	TextDrawSetOutline(Textdraw0,1);
	TextDrawSetProportional(Textdraw0,1);
	TextDrawSetShadow(Textdraw0,1);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	
	gz[1] = GangZoneCreate(-426.9,-1502.0,-339.9,-1362.9);//??????
	gz[2] = GangZoneCreate(805.9,-1130.6,952.4,-1072.3);//??????
	gz[3] = GangZoneCreate(2768.1,-1628.6,2803.2,-1599.6);//?????
	gz[4] = GangZoneCreate(2441.9,-1722.1,2540.0,-1628.9);//?????
	gz[5] = GangZoneCreate(1759.9,-1941.1,1809.4,-1882.2);//??? ???????
	gz[6] = GangZoneCreate(-2156.5,-280.0,-2097.5,-80.8);//????
	gz[7] = GangZoneCreate(725.0,-1308.6,782.4,-1143.4);//??????
	gz[8] = GangZoneCreate(643.2,-1308.6,725.0,-1232.3);//??????
	
	pizza1  = CreatePickup(1239,23,-2350.8,-152.2,35.3);
	pizza2  = CreatePickup(1239,23,1213.5,-904.0,42.9);
	pizza3  = CreatePickup(1239,23,801.0,-1629.1,13.3);
	pizza3  = CreatePickup(1239,23,-2342.5,1023.2,50.6);
	ammmo = CreatePickup(1318,23,2176.4,1619.1,999.9);
	CreatePickup(1239,23,999.7,-927.0,42.1);//??? ?????
	CreatePickup(1318,23,2231.3,-1159.8,25.8);
	CreatePickup(1318,23,1315.2,-900.2,39.5);
	CreatePickup(1318,23,1199.1,-919.8,43.1);
	CreatePickup(1318,23,927.1,-1352.7,13.3);
	CreatePickup(1318,23,813.0,-1616.0,13.5);
	CreatePickup(1318,23,1553.6,-1674.8,16.1);
	CreatePickup(1318,23,1831.5,-1843.3,13.5);
	CreatePickup(1318,23,1834.4,-1681.7,13.4);
	CreatePickup(1318,23,1698.1,-1667.1,20.1);
	CreatePickup(1318,23,-2026.6,-100.6,35.1);
	CreatePickup(1318,23,-2029.7,-122.4,35.1);
	CreatePickup(1318,23,2421.5,-1221.7,25.3);
	CreatePickup(1318,23,2795.1,-1619.4,10.9);
	CreatePickup(1318,23,2542.1,-1304.1,1025.0);
	
	for(new c=0;c<CAR_AMOUNT;c++)
	{
		Gas[c] = GasMax;
	}
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	vorota[1] = CreateObject(980, 2434.4155273438, -1658.9686279297, 15.156204223633, 0.000000, 0.000000, 89.325012207031); //Groove vor
	vorota[2] = CreateObject(2930, 245.53210449219, 72.665069580078, 1005.1773681641, 0.000000, 0.000000, 89.324493408203); //cop dver
	vorota[3] = CreateObject(980, 1590.0573730469, -1637.974609375, 14.743314743042, 0.000000, 0.000000, 0.000000); //cop vorota
	vorota[4] = CreateObject(968, -2057.2194824219, -93.959411621094, 34.896781921387, 0.000000, 89.325012207031, 271.67565917969); //Inst Wlak
	vorota[5] = CreateObject(980, -1771.3582763672, 985.01013183594, 25.74254989624, 0.000000, 0.000000, 91.309509277344); //taksitam vor
	vorota[6] = CreateObject(980, -2127.4970703125, -80.352951049805, 37.093704223633, 0.000000, 0.000000, 0.000000); //rifa vor
	vorota[7] = CreateObject(980, -2655.1635742188, -220.13265991211, 5.9620780944824, 0.000000, 0.000000, 0.000000); //Rus mafi vor1
	vorota[8] = CreateObject(980, -2805.3542480469, -329.96215820313, 8.8046417236328, 0.000000, 0.000000, 85.3544921875); //Rus mafi vor2
	vorota[9] = CreateObject(980, -2241.0717773438, 643.40679931641, 51.219596862793, 0.000000, 0.000000, 91.309509277344); //lCN vor
	vorota[10] = CreateObject(980, 1811.6849365234, -1889.6431884766, 15.187454223633, 0.000000, 0.000000, 270.67565917969); //Coronos vor
	vorota[11] = CreateObject(985, 2794.314209, -1600.132080, 11.638983, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));// Vagos vorota
	vorota[12] = CreateObject(985, 949.809387, -1099.472900, 24.754459, 0.000000*(90/1.56), 0.000000*(90/1.56), 1.570796*(90/1.56));//ballas vorota
	vorota[13] = CreateObject(985, 949.776978, -1107.248169, 24.756630, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));//ballas vorota
	vorota[14] = CreateObject(980, -1644.6872558594, 682.34130859375, 9.4969673156738, 0.000000, 0.000000, 90.041625976563); //Cop vor
	vorota[15] = CreateObject(980, -1571.8803710938, 661.48571777344, 8.9608917236328, 0.000000, 0.000000, 270.67565917969); //Cop vor
	vorota[16] = CreateObject(980, 778.30541992188, -1330.1901855469, 13.725944519043, 0.000000, 0.000000, 358.01556396484); // biker vorota
	vorota[17] = CreateObject(971,-1530.263305,482.800567,9.424772,0.000000,0.000000,0.000000);//vojaki vorota
	vorota[18] = CreateObject(985, -385.283020, -1409.267700, 26.383427, 0.000000*(90/1.56), 0.000000*(90/1.56), 3.337942*(90/1.56));//kolzoh vorota
	vorota[19] = CreateObject(985, -377.564758, -1407.747437, 26.270031, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.196350*(90/1.56));//kolzoh vorota

	vorota[22] = CreateObject(980, 660.100464, -1227.394653, 17.702566, 0.000000*(90/1.56), 0.000000*(90/1.56), 1.178097*(90/1.56));//???
	vorota[23] = CreateObject(980, 664.801147, -1309.616455, 15.234329, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));//???
	vorota[24] = CreateObject(980, 786.174866, -1152.311279, 25.380497, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));//???

	CreateObject(987, 665.119324, -1219.016602, 17.189217, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.589049*(90/1.56));//???
	
    CreateObject(985, 2802.213135, -1600.037231, 11.812474, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, -358.039398, -1467.793457, 24.726563, 0.000000*(90/1.56), 0.000000*(90/1.56), -3.141592*(90/1.56));
	CreateObject(987, -379.253387, -1467.629883, 24.726563, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, -390.880615, -1467.568848, 24.726563, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, -402.776703, -1467.537476, 24.726563, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, -414.545135, -1467.421753, 24.726563, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, -414.118134, -1455.455078, 24.719303, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));
	CreateObject(987, -413.957672, -1443.685913, 24.511101, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));
	CreateObject(987, -413.874756, -1432.365723, 24.201429, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));
	CreateObject(987, -414.003357, -1420.727417, 23.694628, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));
	CreateObject(987, -357.761902, -1467.626099, 24.726563, 0.000000*(90/1.56), 0.000000*(90/1.56), -4.908738*(90/1.56));
	CreateObject(987, -355.987549, -1458.231934, 23.810863, 0.000000*(90/1.56), 0.000000*(90/1.56), 1.570796*(90/1.56));
	CreateObject(987, -356.623260, -1447.127319, 22.664650, 0.000000*(90/1.56), 0.000000*(90/1.56), 1.570796*(90/1.56));
	CreateObject(987, -356.554077, -1435.630981, 22.567200, 0.000000*(90/1.56), 0.000000*(90/1.56), 1.374447*(90/1.56));
	CreateObject(987, -354.585999, -1426.964600, 22.244619, 0.000000*(90/1.56), 0.000000*(90/1.56), 1.570796*(90/1.56));
	CreateObject(987, -414.119232, -1412.804565, 23.114460, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));
	CreateObject(987, -355.927368, -1404.381958, 23.499802, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.374447*(90/1.56));
	CreateObject(987, -366.904236, -1406.214478, 24.056515, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.196350*(90/1.56));
	CreateObject(987, -413.929443, -1412.911987, 23.415070, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, -401.970215, -1412.960449, 24.726563, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.196350*(90/1.56));
	CreateObject(987, -398.663208, -1411.694580, 24.992268, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.196350*(90/1.56));
	CreateObject(987, -375.462524, -1407.482422, 24.550655, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.196350*(90/1.56));
//	CreateObject(985, -393.604431, -1410.991333, 26.453381, 0.000000*(90/1.56), 0.000000*(90/1.56), 3.337942*(90/1.56));
//	CreateObject(985, -369.916138, -1406.418213, 25.739368, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.196350*(90/1.56));

	CreateObject(985, 949.113892, -1097.202759, 24.801094, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.589049*(90/1.56));
	CreateObject(986, 949.256714, -1109.655396, 24.787430, 0.000000*(90/1.56), 0.000000*(90/1.56), 2.552544*(90/1.56));
	CreateObject(986, 832.614502, -1069.485352, 25.906284, 0.000000*(90/1.56), 0.000000*(90/1.56), -0.392699*(90/1.56));
	CreateObject(987, 952.315857, -1122.636597, 25.033485, 0.000000*(90/1.56), 0.000000*(90/1.56), -4.712389*(90/1.56));
	CreateObject(987, 952.532959, -1118.766968, 25.059105, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));
	CreateObject(987, 952.604126, -1130.518921, 25.059105, 0.000000*(90/1.56), 0.000000*(90/1.56), -3.141593*(90/1.56));
	CreateObject(987, 941.254333, -1130.691162, 25.059105, 0.000000*(90/1.56), 0.000000*(90/1.56), -3.141593*(90/1.56));
	CreateObject(987, 929.297974, -1130.771362, 25.059113, 0.000000*(90/1.56), 0.000000*(90/1.56), 3.141592*(90/1.56));
	CreateObject(987, 917.528992, -1130.703491, 25.059113, 0.000000*(90/1.56), 0.000000*(90/1.56), -3.141592*(90/1.56));
	CreateObject(987, 905.772400, -1130.758667, 25.028793, 0.000000*(90/1.56), 0.000000*(90/1.56), 3.141593*(90/1.56));
	CreateObject(987, 893.814331, -1130.616821, 25.028793, 0.000000*(90/1.56), 0.000000*(90/1.56), 3.141592*(90/1.56));
	CreateObject(987, 881.891357, -1130.638550, 25.028770, 0.000000*(90/1.56), 0.000000*(90/1.56), 3.141592*(90/1.56));
	CreateObject(987, 870.083679, -1130.559082, 25.028793, 0.000000*(90/1.56), 0.000000*(90/1.56), 3.141593*(90/1.56));
	CreateObject(987, 858.170715, -1130.636108, 25.028793, 0.000000*(90/1.56), 0.000000*(90/1.56), 3.141593*(90/1.56));
	CreateObject(987, 846.311279, -1130.577026, 25.031250, 0.000000*(90/1.56), 0.000000*(90/1.56), 3.141592*(90/1.56));
	CreateObject(987, 834.354431, -1130.704590, 25.031250, 0.000000*(90/1.56), 0.000000*(90/1.56), 3.141592*(90/1.56));
	CreateObject(987, 822.570801, -1130.355957, 25.031250, 0.000000*(90/1.56), 0.000000*(90/1.56), 3.141592*(90/1.56));
	CreateObject(987, 819.052368, -1130.361938, 25.031250, 0.000000*(90/1.56), 0.000000*(90/1.56), 3.141593*(90/1.56));
	CreateObject(987, 807.765442, -1130.113403, 25.031250, 0.000000*(90/1.56), 0.000000*(90/1.56), 1.570796*(90/1.56));
	CreateObject(987, 807.740234, -1118.170288, 25.031250, 0.000000*(90/1.56), 0.000000*(90/1.56), 1.570796*(90/1.56));
	CreateObject(987, 807.868896, -1106.359619, 25.096188, 0.000000*(90/1.56), 0.000000*(90/1.56), 1.570796*(90/1.56));
	CreateObject(987, 807.398804, -1094.591309, 25.301416, 0.000000*(90/1.56), 0.000000*(90/1.56), 1.570796*(90/1.56));
	CreateObject(987, 807.066101, -1083.603394, 25.479431, 0.000000*(90/1.56), 0.000000*(90/1.56), 1.570796*(90/1.56));
	CreateObject(987, 807.100342, -1071.831909, 27.282158, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.196350*(90/1.56));
	CreateObject(987, 818.178711, -1070.563232, 27.228905, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.196350*(90/1.56));
	CreateObject(987, 829.245178, -1069.303711, 26.969519, 0.000000*(90/1.56), 0.000000*(90/1.56), -0.392699*(90/1.56));
	CreateObject(987, 835.811951, -1071.511475, 26.314051, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, 847.444519, -1071.489380, 26.296875, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, 856.817566, -1071.412476, 26.296875, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, 868.693787, -1071.230957, 26.102627, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.981748*(90/1.56));
	CreateObject(987, 876.724792, -1055.048950, 31.500000, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, 874.724304, -1060.786987, 26.296875, 0.000000*(90/1.56), 0.000000*(90/1.56), 1.374447*(90/1.56));
	CreateObject(987, 888.527649, -1055.131104, 31.500000, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, 900.589111, -1055.077881, 31.500000, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, 912.764099, -1055.080688, 31.500000, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, 924.843994, -1054.979614, 31.500000, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, 936.667603, -1055.030884, 31.500000, 0.000000*(90/1.56), 0.000000*(90/1.56), 0.000000*(90/1.56));
	CreateObject(987, 952.318176, -1055.528442, 30.380585, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));
	CreateObject(987, 952.664063, -1083.816895, 25.885580, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));
	CreateObject(987, 952.664063, -1071.196899, 26.323868, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));
	CreateObject(987, 952.573364, -1061.989136, 29.012077, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));
	CreateObject(987, 952.651978, -1067.356079, 27.810638, 0.000000*(90/1.56), 0.000000*(90/1.56), -1.570796*(90/1.56));

	CreateObject(3268,-1540.568359375,370.18872070313,6.1875,0.0,0.0,270.67565917969);//anagari
	CreateObject(3268,-1578.794921875,371.1376953125,6.1875,0.0,0.0,270.67565917969);//anagari
	CreateObject(3268,-1242.599609375,457.52703857422,6.1875,0.0,0.0,359.99975585938);//anagari
	CreateObject(987, 2434.478515625, -1664.8897705078, 12.538145065308, 0.000000, 0.000000, 270.67504882813); //
	CreateObject(987, 2437.1889648438, -1629.8522949219, 12.388566017151, 0.000000, 0.000000, 256.77526855469); //
	CreateObject(987, 2434.4584960938, -1641.4851074219, 12.472394943237, 0.000000, 0.000000, 270.67016601563); //
	CreateObject(987, 2434.1906738281, -1677.0251464844, 12.714471817017, 0.000000, 0.000000, 270.67016601563); //
	CreateObject(988, 2521.8291015625, -1722.1689453125, 10.546875, 0.000000, 0.000000, 0.000000); //
	CreateObject(976, 2540.8486328125, -1708.3206787109, 11.41738319397, 0.000000, 0.000000, 268.69067382813); //
	CreateObject(976, 2484.9609375, -1722.0787353516, 11.304681777954, 0.000000, 0.000000, 178.65002441406); //
	CreateObject(2954, 252.06875610352, 91.885498046875, 1001.4453125, 0.000000, 0.000000, 270.67504882813); //
	CreateObject(5130, -1335.2305908203, 478.75714111328, 8.2766666412354, 0.000000, 0.000000, 224.28601074219); //
	CreateObject(986, -1730.1606445313, 261.70446777344, 7.8125057220459, 0.000000, 0.000000, 337.25); //
	CreateObject(3113, -1465.7447509766, 501.33978271484, 1.0750004053116, 0.000000, 0.000000, 0.000000); //
	CreateObject(3279, -1538.9410400391, 477.01568603516, 6.1875, 0.000000, 0.000000, 0.000000); //
	CreateObject(8674, -2017.134765625, -85.417419433594, 35.78882598877, 0.000000, 0.000000, 270.67565917969); //
	CreateObject(8674, -2017.0037841797, -95.708938598633, 35.790504455566, 0.000000, 0.000000, 270.67565917969); //
	CreateObject(8674, -2016.9802246094, -97.683807373047, 35.807758331299, 0.000000, 0.000000, 270.67565917969); //
	CreateObject(8674, -2022.3270263672, -80.231727600098, 35.720729827881, 0.000000, 0.000000, 180.35131835938); //
	CreateObject(8674, -2032.0068359375, -80.2294921875, 35.712223052979, 0.000000, 0.000000, 179.84069824219); //
	CreateObject(8674, -2037.1789550781, -85.374206542969, 35.737224578857, 0.000000, 0.000000, 270.67565917969); //
	CreateObject(8674, -2062.4201660156, -80.281394958496, 35.780986785889, 0.000000, 0.000000, 179.84069824219); //
	CreateObject(8674, -2072.7236328125, -80.206855773926, 35.787227630615, 0.000000, 0.000000, 179.84069824219); //
	CreateObject(8674, -2083.0603027344, -80.182327270508, 35.787227630615, 0.000000, 0.000000, 179.84069824219); //
	CreateObject(8674, -2093.30859375, -80.328704833984, 35.787227630615, 0.000000, 0.000000, 181.82568359375); //
	CreateObject(8674, -2057.1413574219, -85.557411193848, 35.787227630615, 0.000000, 0.000000, 90.51611328125); //
	CreateObject(966, -2057.1967773438, -94.021903991699, 34.171798706055, 0.000000, 0.000000, 91.309509277344); //
	CreateObject(3850, -2056.9089355469, -92.456993103027, 34.691211700439, 0.000000, 0.000000, 0.000000); //
	CreateObject(3850, -2056.9089355469, -92.442306518555, 35.748714447021, 0.000000, 0.000000, 0.000000); //
	CreateObject(3850, -2056.9089355469, -92.437759399414, 36.707454681396, 0.000000, 0.000000, 0.000000); //
	CreateObject(986, -2664.91796875, -220.39199829102, 5.0186972618103, 0.000000, 0.000000, 0.000000); //
	CreateObject(986, -2672.9265136719, -220.31756591797, 5.0109438896179, 0.000000, 0.000000, 0.000000); //
	CreateObject(986, -2645.3684082031, -220.1435546875, 5.0109438896179, 0.000000, 0.000000, 0.000000); //
	CreateObject(986, -2637.4621582031, -220.24566650391, 4.9859437942505, 0.000000, 0.000000, 0.000000); //
	CreateObject(985, -2806.7082519531, -347.46560668945, 7.8625059127808, 0.000000, 0.000000, 85.3544921875); //
	CreateObject(985, -2804.2404785156, -315.36273193359, 7.8798098564148, 0.000000, 0.000000, 85.352783203125); //
	CreateObject(985, -2804.640625, -320.341796875, 7.927405834198, 0.000000, 0.000000, 85.352783203125); //
	CreateObject(985, -2806.083984375, -339.6630859375, 7.9047832489014, 0.000000, 0.000000, 85.352783203125); //
	CreateObject(985, -2207.5236816406, 624.77093505859, 50.063125610352, 0.000000, 0.000000, 0.000000); //
	CreateObject(986, 1777.3168945313, -1941.6378173828, 11.891031265259, 359.98498535156, 0.000000, 0.000000); //
	CreateObject(986, 1769.2473144531, -1941.669921875, 11.895072937012, 0.000000, 0.000000, 0.000000); //
	CreateObject(986, 1761.1862792969, -1941.6945800781, 11.907670974731, 0.000000, 0.000000, 0.000000); //
	CreateObject(979, 1809.4471435547, -1881.0734863281, 13.423755645752, 0.000000, 0.000000, 312.3603515625); //
	CreateObject(979, 1809.4552001953, -1881.0842285156, 14.531122207642, 0.000000, 0.000000, 312.35778808594); //
	CreateObject(979, 1809.474609375, -1881.1285400391, 15.663488388062, 0.000000, 0.000000, 312.35778808594); //
	CreateObject(978, 1811.4331054688, -1899.8962402344, 13.333637237549, 0.000000, 0.000000, 264.75073242188); //
	CreateObject(978, 1811.4510498047, -1899.9035644531, 14.516002655029, 0.000000, 0.000000, 264.71911621094); //
	CreateObject(978, 1811.3992919922, -1899.9119873047, 15.648368835449, 0.000000, 0.000000, 264.4541015625); //
	CreateObject(985, 2806.0024414063, -1600.1966552734, 11.636354446411, 0.000000, 0.000000, 0.000000); //
	CreateObject(985, 2786.5405273438, -1600.16796875, 13.664975166321, 1.9849853515625, 359.75, 1.4700012207031); //
	CreateObject(985, 2778.7116699219, -1600.40625, 13.639186859131, 1.9830322265625, 359.74731445313, 0.731689453125); //
	CreateObject(985, 2770.9855957031, -1600.552734375, 13.622690200806, 1.9830322265625, 359.74731445313, 1.4666748046875); //
	CreateObject(987, -1690.0596923828, 679.81616210938, 24.502073287964, 358.01501464844, 14.144989013672, 0.000000); //
	CreateObject(987, -1701.6611328125, 679.876953125, 27.402549743652, 358.01147460938, 14.144897460938, 0.000000); //
	CreateObject(987, -1678.7996826172, 679.67211914063, 21.446634292603, 358.01147460938, 17.1298828125, 348.75); //
	CreateObject(987, -1667.5582275391, 677.30078125, 17.932361602783, 358.01147460938, 17.127685546875, 354.70495605469); //
	CreateObject(987, -1656.3643798828, 676.05743408203, 14.314088821411, 359.76147460938, 17.327209472656, 3.39453125); //
	CreateObject(987, -1641.541015625, 676.46649169922, 9.7127380371094, 0.000000, 0.000000, 270.67565917969); //
	CreateObject(986, -1645.3341064453, 676.43896484375, 10.977301597595, 0.25, 2.75, 359.71997070313); //
	CreateObject(987, -1641.4930419922, 658.47912597656, 9.741678237915, 0.000000, 0.000000, 270.67565917969); //
	CreateObject(987, -1641.44140625, 664.4638671875, 9.7127380371094, 0.000000, 0.000000, 270.67565917969); //
	CreateObject(987, -1641.49609375, 646.39508056641, 9.7127380371094, 0.000000, 0.000000, 0.000000); //
	CreateObject(987, -1629.4174804688, 646.27026367188, 9.7127380371094, 0.000000, 0.000000, 0.000000); //
	CreateObject(987, -1617.4327392578, 646.28649902344, 9.7127380371094, 0.000000, 0.000000, 0.000000); //
	CreateObject(987, -1605.4385986328, 646.14715576172, 9.7127380371094, 0.000000, 0.000000, 0.000000); //
	CreateObject(987, -1593.4645996094, 646.12329101563, 9.7127380371094, 0.000000, 0.000000, 359.51501464844); //
	CreateObject(987, -1584.5477294922, 646.10400390625, 9.7362432479858, 0.000000, 0.000000, 0.000000); //
	CreateObject(3550, -1572.142578125, 648.82757568359, 10.97976398468, 0.000000, 0.000000, 0.000000); //
	CreateObject(3550, -1572.0676269531, 653.52630615234, 10.95476436615, 0.000000, 0.000000, 0.000000); //
	CreateObject(987, -1572.1657714844, 666.0458984375, 9.7127342224121, 0.000000, 0.000000, 89.324493408203); //
	CreateObject(987, -1572.0521240234, 677.98205566406, 9.7127342224121, 0.000000, 0.000000, 89.324340820313); //
	CreateObject(980, 777.9853515625, -1384.927734375, 13.897571563721, 0.000000, 0.000000, 179.36279296875); //
	CreateObject(973, -874.73577880859, -1114.5383300781, 98.349586486816, 0.000000, 0.000000, 79.399536132813); //
	CreateObject(973, -879.5380859375, -1141.7946777344, 100.89473724365, 359.75, 8.1900024414063, 78.8681640625); //
	CreateObject(973, -876.255859375, -1123.685546875, 98.645111083984, 359.74731445313, 3.4991455078125, 81.617431640625); //
	CreateObject(973, -877.7216796875, -1132.7861328125, 99.53840637207, 359.74731445313, 8.184814453125, 78.865356445313); //
	CreateObject(973, -1236.0667724609, -767.52172851563, 63.746181488037, 0.000000, 0.000000, 215.09594726563); //
	CreateObject(973, -1229.0283203125, -761.59478759766, 63.741386413574, 0.000000, 0.000000, 225.01806640625); //
	CreateObject(4853,-2054.181,-103.210,40.962,0.0,0.0,0.0);//
	CreateObject(2048,-1539.184,482.887,7.350,0.0,0.0,-180.000);//
	CreateObject(982,-1518.648,502.975,6.875,0.0,0.0,0.0);//
	CreateObject(982,-1518.652,528.525,6.863,0.0,0.0,0.0);//
	CreateObject(982,-1525.807,551.939,6.863,0.0,0.0,33.750);//
	CreateObject(982,-1547.164,539.169,6.860,0.0,0.0,0.0);//
	CreateObject(983,-1545.351,554.686,6.860,0.0,0.0,-33.750);//
	CreateObject(983,-1541.815,560.006,6.860,0.0,0.0,-33.750);//
	CreateObject(1682,-1489.977,458.593,48.809,0.0,0.0,0.0);//
	CreateObject(3882,-1312.248,498.296,11.100,0.0,0.0,-202.500);//
	CreateObject(1209,-2035.245,-60.278,34.515,0.0,0.0,0.0);//
	CreateObject(8572,-2031.697,-101.362,36.389,0.0,0.0,-180.000);//
	CreateObject(3390,-2020.341,-104.485,37.920,0.0,0.0,0.0);//
	CreateObject(1210,-2020.548,-102.764,38.945,0.0,0.0,0.0);//
	CreateObject(1212,-2020.518,-103.669,38.823,0.0,0.0,22.500);//
	CreateObject(2064,-1465.416,486.934,16.202,0.0,0.0,-101.250);//
	CreateObject(2064,-1465.566,515.813,16.217,0.0,0.0,-78.750);//
	CreateObject(1257,-2041.800,-61.469,35.593,0.0,0.0,90.000);//
	CreateObject(910,-2032.392,-58.715,35.593,0.0,0.0,90.000);//
	CreateObject(1507,-2027.362,-102.378,34.228,0.0,0.0,0.0);//
	CreateObject(1256,-2032.556,-88.230,34.980,0.0,0.0,-270.000);//
	CreateObject(1281,-2022.225,-89.403,35.121,0.0,0.0,0.0);//
	CreateObject(1432,-2021.260,-109.356,38.054,0.0,0.0,0.0);//
	CreateObject(1670,-2023.043,-89.147,35.139,0.0,0.0,11.250);//
	CreateObject(1825,-2026.436,-89.306,34.298,0.0,0.0,-11.250);//
	CreateObject(982,-1554.568,491.749,6.863,0.0,0.0,-20.626);//
	CreateObject(983,-1547.583,524.162,6.863,0.0,0.0,-6.875);//
	CreateObject(983,-1549.717,505.430,6.860,0.0,-0.859,-12.892);//
	CreateObject(983,-1550.179,481.816,6.871,0.0,1.719,101.413);//
	CreateObject(983,-1555.857,480.526,6.871,0.0,0.0,103.992);//
	CreateObject(4597,-1519.445,521.953,6.661,0.0,0.0,90.241);//
	CreateObject(4638,-1544.868,514.661,7.876,0.0,-0.859,-3.438);//
	CreateObject(978,-1545.115,516.646,7.020,0.0,0.0,22.500);//
	CreateObject(978,-1545.380,512.358,7.020,0.0,0.0,146.250);//
	CreateObject(978,-1541.184,514.092,7.020,0.0,-0.859,267.422);//
	CreateObject(994,-1980.373,78.433,26.788,0.0,0.0,0.0);//
	CreateObject(994,-1973.977,78.455,26.788,0.0,0.0,0.0);//
	CreateObject(994,-1967.504,78.433,26.788,0.0,0.0,0.0);//
	CreateObject(994,-1960.710,85.236,26.788,0.0,0.0,-90.000);//
	CreateObject(994,-1960.731,91.647,26.788,0.0,0.0,-90.000);//
	CreateObject(994,-1960.806,98.194,26.788,0.0,0.0,-90.000);//
	CreateObject(994,-1960.844,104.666,26.788,0.0,0.0,-90.000);//
	CreateObject(994,-1960.791,107.851,26.788,0.0,-1.719,-90.937);//
	CreateObject(994,-1986.474,107.844,26.780,0.0,0.0,0.0);//
	CreateObject(994,-1986.653,100.442,26.780,0.0,0.0,0.0);//
	CreateObject(994,-1980.300,100.157,26.780,0.0,0.0,-90.000);//
	CreateObject(994,-1980.220,93.603,26.788,0.0,0.0,-90.000);//
	CreateObject(994,-1980.190,86.792,26.788,0.0,0.0,-90.000);//
	CreateObject(994,-1980.238,84.890,26.936,0.0,-0.859,-90.000);//
	CreateObject(4639,-1984.804,99.405,28.384,0.0,0.0,0.0);//
	CreateObject(4697,-1976.841,97.908,-8.845,0.0,79.068,180.859);//
	CreateObject(1452,1540.813,-1616.760,13.442,0.0,0.0,-270.000);//
	CreateObject(955,1586.955,-1694.148,5.622,0.0,-0.859,-180.000);//
	CreateObject(1499,1582.547,-1637.918,12.518,0.0,0.0,0.0);//
	CreateObject(1411,1544.782,-1635.212,14.163,0.0,0.0,90.000);//
	CreateObject(1411,1544.810,-1620.281,14.164,0.0,0.0,90.000);//
	CreateObject(1675,1547.234,-1609.962,15.542,0.0,0.0,92.200);//
	CreateObject(5822,1548.634,-1658.759,20.746,0.0,0.0,6.171);//
	CreateObject(3279,-1575.807,682.708,6.263,0.0,0.0,-90.000);//
	CreateObject(3279,-1330.194,439.120,6.257,0.0,0.0,-270.000);//
	CreateObject(3399,-1332.474,433.432,24.929,0.0,0.0,-106.407);//
	CreateObject(4724,1496.958,-705.643,95.777,0.0,0.0,-135.000);//
	CreateObject(987,1508.637,-699.570,93.750,0.0,0.0,0.0);//
	CreateObject(987,1519.229,-699.605,93.750,0.0,0.0,0.0);//
	CreateObject(987,1530.808,-699.659,93.965,0.0,0.0,90.000);//
	CreateObject(987,1530.883,-687.554,93.939,0.0,0.0,90.000);//
	CreateObject(987,1530.795,-676.218,93.750,0.0,0.0,90.000);//
	CreateObject(987,1530.680,-669.218,93.750,0.0,0.0,90.000);//
	CreateObject(987,1530.615,-657.376,93.750,0.0,0.0,180.000);//
	CreateObject(987,1518.602,-657.367,93.750,0.0,0.0,180.000);//
	CreateObject(987,1506.710,-657.308,93.750,0.0,0.0,180.000);//
	CreateObject(987,1494.816,-657.280,93.750,0.0,0.0,180.000);//
	CreateObject(987,1482.826,-657.254,93.750,0.0,0.0,180.000);//
	CreateObject(987,1470.950,-657.255,93.750,0.0,0.0,180.000);//
	CreateObject(987,1468.693,-657.302,93.750,0.0,0.0,180.000);//
	CreateObject(987,1457.038,-657.265,93.750,0.0,0.0,270.000);//
	CreateObject(987,1456.967,-669.240,93.750,0.0,0.0,-90.000);//
	CreateObject(987,1456.939,-681.209,93.750,0.0,0.0,-90.000);//
	CreateObject(987,1456.922,-693.600,93.750,0.0,0.0,0.0);//
	CreateObject(987,1468.857,-693.637,93.750,0.0,0.0,0.0);//
	CreateObject(987,1502.226,-708.437,93.750,0.0,0.0,51.016);//
	CreateObject(987,1481.114,-693.996,93.689,0.0,-0.859,-54.531);//
	CreateObject(987,1483.830,-698.751,93.750,0.0,0.0,-48.515);//
	CreateObject(1432,1480.387,-664.457,94.733,0.0,0.0,0.0);//
	CreateObject(1432,1483.450,-663.087,94.733,0.0,0.0,0.0);//
	CreateObject(1670,1483.443,-663.032,95.359,0.0,0.0,0.0);//
	CreateObject(1670,1480.390,-664.414,95.359,0.0,0.0,0.0);//
	CreateObject(640,1478.454,-664.178,95.298,0.0,0.0,0.0);//
	CreateObject(3532,1506.354,-701.451,94.432,0.0,0.0,135.000);//
	CreateObject(3532,1503.453,-704.922,94.432,0.0,0.0,135.000);//
	CreateObject(3532,1487.711,-702.195,94.432,0.0,0.0,45.000);//
	CreateObject(3532,1490.175,-705.355,94.426,0.0,0.0,45.000);//
	CreateObject(16151,1480.696,-678.499,94.142,0.0,0.0,0.0);//
	CreateObject(1665,1480.639,-664.779,95.359,0.0,0.0,0.0);//
	CreateObject(955,1482.255,-669.048,95.004,0.0,0.0,180.000);//
	CreateObject(3306,-2127.948,207.148,35.726,0.0,0.0,-180.000);//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	LoadProperty();
	LoadBizz();
	LoadSBizz();
	LoadBoxer();
	LoadStuff();
	LoadIRC();
	LoadFamilies();
	LoadCK();
	LoadPapers();
	IRCInfo[0][iPlayers] = 0; IRCInfo[1][iPlayers] = 0; IRCInfo[2][iPlayers] = 0;
	IRCInfo[3][iPlayers] = 0; IRCInfo[4][iPlayers] = 0; IRCInfo[5][iPlayers] = 0;
	IRCInfo[6][iPlayers] = 0; IRCInfo[7][iPlayers] = 0; IRCInfo[8][iPlayers] = 0;
	IRCInfo[9][iPlayers] = 0;
	News[hTaken1] = 0; News[hTaken2] = 0; News[hTaken3] = 0; News[hTaken4] = 0; News[hTaken5] = 0;
	format(string, sizeof(string), "Nothing");
	strmid(News[hAdd1], string, 0, strlen(string), 255);
	strmid(News[hAdd2], string, 0, strlen(string), 255);
	strmid(News[hAdd3], string, 0, strlen(string), 255);
	strmid(News[hAdd4], string, 0, strlen(string), 255);
	strmid(News[hAdd5], string, 0, strlen(string), 255);
	format(string1, sizeof(string1), "No-one");
	strmid(News[hContact1], string1, 0, strlen(string1), 255);
	strmid(News[hContact2], string1, 0, strlen(string1), 255);
	strmid(News[hContact3], string1, 0, strlen(string1), 255);
	strmid(News[hContact4], string1, 0, strlen(string1), 255);
	strmid(News[hContact5], string1, 0, strlen(string1), 255);
	PlayerHaul[78][pCapasity] = 100;
	PlayerHaul[79][pCapasity] = 100;
	PlayerHaul[80][pCapasity] = 50;
	PlayerHaul[81][pCapasity] = 50;
	SetGameModeText("GodFather LS/SF");
	format(objstore, sizeof(objstore), "???: ? ?????? ?? ???????, ??????????? ??? ?????.");
	format(cbjstore, sizeof(cbjstore), "???? - ????????: ??? ?????? ? ????? ????????.");
	format(motd, sizeof(motd), "?????? ??? ?????? ???????? ????? ?? ????? ???????.");
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime)
	{
		SetWorldTime(wtime);
	}
	SetPDistance(10);
	EnableTirePopping(1);
	EnableZoneNames(1);
	AllowInteriorWeapons(1);
	AllowAdminTeleport(1);
	UsePlayerPedAnims();
	// CreatedCars check
	for(new i = 0; i < sizeof(CreatedCars); i++)
	{
	    CreatedCars[i] = 0;
	}
	// Player Class's
	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	}
	// Car Spawns
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
	    if(HouseCarSpawns[h][0] != 0.0)
	    {
			AddStaticVehicleEx(HouseInfo[h][hVec], HouseCarSpawns[h][0], HouseCarSpawns[h][1], HouseCarSpawns[h][2], HouseCarSpawns[h][3], HouseInfo[h][hVcol1], HouseInfo[h][hVcol2], 60000);
			gCarLock[h+1] = 1;
		}
	}//34

 	carcop[1] = AddStaticVehicleEx(596,-1381.9910,457.0832,6.9837,0.1452, 44, 86, 60000);/*Patriot cruiser35*/
	carcop[2] = AddStaticVehicleEx(596,1558.392000,-1710.859000,5.466783,1.0, -1, -1, 60000);/*CopCruiser36*/
	carcop[3] = AddStaticVehicleEx(596,1569.639000,-1710.859000,5.466783,1.0, -1, -1, 60000);/*CopCruiser37*/
	carcop[4] = AddStaticVehicleEx(596,-2139.1995,-2393.7671,30.3452,140.7012, 0, 0, 60000);/*CopCruiser38*/
	carcop[5] = AddStaticVehicleEx(425,-1279.8262,493.3734,18.0309,219.1345, -1, -1, 60000);/*Hunter39*/
	carcop[6] = AddStaticVehicleEx(425,-1291.0063,492.3819,18.0305,223.8306, -1, -1, 60000);/*Hunter40*/
	carcop[7] = AddStaticVehicleEx(596,1601.308000,-1621.916000,13.056540,90.0, -1, -1, 60000);/*CopCruiser41*/
	carcop[8] = AddStaticVehicleEx(596,1535.8275,-1678.0283,13.1680,359.9876, -1, -1, 60000);/*CopCruiser42*/
	carcop[9] = AddStaticVehicleEx(596,1561.860000,-1694.905000,6.139762,222.0,-1, -1, 60000);/*CopCruiser43*/
	carcop[10] = AddStaticVehicleEx(470,-1375.1555,457.5534,6.9837,359.8331,-1, -1, 60000);/*Patriot44*/
	carhit[1] = AddStaticVehicleEx(475,1070.7135,-288.2996,73.7954,178.6799,0,0,60000); //
	carhit[2] = AddStaticVehicleEx(475,1067.1050,-288.3054,73.7986,180.7119,0,0,60000); //
	carcop[11] = AddStaticVehicleEx(596,614.8,-588.5,17.4,240.0, -1, -1, 60000);/*CopCruiser47*/
	carcop[12] = AddStaticVehicleEx(596,635.1,-561.5,16.5,180.0, -1, -1, 60000);/*CopCruiser48*/
	carcop[13] = AddStaticVehicleEx(596,-2177.5759,-2362.5042,30.4296,141.0939, 0, 0, 60000);/*CopCruiser49*/
	carcop[14] = AddStaticVehicleEx(490,1539.392000,-1646.262000,6.274928,180.0, -1, -1, 60000);/*FBI Rancher50*/
	carcop[15] = AddStaticVehicleEx(490,1531.254000,-1647.431000,6.274976,200.0, -1, -1, 60000);/*FBI Rancher51*/
	carcop[16] = AddStaticVehicleEx(470,-1363.1493,457.1042,6.9836,359.6740, -1, -1, 60000);/*Patriot52*/
	carcop[17] = AddStaticVehicleEx(470,-1355.5931,456.7297,6.9836,0.0286, -1, -1, 60000);/*Patriot53*/
	carcop[18] = AddStaticVehicleEx(596,1535.8459,-1668.7560,13.2653,359.7447,-1, -1, 60000);/*CopCruiser54*/
	carcop[19] = AddStaticVehicleEx(407,-2550.1443,610.7148,14.3281,90.6597, -1, -1, 60000);/*FireTruck55*/
	carcop[20] = AddStaticVehicleEx(596,-2181.2766,-2375.6953,30.3405,231.7148, 0, 0, 60000);/*CopCruiser56*/
	carcop[21] = AddStaticVehicleEx(596,1545.7845,-1684.4004,5.6342,271.1593, 89, 1, 60000);/*General Car57*/
	carcop[22] = AddStaticVehicleEx(596,1530.1611,-1676.0326,5.4563,231.7766, 89, 1, 60000);/*General Car58*/
	carcop[23] = AddStaticVehicleEx(407,-2551.8792,587.1581,14.3281,90.4374,-1, -1, 60000);/*FireTruck59*/
	carcop[24] = AddStaticVehicleEx(497, 1517.8,-1656.1,13.7,0.0, -1, -1, 60000);/*Police Maveric60*/
	carmed[1] = AddStaticVehicleEx(416,-2637.0630,617.3499,14.3281,90.1464, -1, -1, 60000);/*Ambulance61*/
	carmed[2] = AddStaticVehicleEx(416,-2661.4282,617.3460,14.3288,89.2072, -1, -1, 60000);/*Ambulance62*/
	carmed[3] = AddStaticVehicleEx(416,-2662.4568,595.3354,14.3281,273.2716, -1, -1, 60000);/*Ambulance63*/
	AddStaticVehicleEx(431,1172.5,-1795.5,13.1,0.0, -1, -1, 60000);//64/*Bus*/
	AddStaticVehicleEx(431,1182.1,-1795.9,13.1,0.0, -1, -1, 60000);//65/*Bus*/
	carcop[25] = AddStaticVehicleEx(430,-1443.4342,427.0862,-0.6994,268.8489,-1, -1, 60000);/*NG BOAT66*/
	carcop[26] = AddStaticVehicleEx(430,-1442.0721,390.6206,-0.4339,270.1023,-1, -1, 60000);/*NG BOAT67*/
	carhit[3] = AddStaticVehicleEx(475,1074.1396,-288.3354,73.7930,176.9074,0,0,60000); //
	AddStaticVehicleEx(434,551.7929,-1285.5260,16.9303,0.4147,-1, -1, 60000);//Rent car/*Hotknife69*/
	AddStaticVehicleEx(568,536.9888,-1286.5275,16.9993,359.1704,-1, -1, 60000); //Rent car/*Bandito70*/
	AddStaticVehicleEx(434,544.1793,-1286.1422,16.9492,7.3116,-1, -1, 60000);//Rent car/*Hotknife71*/
	AddStaticVehicleEx(434,-1949.9493,258.1949,35.1922,70.7581,-1, -1, 60000); //Rent car/*Hotknife72*/
	AddStaticVehicleEx(568,-1948.1650,264.8094,35.1930,72.6982,-1, -1, 60000); //Rent car/*Bandito73*/
	AddStaticVehicleEx(434,-1947.0601,270.3815,35.1954,66.0783,-1, -1, 60000); //Rent car/*Hotknife74*/
	AddStaticVehicleEx(456,2795.2,-2417.8,13.4,90.8,-1,-1,60000);//Component Truck/*Yankee75*/
	AddStaticVehicleEx(456,2783.9,-2417.9,13.4,90.8,-1,-1,60000);//Component Truck/*Yankee76*/
	AddStaticVehicleEx(440,2794.1,-2455.9,13.4,90.8,-1,-1,60000);//Component Truck/*Rumpo77*/
	AddStaticVehicleEx(440,2782.9,-2455.6,13.4,90.8,-1,-1,60000);//Component Truck/*Rumpo78*/
	cartaxi[1] = AddStaticVehicleEx(420,-1736.0237,1057.2726,17.3652,90.3115,-1, -1, 60000);//Taxi/*Taxi79*/
	carmed[4] = AddStaticVehicleEx(487,-2703.3201,624.0250,14.1766,180.2649, 1, 3, 60000);//Medic Chopper/*Maverick80*/
	cartaxi[2] = AddStaticVehicleEx(420,-1736.6688,1048.9988,17.3622,89.6855,-1, -1, 60000);//Taxi/*Taxi81*/
	cartaxi[3] = AddStaticVehicleEx(420,-1736.4387,1044.8505,17.3656,92.8356,-1, -1, 60000);//Taxi //CAR ID 85/*Taxi*/
	AddStaticVehicleEx(452,720.1,-1694.0,-0.4,179.4,-1,-1,60000);//Fishboat/*Speeder*/
	AddStaticVehicleEx(452,721.2,-1629.4,-0.4,180.9,-1,-1,60000);//Fishboat/*Speeder*/
	AddStaticVehicleEx(452,739.5,-1670.5,-0.6,177.5,-1,-1,60000);//Fishboat/*Speeder*/
	AddStaticVehicleEx(452,-1474.4949,693.0169,0.1996,0.0751,-1,-1,60000);//Fishboat SF/*Speeder*/
	AddStaticVehicleEx(452,-1720.0717,1439.6177,-0.4913,357.6789,-1,-1,60000);//Fishboat SF/*Speeder*/
	carcop[27] = AddStaticVehicleEx(520,-1430.4078,508.1596,18.9400,269.6329,44,86,60000);//NG Plane id 91
	carcop[28] = AddStaticVehicleEx(520,-1419.9038,493.5340,18.9350,269.6848,44,86,60000);//NG Plane id 92
	carcop[29] = AddStaticVehicleEx(520,-1398.6207,507.7513,18.9328,269.8143,44,86,60000); //NG Plane id 93
	cartaxi[4] = AddStaticVehicleEx(420,-1737.1481,1040.5459,17.3648,91.6090,-1,-1,60000);//Taxi
	carhit[4] = AddStaticVehicleEx(475,1077.3147,-288.3677,73.7924,180.0413,0,0,60000); //
	carnews[1] = AddStaticVehicleEx(582,739.4666,-1433.2916,13.5960,89.7279,6,6,60000); //
	carnews[2] = AddStaticVehicleEx(582,739.4479,-1437.4103,13.5969,89.3102,6,6,60000); //
	carnews[3] = AddStaticVehicleEx(582,706.7579,-1436.8711,13.5906,0.2348,6,6,60000); //
	AddStaticVehicleEx(593,382.5172,2536.9561,16.5338,179.7261,-1,-1,60000);//Flyschool
	AddStaticVehicleEx(513,348.3660,2536.9792,16.7418,178.8195,-1,-1,60000);//Flyschool
	AddStaticVehicleEx(487,365.4068,2537.0327,16.6645,181.9959,-1,-1,60000);//Flyschool
	AddStaticVehicleEx(593,-1429.2843,-505.8203,13.7824,205.7709,-1,-1,60000);//Airport SF
	AddStaticVehicleEx(593,-1462.4779,-524.2803,13.7832,204.8137,-1,-1,60000);//Airport SF
	AddStaticVehicleEx(593,1907.7614,-2624.4097,13.5416,53.1810,-1,-1,60000);//Airport LS
	AddStaticVehicleEx(593,1887.0736,-2627.6543,13.5394,52.6116,-1,-1,60000);//Airport LS
	AddStaticVehicleEx(513,-1354.3270,-466.5467,13.7827,162.0134,-1,-1,60000);//Airport SF
	AddStaticVehicleEx(513,-1390.3510,-482.7985,13.7883,250.3124,-1,-1,60000);//Airport SF
	AddStaticVehicleEx(513,1835.3215,-2624.1938,13.5405,56.0569,-1,-1,60000);//Airport LS
	AddStaticVehicleEx(513,1813.2893,-2625.6296,13.5394,53.2858,-1,-1,60000);//Airport LS
	AddStaticVehicleEx(571,2286.2141,-2354.5000,12.8306,225.8705,-1,-1,60000); // kart
	AddStaticVehicleEx(571,2279.9412,-2348.4141,12.8312,225.8585,-1,-1,60000); // kart
	AddStaticVehicleEx(571,2291.7932,-2345.5356,12.8305,227.3060,-1,-1,60000); // kart
	AddStaticVehicleEx(571,2287.5615,-2341.6433,12.8306,226.5350,-1,-1,60000); // kart
	AddStaticVehicleEx(571,2299.6785,-2338.3186,12.8307,224.3563,-1,-1,60000); // kart
	AddStaticVehicleEx(571,2295.3887,-2334.9448,12.8307,227.9102,-1,-1,60000); // kart
	CreateVehicle(494,-1401.0436,-210.0052,1042.9913,1.6623,1,0,60000); //hotring 116
	CreateVehicle(494,-1400.4019,-219.9365,1043.0348,5.3554,1,3,60000); //hotring
	CreateVehicle(494,-1394.4932,-207.7917,1042.9963,3.6872,0,6,60000); //hotring
	CreateVehicle(494,-1393.7854,-217.9354,1043.0325,2.9556,1,2,60000); //hotring
	CreateVehicle(468,-1445.6392,-592.3033,1055.7831,90.2133,-1,-1,60000); //bike 120
	CreateVehicle(468,-1433.1708,-592.4930,1055.6533,92.4067,-1,-1,60000); //bike
	CreateVehicle(468,-1448.5325,-584.4943,1055.4949,95.5400,-1,-1,60000); //bike
	CreateVehicle(468,-1434.8973,-585.1266,1055.2488,91.1533,-1,-1,60000); //bike
	CreateVehicle(468,-1449.2814,1610.7823,1052.5313,272.9406,-1,-1,60000); // bike 124
	CreateVehicle(468,-1453.8767,1611.2418,1052.5313,89.0355,-1,-1,60000); // bike
	CreateVehicle(468,-1454.4746,1614.3342,1052.5313,86.8422,-1,-1,60000); // bike
	CreateVehicle(468,-1449.5795,1614.0684,1052.5313,269.2039,-1,-1,60000); // bike
    CreateVehicle(514,-77.5039,-1108.1729,1.6683,161.8915,-1,-1,60000); // truck
	CreateVehicle(514,-72.3507,-1109.7822,1.6670,161.7769,-1,-1,60000); // truck
	CreateVehicle(514,-67.0126,-1111.7156,1.6688,160.4800,-1,-1,60000); // truck
	CreateVehicle(435,-51.0638,-1135.2831,1.0781,68.3320,-1,-1,60000); // trailer
	CreateVehicle(435,-53.6230,-1139.7546,1.0781,67.5604,-1,-1,60000); // trailer
	CreateVehicle(435,-55.0517,-1144.3676,0.8018,68.1347,-1,-1,60000); // trailer
	AddStaticVehicleEx(402,1361.4133,-1659.1119,13.1531,265.9083,3,3, 60000);//SR
	AddStaticVehicleEx(411,1361.0027,-1651.3090,13.1928,270.4832,6,6, 60000);//SR
	AddStaticVehicleEx(451,1361.0156,-1643.5690,13.1839,270.6393,126,126, 60000);//SR
	AddStaticVehicleEx(477,1361.0699,-1635.4120,13.1798,268.5806,1,1, 60000);//SR
	LinkVehicleToInterior(116, 7);
	LinkVehicleToInterior(117, 7);
	LinkVehicleToInterior(118, 7);
	LinkVehicleToInterior(119, 7);
	LinkVehicleToInterior(120, 4);
	LinkVehicleToInterior(121, 4);
	LinkVehicleToInterior(122, 4);
	LinkVehicleToInterior(123, 4);
	LinkVehicleToInterior(124, 14);
	LinkVehicleToInterior(125, 14);
	LinkVehicleToInterior(126, 14);
	LinkVehicleToInterior(127, 14);
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 0)
		{
			AddStaticPickup(1273, 2, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			pickups++;
		}
		if(HouseInfo[h][hOwned] == 1)
		{
			AddStaticPickup(1318, 2, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			pickups++;
		}
	}
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 0)
		{
		    new strstr[256];
	    	format(strstr,sizeof(strstr),"??? ?????????\n???????: %d\n????: %d",HouseInfo[h][hLevel],HouseInfo[h][hValue]);
			hhh[h] = Create3DTextLabel(strstr,0xFF8000AA,HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez],35.0,0);
		}
		if(HouseInfo[h][hOwned] == 1)
		{
		    new strstr[256];
	    	format(strstr,sizeof(strstr),"????????: %s",HouseInfo[h][hOwner]);
			hhh[h] = Create3DTextLabel(strstr,0x37E3ECAA,HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez],35.0,0);

		}
	}
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
		if(BizzInfo[h][bOwned] == 0)
		{
			AddStaticPickup(1272, 2, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
			pickups++;
		}
		if(BizzInfo[h][bOwned] == 1)
		{
			AddStaticPickup(1239, 2, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
			pickups++;
		}
	}
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
		if(SBizzInfo[h][sbOwned] == 0)
		{
			AddStaticPickup(1272, 2, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
			pickups++;
		}
		if(SBizzInfo[h][sbOwned] == 1)
		{
			AddStaticPickup(1239, 2, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
			pickups++;
		}
	}
	
	AddStaticPickup(1318,2,691.4,-1276.1,13.5);//Yakuza
	AddStaticPickup(1318,2,2495.3,-1690.2,14.7);//grove
	AddStaticPickup(1318,2,2770.6,-1627.9,12.1);//vagos
	AddStaticPickup(1318,2,940.6,-1085.2,24.2);//ballas
	AddStaticPickup(1318,2,725.6,-1440.4,13.5);//news
	AddStaticPickup(1318,2,1752.5,-1911.9,13.5);//coronos
	AddStaticPickup(1318,2,1122.7,-2036.9,69.8);//lcn
	AddStaticPickup(1318,2,-2719.3,-319.1,7.8);//russian mafia
	AddStaticPickup(1318,2,-2129.1,-188.3,35.3);//rifa
    AddStaticPickup(1239, 2, -2026.7089,-114.3440,1035.1719); // PDD
	AddStaticPickup(1239, 2, 1173.2563,-1323.3102,15.3943); //Hospital 1 near Ammu
	AddStaticPickup(1239, 2, 2029.5945,-1404.6426,17.2512); //Hospital 2 near speedway
	AddStaticPickup(1239, 2, 253.9280,69.6094,1003.6406); //Clear icon in Police Station
	AddStaticPickup(1239, 2, 1482.2,-1771.0,18.7); //City Hall
	AddStaticPickup(1239, 2, 359.5408,206.7693,1008.3828); //Detective Registration
	AddStaticPickup(1239, 2, 347.7374,193.7241,1014.1875); //Lawyer Registration
	AddStaticPickup(1239, 2, 1215.1304,-11.8431,1000.9219); //Whore Registration
	AddStaticPickup(1239, 2, 2166.3772,-1675.3829,15.0859); //DrugDealer Registration
	AddStaticPickup(1239, 2, 1109.3318,-1796.3042,16.5938); //CarJacker Registration
	AddStaticPickup(1239, 2, -2050.8962,460.0262,35.1719); //NewsReporter Registration & /paper
	AddStaticPickup(1239, 2, -2040.9436,456.2395,35.1719); //PaperBoy Registration
	AddStaticPickup(1239, 2, -1932.3859,276.2117,41.0391); //CarMechanic Registration
	AddStaticPickup(1239, 2, 2226.1716,-1718.1792,13.5165); //BodyGuard Registration
	AddStaticPickup(1239, 2, 1366.4325,-1275.2096,13.5469); //ArmsDealer Registration
	AddStaticPickup(1239, 2, 531.7930,-1292.4044,17.2422); //CarDealer Registration
	AddStaticPickup(1239, 2, 766.0804,14.5133,1000.7004); //Boxer Registration
	AddStaticPickup(1239, 2, 1154.2208,-1770.8203,16.5992); //BusDriver Registration
	AddStaticPickup(1239, 2, -77.7288,-1136.3896,1.0781); //Trucker Registration
	AddStaticPickup(1239, 2, 323.0342,1118.5804,1083.8828); //Getting Drugs for DrugDealers
	AddStaticPickup(1239, 2, 1381.0413,-1088.8511,27.3906); //Bill Board (old Job Department)
	AddStaticPickup(1239, 2, 597.1277,-1248.6479,18.2734); //Materials Package building
	AddStaticPickup(1239, 2, -2115.7246,-78.0859,35.3203); //Factory
	AddStaticPickup(1239, 2, 1073.0619,-344.5148,73.9922); //Hitman Agency entrance
	AddStaticPickup(371, 2, 1544.2,-1353.4,329.4); //LS towertop
	AddStaticPickup(371, 2, 1536.0, -1360.0, 1150.0); //LS towertop
	AddStaticPickup(1242, 2, 1527.5,-12.1,1002.0); //binco armor
	AddStaticPickup(1240, 2, 279.3000,1853.5619,8.7649); //area51 health
	pickweapon[1] = CreatePickup(1239, 2, -1591.8401,676.1397,-4.9140);
	pickweapon[2] = CreatePickup(1239, 2, -1321.5826,490.4293,11.1953);
	pickups=pickups+29;
	printf("Current Pickups = %d",pickups);
	AddStaticVehicleEx(409,-2175.8833,652.5399,49.2167,179.5219,0,0,60000); // limo LaCosaNostra 138
	AddStaticVehicleEx(507,-2206.8682,677.6852,49.2170,180.0083,0,0,60000); // Elegant LaCosaNostra 139
	AddStaticVehicleEx(507,-2206.8682,660.8595,49.2138,180.0082,0,0,60000); // Elegant LaCosaNostra 140
	AddStaticVehicleEx(507,-2176.6687,636.7434,49.2990,37.7017,0,0,60000); // Elegant LaCosaNostra 141
	/////////////////////////////////////////////////////////////////////////////
	AddStaticVehicleEx(409,-2159.6860,-2393.2295,30.5070,52.5176,1,1,60000); // limo mayor 146
	/////////////////////////////////////////////////////////////////////////////
	cartaxi[5] = AddStaticVehicle(438,-1737.2598,1032.3141,17.3642,91.4105,6,1); // taxi147
	cartaxi[6] = AddStaticVehicle(438,-1736.4211,1024.4987,17.3624,90.9153,6,1); // taxi148
	cartaxi[7] = AddStaticVehicle(438,-1687.4773,987.0443,17.3668,267.9230,6,1); // taxi149
	cartaxi[8] = AddStaticVehicle(420,-1687.2183,1011.4523,17.3622,269.3695,6,1); // taxi150
	cartaxi[9] = AddStaticVehicle(420,-1686.7051,1028.3800,17.3646,271.2466,6,1); // taxi151
	cartaxi[10] = AddStaticVehicle(420,-1694.0286,1060.6434,17.3648,1.0476,6,1); // taxi152
	/////////////////////////////////////////////////////////////////////////////
	AddStaticVehicle(521,-2768.6760,-312.6036,6.5958,1.5799,0,0); //rifa 165
	AddStaticVehicle(521,-2771.2502,-312.8335,6.6110,0.0312,0,0); //rifa 166
	AddStaticVehicle(545,-2749.2937,-281.7986,6.8529,180.7467,0,0); //rifa 167
	AddStaticVehicle(545,-2744.4297,-281.8773,6.8502,180.2635,0,0); //rifa 168
	AddStaticVehicle(555,-2754.3828,-281.1938,6.7231,179.7335,0,0); //rifa 169
	AddStaticVehicle(579,-2743.8223,-303.3477,6.9553,47.7877,0,0); //rifa 170
	AddStaticVehicle(579,-2748.5950,-307.9472,6.9708,48.1956,0,0); //rifa 171
	AddStaticVehicle(579,-2739.0354,-298.4971,6.9450,48.0396,0,0); //rifa 172
	AddStaticVehicle(487,-2785.9006,-292.1729,7.2234,269.0976,0,0); //rifa 173
	/////////////////////////////////////////////////////////////////////////////
	AddStaticVehicle(490,-1608.0966,692.0639,-5.5220,178.5750,-1,-1); // fbi 178
	AddStaticVehicle(490,-1584.2885,749.6365,-5.5219,359.9219,-1,-1); // fbi 179
	AddStaticVehicle(490,-1620.5286,692.7176,-5.5237,0.9285,-1,-1); // fbi 180
	AddStaticVehicle(490,-1639.2671,678.4921,-5.5262,85.8850,-1,-1); // fbi 181
	/////////////////////////////////////////////////////////////////////////////
	carcop[30] = AddStaticVehicle(520,-1417.0912,516.4326,19.1305,269.6893,64,14); //????? ?.?192
	carcop[31] = AddStaticVehicle(432,-1242.0387,466.7744,7.3755,113.4807,5,39); //???? ?.? 193
	carcop[32] = AddStaticVehicle(432,-1240.3894,458.2650,7.3802,86.7375,74,65); //???? ?.? 194
	carcop[33] = AddStaticVehicle(432,-1239.7214,447.9418,7.3709,66.0621,80,98); //???? ?.? 195
	AddStaticVehicle(522,2228.8091,-1177.1467,25.2985,90.4143,69,108); //? ??? ???
	AddStaticVehicle(480,2217.1597,-1170.6687,25.4988,269.3893,66,55); //
	AddStaticVehicle(418,2217.5105,-1157.9856,25.8198,270.3215,74,30); //
	AddStaticVehicle(579,2205.9387,-1169.3473,25.6653,269.2642,45,2); //
	AddStaticVehicle(509,2211.0728,-1148.0038,25.2698,270.8992,92,21); //
	AddStaticVehicle(509,2211.1804,-1148.8250,25.2608,271.3885,92,68); //196
	AddStaticVehicle(509,2211.2522,-1149.7501,25.2554,275.1192,99,81); //197
	AddStaticVehicle(509,2211.2522,-1149.7501,25.2554,275.1192,99,81); //198
	AddStaticVehicle(510,2213.0339,-1174.3210,25.3350,2.5520,2,100); //199
	AddStaticVehicle(510,2220.6172,-1173.9205,25.3349,359.8374,22,85); //200
	AddStaticVehicle(499,2278.0212,-1109.7910,37.9683,155.5056,38,14); //201
	AddStaticVehicle(602,2281.4089,-1049.9791,49.2273,239.9855,93,119); //202
	AddStaticVehicle(496,2260.8342,-1031.5675,52.5621,226.4188,104,113); //203
	AddStaticVehicle(401,2204.2881,-991.2751,63.7093,158.0768,94,25); //204
	AddStaticVehicle(527,0.0,0.0,0.0,77.8392,63,89); //205
	AddStaticVehicle(527,0.0,0.0,0.0,77.8392,63,89); //206
	AddStaticVehicle(589,2066.7473,-968.9053,47.4581,260.8819,120,8); //207
	AddStaticVehicle(419,2030.3502,-963.5119,40.6144,196.1790,30,42); //208
	AddStaticVehicle(533,2035.0028,-1003.6322,39.4550,12.9307,105,16); //209
	AddStaticVehicle(526,2133.5894,-1145.6804,24.4667,235.9703,46,36); //210
	AddStaticVehicle(474,2135.4363,-1142.0798,24.8794,237.0297,121,102); //211
	AddStaticVehicle(545,2136.2361,-1137.6127,25.4055,238.3814,124,91); //212
	AddStaticVehicle(527,0.0,0.0,0.0,77.8392,63,89); //213
	AddStaticVehicle(410,0.0,0.0,0.0,268.2964,48,105); //214
	AddStaticVehicle(600,2148.3281,-1171.1370,23.5366,270.0119,101,73); //215
	AddStaticVehicle(527,0.0,0.0,0.0,77.8392,63,89); //216
	AddStaticVehicle(527,0.0,0.0,0.0,77.8392,63,89); //217
	AddStaticVehicle(549,2161.8931,-1168.1400,23.5157,89.0102,1,77); //218
	AddStaticVehicle(491,2161.5706,-1148.6954,24.0969,90.7801,72,102); //219
	AddStaticVehicle(491,2004.9951,-1275.1733,23.5765,1.0128,61,49); //220
	AddStaticVehicle(527,0.0,0.0,62.4651,77.8392,63,89); //221
	AddStaticVehicle(507,1979.3279,-1275.4612,23.6442,179.6368,25,74); //222
	AddStaticVehicle(585,1676.3718,-1129.6991,23.4925,89.8977,39,65); //223
	AddStaticVehicle(585,1657.2761,-1135.4825,23.4907,359.9403,85,119); //224
	AddStaticVehicle(587,1658.5919,-1098.1238,23.6333,268.5732,102,94); //225
	AddStaticVehicle(466,1675.6312,-1111.0924,23.6481,89.8779,88,76); //226
	AddStaticVehicle(546,1704.3711,-1069.4980,23.6307,179.4104,64,74); //228
	AddStaticVehicle(551,1735.5022,-1084.4170,23.7612,0.2307,69,52); //229
	AddStaticVehicle(516,1776.8052,-1085.2642,23.7951,0.1475,91,87); //230
	AddStaticVehicle(467,1784.3076,-1069.9734,23.7009,179.9530,80,71); //231
	AddStaticVehicle(426,1780.6543,-1061.8136,23.7035,0.9162,71,122); //232
	AddStaticVehicle(547,1753.3608,-1045.9957,23.6936,180.4063,55,89); //233
	AddStaticVehicle(527,0.0,0.0,62.4651,77.8392,63,89); //234
	AddStaticVehicle(550,1735.2440,-1009.9127,23.7718,167.1926,42,100); //235
	AddStaticVehicle(566,1713.2225,-1005.5389,23.6936,171.8842,93,50); //236
	AddStaticVehicle(566,1703.7015,-1036.3623,23.6555,359.9009,114,57); //237
	AddStaticVehicle(540,1698.6783,-1043.8512,23.7679,180.4624,94,89); //238
	AddStaticVehicle(529,1649.8289,-1046.1558,23.5314,179.6274,83,18); //239
	AddStaticVehicle(527,0.0,0.0,62.4651,77.8392,63,89); //240
	AddStaticVehicle(602,1632.2540,-1013.1802,23.7040,343.1855,29,46); //241
	AddStaticVehicle(527,0.0,0.0,62.4651,77.8392,63,89); //242
	AddStaticVehicle(587,1584.0996,-1047.2512,23.6319,127.1456,106,102); //243
	AddStaticVehicle(527,0.0,0.0,62.4651,77.8392,63,89); //244
	AddStaticVehicle(516,1629.5690,-1093.7386,23.7480,269.1812,89,55); //245
	AddStaticVehicle(426,1649.6802,-1084.4387,23.6490,270.2849,75,116); //246
	AddStaticVehicle(421,1428.6005,-1053.5200,23.0493,359.9852,34,54); //247
	AddStaticVehicle(551,1272.6239,-1545.7396,13.3614,269.9721,50,110); //248
	AddStaticVehicle(409,-1293.3438,449.3163,6.9842,0.9187,43,37); //??????? ???? 249
	AddStaticVehicle(490,-1293.3735,442.2523,7.3993,359.9293,95,78); //??????? ???? 250
	AddStaticVehicle(523,-1295.9381,441.3727,6.7520,0.9882,20,18); //??????? ???? ? ??? ??? 251
	AddStaticVehicle(523,-1291.1561,441.3510,6.7503,0.0458,42,27); //??????? ???? 252
	AddStaticVehicle(597,-1293.4471,456.1172,6.9210,0.1532,0,1); //??????? ???? 253
	AddStaticVehicle(523,-1295.4708,457.1380,6.7525,0.1667,30,101); // ??????? ????? ??? ??? 254
	AddStaticVehicle(523,-1291.3853,456.9860,6.7578,359.9175,106,105); //??????? ???? ? ??? ??? 255
	AddStaticVehicle(565,-2422.7744,522.1268,29.5535,44.6564,0,0); //Mer
	////////////////////////HITMAN/////////////////////////////////////////
	carhit[5] = AddStaticVehicle(471,1090.6519,-314.8333,73.4757,91.4053,0,0); //
	carhit[6] = AddStaticVehicle(471,1090.7172,-317.8492,73.4735,88.5923,0,0); //
	carhit[7] = AddStaticVehicle(471,1090.8025,-320.9528,73.4732,89.1494,0,0); //
	carhit[8] = AddStaticVehicle(471,1090.8236,-324.3839,73.4735,89.8813,0,0); //
	carhit[9] = AddStaticVehicle(471,1090.8989,-327.5659,73.4733,89.4570,0,0); //
	carhit[10] = AddStaticVehicle(487,1083.9482,-296.5093,74.2139,137.9301,0,0); //
	carhit[11] = AddStaticVehicle(487,1109.1455,-340.7404,74.1689,87.2155,0,0); //
	carhit[12] = AddStaticVehicle(468,1054.2322,-304.8132,73.6617,269.8532,0,0); //
	carhit[13] = AddStaticVehicle(468,1054.2372,-302.8463,73.6613,271.3934,0,0); //
	carhit[14] = AddStaticVehicle(468,1054.1940,-300.8861,73.6630,275.3161,0,0); //
	carhit[15] = AddStaticVehicle(468,1054.2161,-299.0088,73.6614,274.7949,0,0); //
	carhit[16] = AddStaticVehicle(522,1058.5522,-292.7573,73.5623,225.4240,0,0); //
	carhit[17] = AddStaticVehicle(522,1059.9569,-291.1836,73.5605,228.3361,0,0); //
	carhit[18] = AddStaticVehicle(522,1061.4478,-289.7636,73.5620,223.9286,0,0); //
	carhit[19] = AddStaticVehicle(522,1057.1497,-294.2410,73.5575,229.9075,0,0); //
	/////////////////////////////NEWS//////////////////////
	carnews[4] = AddStaticVehicle(582,710.8503,-1436.8884,13.5919,2.0316,6,6); //
	carnews[5] = AddStaticVehicle(582,715.0922,-1436.7731,13.5942,2.7291,6,6); //
	carnews[6] = AddStaticVehicle(488,706.4107,-1458.9063,17.8911,359.9998,6,6); //
	carnews[7] = AddStaticVehicle(488,726.2096,-1443.1249,17.8691,0.2061,6,6); //
	carnews[8] = AddStaticVehicle(493,728.0905,-1495.0923,-0.1882,181.4157,6,6); //
	/////////////////////////////MEHANNIK////////////////////////////////////
	carmeh[1] = AddStaticVehicle(525,-74.4442,-1153.5856,1.6296,152.5995,1,1); //
	carmeh[2] = AddStaticVehicle(525,-68.7102,-1156.2485,1.6268,152.4982,1,1); //
	carmeh[3] = AddStaticVehicle(525,-63.1369,-1159.2704,1.6325,150.8864,1,1); //
	carmeh[4] = AddStaticVehicle(525,-93.2665,-1194.8792,2.1538,344.6149,1,1); //
	carmeh[5] = AddStaticVehicle(525,-87.1701,-1196.8710,2.1771,344.9987,1,1); //
	carmeh[6] = AddStaticVehicle(525,-81.2409,-1199.0760,2.2526,344.9891,1,1); //
	carmeh[7] = AddStaticVehicle(525,2120.6924,-1783.0627,13.2671,0.0570,1,1); //
	carmeh[8] = AddStaticVehicle(525,2116.1716,-1782.8811,13.2595,358.7537,1,1); //
	carmeh[9] = AddStaticVehicle(525,2111.8389,-1782.7599,13.2621,357.8619,1,1); //
	carmeh[10] = AddStaticVehicle(525,2107.3442,-1782.6252,13.2647,357.2229,1,1); //
	carmeh[11] = AddStaticVehicle(525,2102.5957,-1782.5170,13.2679,356.0802,1,1); //
	carmeh[12] = AddStaticVehicle(525,-1921.4091,300.2437,40.9274,223.2198,1,1); //
	carmeh[13] = AddStaticVehicle(525,-1921.3932,293.7658,40.9200,227.2113,1,1); //
	carmeh[14] = AddStaticVehicle(525,-1921.7745,288.1595,40.9200,231.0693,1,1); //
	carmeh[15] = AddStaticVehicle(525,-1921.6400,282.4522,40.9276,234.4456,1,1); //
	carmeh[16] = AddStaticVehicle(525,-1912.6840,300.5296,40.9264,139.5593,1,1); //
	carmeh[17] = AddStaticVehicle(525,-1912.6635,294.0861,40.9239,137.3694,1,1); //
	carmeh[18] = AddStaticVehicle(525,-1912.8132,287.9988,40.9239,134.4987,1,1); //
	carmeh[19] = AddStaticVehicle(525,-1912.7560,282.2408,40.9240,135.6796,1,1); //
	/////////////////////////El CORONAS////////////////////
	carel[1] = AddStaticVehicle(534,1802.7690,-1911.8434,13.1227,87.6159,0,0); //
	carel[2] = AddStaticVehicle(567,1802.8438,-1916.8187,13.2644,89.1863,0,0); //
	carel[3] = AddStaticVehicle(534,1802.9192,-1922.0989,13.1149,89.0969,0,0); //
	carel[4] = AddStaticVehicle(567,1802.4783,-1927.7084,13.2579,89.0595,0,0); //
	carel[5] = AddStaticVehicle(534,1792.1807,-1932.4004,13.1115,0.8427,0,0); //
	carel[6] = AddStaticVehicle(567,1787.8534,-1932.1624,13.2576,358.4579,0,0); //
	carel[7] = AddStaticVehicle(567,1777.5479,-1927.0139,13.2583,269.0891,0,0); //
	carel[8] = AddStaticVehicle(534,1783.7457,-1932.5022,13.1108,356.2440,0,0); //
	carel[9] = AddStaticVehicle(534,1777.4973,-1921.8015,13.1107,270.2570,0,0); //
	carel[10] = AddStaticVehicle(567,1777.2723,-1916.0007,13.2567,269.2141,0,0); //
	carel[11] = AddStaticVehicle(534,1777.4365,-1910.9581,13.1116,269.0849,0,0); //
	///////////////////////////VAGOS///////////////////////////////
	carv[1] = AddStaticVehicle(576,2772.4292,-1604.2654,10.5294,271.9550,6,6); //
	carv[2] = AddStaticVehicle(576,2772.7090,-1610.0763,10.5302,273.2456,6,6); //
	carv[3] = AddStaticVehicle(576,2773.0842,-1616.2458,10.5317,272.7127,6,6); //
	carv[4] = AddStaticVehicle(482,2774.0791,-1623.7471,11.0448,317.2728,6,6); //
	carv[5] = AddStaticVehicle(482,2779.2876,-1624.2690,11.0363,319.2153,6,6); //
	carv[6] = AddStaticVehicle(482,2784.2966,-1624.4849,11.0468,321.1843,6,6); //
	////////////////////////BIKERS//////////////////////////////
	carbb[1] = AddStaticVehicle(522,785.1250,-1369.1365,13.1225,88.3909,65,65); //
	carbb[2] = AddStaticVehicle(522,784.9841,-1366.7057,13.1110,91.1517,65,65); //
	carbb[3] = AddStaticVehicle(522,784.7641,-1363.9792,13.1094,89.8147,65,65); //
	carbb[4] = AddStaticVehicle(522,784.6210,-1361.2379,13.1112,91.3040,65,65); //
	carbb[5] = AddStaticVehicle(522,784.3557,-1358.5394,13.1079,91.1940,65,65); //
	carbb[6] = AddStaticVehicle(522,768.6644,-1382.2450,13.2528,358.7653,65,65); //
	carbb[7] = AddStaticVehicle(522,765.9272,-1382.1227,13.2416,358.9388,65,65); //
	carbb[8] = AddStaticVehicle(522,762.7459,-1381.9386,13.2395,357.3365,65,65); //
	carbb[9] = AddStaticVehicle(463,759.6396,-1364.6130,13.0587,1.0761,65,65); //
	carbb[10] = AddStaticVehicle(463,762.2341,-1364.7639,13.0618,357.2889,65,65); //
	carbb[11] = AddStaticVehicle(463,765.0215,-1364.7292,13.0611,358.0545,65,65); //
	carbb[12] = AddStaticVehicle(463,785.2250,-1342.6177,13.0819,89.7953,65,65); //
	carbb[13] = AddStaticVehicle(463,785.3156,-1340.1484,13.0823,92.1125,65,65); //
	carbb[14] = AddStaticVehicle(463,785.4243,-1336.7760,13.0824,91.7399,65,65); //
	carbb[15] = AddStaticVehicle(522,754.9221,-1331.3009,13.1175,180.1629,65,65); //
	carbb[16] = AddStaticVehicle(522,752.2890,-1331.3051,13.1164,180.4103,65,65); //
	carbb[17] = AddStaticVehicle(522,749.0939,-1331.3176,13.1160,183.0999,65,65); //
	carbb[18] = AddStaticVehicle(522,745.8912,-1331.2947,13.1176,180.5420,65,65); //
	carbb[19] = AddStaticVehicle(463,733.2866,-1345.4623,13.0566,272.7481,65,65); //
	carbb[20] = AddStaticVehicle(463,733.3223,-1348.1001,13.0506,272.8854,65,65); //
	carbb[21] = AddStaticVehicle(463,733.3161,-1350.9742,13.0406,270.8925,65,65); //
	carbb[22] = AddStaticVehicle(463,733.2840,-1338.7584,13.0713,270.1324,65,65); //
	carbb[23] = AddStaticVehicle(463,733.3139,-1335.6619,13.0782,270.0381,65,65); //
	/////////////////////////??????
	carkol[1] = AddStaticVehicle(468,-367.4705,-1436.8372,25.3956,87.6888,110,110); //
	carkol[2] = AddStaticVehicle(468,-367.6075,-1438.7279,25.3957,88.9517,110,110); //
	carkol[3] = AddStaticVehicle(468,-367.6239,-1440.5151,25.3957,91.0608,110,110); //
	carkol[4] = AddStaticVehicle(468,-367.5352,-1442.4290,25.3957,95.5211,110,110); //
	carkol[5] = AddStaticVehicle(579,-394.2674,-1435.9811,25.6654,181.0429,110,110); //
	carkol[6] = AddStaticVehicle(579,-398.4455,-1435.9843,25.6599,181.6677,110,110); //
	carkol[7] = AddStaticVehicle(532,-400.4342,-1396.8425,24.4486,3.3982,110,110); //
	carkol[8] = AddStaticVehicle(532,-411.9821,-1397.6608,24.2109,3.1713,110,110); //
	carkol[9] = AddStaticVehicle(532,-422.4134,-1398.5474,23.8896,2.5789,110,110); //
	carkol[10] = AddStaticVehicle(531,-367.8875,-1414.5868,25.6897,89.8817,110,110); //
	carkol[11] = AddStaticVehicle(579,-374.2854,-1451.7085,25.6567,356.5168,110,110); //
	carkol[12] = AddStaticVehicle(579,-378.3916,-1451.2686,25.6597,354.0224,110,110); //
	/////////////////////////////////RIFA/////////////////////////////////////
	carrif[1] = AddStaticVehicle(482,-2131.6116,-115.0015,35.3736,180.4070,2,2); //
	carrif[2] = AddStaticVehicle(482,-2127.8518,-115.0886,35.3732,179.1650,2,2); //
	carrif[3] = AddStaticVehicle(482,-2123.9990,-115.2104,35.3748,179.1582,2,2); //
	carrif[4] = AddStaticVehicle(482,-2120.0486,-115.3873,35.3688,179.1024,2,2); //
	carrif[5] = AddStaticVehicle(482,-2115.3074,-115.6826,35.3748,178.2914,2,2); //
	carrif[6] = AddStaticVehicle(482,-2115.4172,-144.0690,35.3745,90.7998,2,2); //
	carrif[7] = AddStaticVehicle(482,-2115.5061,-140.1850,35.3716,90.9401,2,2); //
	carrif[8] = AddStaticVehicle(482,-2115.6445,-135.8558,35.3724,91.0749,2,2); //
	carrif[9] = AddStaticVehicle(482,-2115.7996,-131.7079,35.3711,90.1535,2,2); //
	carrif[10] = AddStaticVehicle(482,-2115.9797,-127.6632,35.3695,89.2458,2,2); //
	carrif[11] = AddStaticVehicle(535,-2156.7302,-195.8188,35.0890,90.3498,2,2); //
	carrif[12] = AddStaticVehicle(535,-2156.7686,-200.3247,35.0836,88.7794,2,2); //
	carrif[13] = AddStaticVehicle(535,-2145.8926,-176.9982,35.0835,269.0529,2,2); //
	carrif[14] = AddStaticVehicle(475,-2146.8550,-186.4635,35.1239,270.6388,2,2); //
	carrif[15] = AddStaticVehicle(475,-2146.7473,-191.2592,35.1237,271.4954,2,2); //
	carrif[16] = AddStaticVehicle(475,-2146.6255,-196.1316,35.1226,270.4604,2,2); //
	carrif[17] = AddStaticVehicle(487,-2112.0803,-241.0654,35.4837,1.0427,2,2); //
	///////////////////////////YAKUZA///////////////////////////////////////////
	carya[1] = AddStaticVehicle(451,733.5055,-1269.0791,13.2626,319.2628,68,68); //
	carya[2] = AddStaticVehicle(451,732.0129,-1265.4294,13.2600,319.2910,68,68); //
	carya[3] = AddStaticVehicle(409,670.0461,-1265.6735,13.3386,359.6955,68,68); //
	carya[4] = AddStaticVehicle(405,670.1843,-1282.7931,13.4168,179.4805,68,68); //
	carya[5] = AddStaticVehicle(565,713.8369,-1252.0955,13.1809,269.2734,68,68); //
	carya[6] = AddStaticVehicle(551,661.0977,-1249.0022,13.6496,170.1472,68,68); //
	carya[7] = AddStaticVehicle(534,659.8602,-1288.3013,13.2680,181.0874,68,68); //
	carya[8] = AddStaticVehicle(522,657.4681,-1255.6273,13.1868,253.3698,68,68); //
	carya[9] = AddStaticVehicle(522,657.5365,-1256.8085,13.1893,253.0587,68,68); //
	carya[10] = AddStaticVehicle(522,657.5139,-1257.8553,13.1933,254.2283,68,68); //
	carya[11] = AddStaticVehicle(522,657.5178,-1258.8694,13.1935,253.8320,68,68); //
	carya[12] = AddStaticVehicle(522,657.5306,-1259.8258,13.1966,253.7930,68,68); //
	carya[13] = AddStaticVehicle(522,657.5519,-1260.8677,13.2028,254.3688,68,68); //
	carya[14] = AddStaticVehicle(522,657.6233,-1261.9185,13.1967,251.7666,68,68); //
	carya[15] = AddStaticVehicle(522,657.7224,-1263.0919,13.2058,251.5595,68,68); //
	carya[16] = AddStaticVehicle(522,657.8671,-1264.1759,13.2045,249.4807,68,68); //
	carya[17] = AddStaticVehicle(522,657.9028,-1265.1945,13.1974,251.1111,68,68); //
	carya[18] = AddStaticVehicle(491,660.0099,-1272.2046,13.2966,359.1683,68,68); //
	carya[19] = AddStaticVehicle(541,730.4671,-1276.2817,17.2734,270.6456,68,68); //
	////////////////////////////////////MER/////////////////////////////////////
	carmer[1] = AddStaticVehicle(409,1462.0320,-1836.8328,13.3469,89.6595,1,1); //
	carmer[2] = AddStaticVehicle(409,1488.1285,-1830.9364,13.3469,179.2478,1,1); //
	carmer[3] = AddStaticVehicle(409,1483.8466,-1830.9269,13.3468,181.1194,1,1); //
	carmer[4] = AddStaticVehicle(409,1472.1078,-1830.9323,13.3469,179.3228,1,1); //
	carmer[5] = AddStaticVehicle(409,1476.1642,-1831.0686,13.3469,177.0225,1,1); //
	carmer[6] = AddStaticVehicle(409,1496.8761,-1837.1846,13.3469,90.1224,1,1); //
	carmer[7] = AddStaticVehicle(429,1512.7195,-1847.3502,13.2266,0.7462,1,1); //
	carmer[8] = AddStaticVehicle(429,1509.0852,-1847.4673,13.2266,0.7286,1,1); //
	carmer[9] = AddStaticVehicle(429,1505.3088,-1847.4485,13.2266,2.4553,1,1); //
	carmer[10] = AddStaticVehicle(429,1443.4347,-1845.5168,13.2265,0.1133,1,1); //
	carmer[11] = AddStaticVehicle(429,1439.8806,-1845.5349,13.2269,0.6626,1,1); //
	carmer[12] = AddStaticVehicle(429,1436.3472,-1845.4840,13.2268,0.1566,1,1); //
	////////////////////////////LA COSA NOSTRA////////////////////////////////////
	carlcn[1] = AddStaticVehicle(409,1247.1316,-2044.9927,59.6855,269.0680,65,65); //
	carlcn[2] = AddStaticVehicle(421,1247.0006,-2010.8647,59.6743,180.5367,65,65); //
	carlcn[3] = AddStaticVehicle(421,1251.3394,-2010.9122,59.5503,179.5438,65,65); //
	carlcn[4] = AddStaticVehicle(555,1255.6479,-2010.7708,59.2292,180.1361,65,65); //
	carlcn[5] = AddStaticVehicle(555,1259.7000,-2010.6492,59.1134,180.8314,65,65); //
	carlcn[6] = AddStaticVehicle(411,1264.1998,-2010.4850,59.0273,179.9027,65,65); //
	carlcn[7] = AddStaticVehicle(411,1268.9102,-2010.4377,58.8927,180.3481,65,65); //
	carlcn[8] = AddStaticVehicle(409,1247.1078,-2040.7604,59.5942,270.5991,65,65); //
	//////////////////////////GROVE////////////////////////////
	carg[1] = AddStaticVehicle(534,2473.2349,-1692.8451,13.2377,359.9835,16,16); //
	carg[2] = AddStaticVehicle(567,2495.8733,-1657.1061,13.2318,141.8498,16,16); //
	carg[3] = AddStaticVehicle(567,2490.0916,-1657.2482,13.2251,143.3964,16,16); //
	carg[4] = AddStaticVehicle(567,2485.0779,-1656.5642,13.1991,145.6991,16,16); //
	carg[5] = AddStaticVehicle(567,2479.9949,-1656.0038,13.1893,149.8160,16,16); //
	carg[6] = AddStaticVehicle(535,2506.7534,-1667.0771,13.1469,61.2796,16,16); //
	carg[7] = AddStaticVehicle(535,2506.0554,-1671.9167,13.1338,63.4121,16,16); //
	carg[8] = AddStaticVehicle(535,2505.5781,-1676.6301,13.1688,60.7939,16,16); //
	carg[9] = AddStaticVehicle(534,2470.9585,-1667.7588,13.0302,268.8950,16,16); //
	carg[10] = AddStaticVehicle(534,2470.8684,-1671.5978,13.0978,271.8935,16,16); //
	carg[11] = AddStaticVehicle(510,2516.7339,-1682.1727,13.0193,46.3220,16,16); //
	carg[12] = AddStaticVehicle(567,2492.7705,-1681.1774,13.2073,35.1031,16,16); //
	carg[13] = AddStaticVehicle(567,2487.4792,-1680.7750,13.2040,31.4831,16,16); //
	carg[14] = AddStaticVehicle(567,2482.9114,-1681.4524,13.2004,27.4960,16,16); //
	/////////////////////GORODSKuE/////////////////////
	AddStaticVehicle(522,-70.9339,38.7091,2.6818,250.5282,random(126),random(126)); //
	AddStaticVehicle(522,-70.1128,41.0480,2.6820,251.5038,random(126),random(126)); //
	AddStaticVehicle(522,-69.2912,43.4740,2.6804,252.9635,random(126),random(126)); //
	AddStaticVehicle(522,-68.4047,45.9203,2.6797,249.2234,random(126),random(126)); //
	AddStaticVehicle(522,-67.5375,48.4432,2.6771,248.2672,random(126),random(126)); //
	AddStaticVehicle(522,-66.7087,50.9482,2.6763,246.2213,random(126),random(126)); //
	AddStaticVehicle(522,-65.7705,53.6294,2.6779,248.9127,random(126),random(126)); //
	AddStaticVehicle(522,-57.4914,41.5221,2.6770,70.6894,random(126),random(126)); //
	AddStaticVehicle(522,-56.6923,43.8126,2.6804,69.8421,random(126),random(126)); //
	AddStaticVehicle(522,-55.7758,46.4390,2.6773,70.9878,random(126),random(126)); //
	AddStaticVehicle(522,-54.9430,48.8239,2.6688,71.1779,random(126),random(126)); //
	AddStaticVehicle(562,1452.0627,-938.4896,35.7849,273.1556,random(126),random(126)); //
	AddStaticVehicle(566,912.8892,-995.8793,37.8279,17.6886,random(126),random(126)); //
	AddStaticVehicle(561,718.1497,-1123.3273,17.8442,333.9397,random(126),random(126)); //
	AddStaticVehicle(475,706.1800,-1223.3452,17.1263,123.9710,random(126),random(126)); //
	AddStaticVehicle(560,1838.0220,-1871.2183,13.0946,0.0118,random(126),random(126)); //
	AddStaticVehicle(487,1875.4954,-2299.3674,14.2375,262.3983,random(126),random(126)); //
	AddStaticVehicle(487,1877.9152,-2279.5881,14.0587,270.1265,random(126),random(126)); //
	AddStaticVehicle(559,2796.5181,-1575.8831,10.5833,270.7931,random(126),random(126)); //
	AddStaticVehicle(558,2807.3821,-1540.5713,10.5517,179.7550,random(126),random(126)); //
	AddStaticVehicle(566,2821.9333,-1557.9460,10.7045,90.0132,random(126),random(126)); //
	AddStaticVehicle(550,2473.1245,-1755.5090,13.3649,270.5670,random(126),random(126)); //
	AddStaticVehicle(496,2484.0803,-1747.8748,13.2632,0.6246,random(126),random(126)); //
	AddStaticVehicle(492,2500.2847,-1753.2653,13.2121,359.9188,random(126),random(126)); //
	AddStaticVehicle(400,2492.1350,-1753.3651,13.5943,0.9882,random(126),random(126)); //
	AddStaticVehicle(487,1291.5642,-789.4586,96.8323,0.0041,random(126),random(126)); //
	AddStaticVehicle(547,1175.2819,-922.2053,43.0626,278.4138,random(126),random(126)); //
	AddStaticVehicle(550,1182.2993,-925.9932,43.0328,279.9114,random(126),random(126)); //
	AddStaticVehicle(560,2059.1333,-1903.9281,13.2522,179.3058,random(126),random(126)); //
	AddStaticVehicle(475,1981.1577,-1985.6337,13.3511,0.0459,random(126),random(126)); //
	AddStaticVehicle(492,1982.4910,-2066.5615,13.1641,359.4085,random(126),random(126)); //
	AddStaticVehicle(496,1938.3018,-2086.5591,13.2800,271.0139,random(126),random(126)); //
	AddStaticVehicle(507,2681.9392,-1672.8394,9.2494,0.0674,random(126),random(126)); //
	AddStaticVehicle(516,2658.2566,-1701.9832,9.1543,270.0919,random(126),random(126)); //
	AddStaticVehicle(510,2661.3071,-1817.3158,8.9222,280.0201,random(126),random(126)); //
	AddStaticVehicle(551,2663.0723,-1828.1283,9.1179,287.2695,random(126),random(126)); //
	AddStaticVehicle(562,2691.0327,-1836.4553,9.0985,148.3304,random(126),random(126)); //
	AddStaticVehicle(561,2737.7449,-1875.4545,9.4326,359.9254,random(126),random(126)); //
	AddStaticVehicle(560,2809.3044,-1832.2634,9.6255,267.3297,random(126),random(126)); //
	AddStaticVehicle(566,2828.4912,-1699.3051,9.7701,256.1980,random(126),random(126)); //
	AddStaticVehicle(603,2812.7556,-1673.4631,9.7734,180.5400,random(126),random(126)); //
	AddStaticVehicle(603,2433.1541,-1222.2689,25.0921,143.5313,random(126),random(126)); //
	AddStaticVehicle(550,2427.3145,-1222.6486,25.1707,149.0613,random(126),random(126)); //
	AddStaticVehicle(462,2435.4258,-1230.1453,24.7728,179.5095,random(126),random(126)); //
	AddStaticVehicle(466,2333.6558,-1369.8809,23.7481,358.6046,random(126),random(126)); //
	AddStaticVehicle(400,1362.5803,-1265.2278,13.5520,180.0818,random(126),random(126)); //
	AddStaticVehicle(401,1362.6569,-1290.5624,13.2269,180.6883,random(126),random(126)); //
	AddStaticVehicle(559,981.4418,-913.6485,41.4300,89.1913,random(126),random(126)); //
	AddStaticVehicle(550,782.7186,-1630.3336,13.2030,270.6973,random(126),random(126)); //
	AddStaticVehicle(558,782.4825,-1616.2164,13.0129,270.7384,random(126),random(126)); //
	AddStaticVehicle(426,888.1756,-1658.0890,13.2897,0.3793,random(126),random(126)); //
	AddStaticVehicle(507,878.9403,-1668.5465,13.3716,0.3600,random(126),random(126)); //
	AddStaticVehicle(510,1946.3051,-1378.6091,18.1865,185.4899,random(126),random(126)); //
	AddStaticVehicle(510,1943.3943,-1379.0646,18.1858,186.0212,random(126),random(126)); //
	AddStaticVehicle(510,1932.3983,-1439.5388,13.1510,3.1430,random(126),random(126)); //
	////////////////////////////BALLASSSSSSS////////////////
	carba[1] = AddStaticVehicle(566,927.9541,-1066.7279,24.0774,89.6733,5,5); //
	carba[2] = AddStaticVehicle(566,927.9895,-1071.2766,24.0779,90.2554,5,5); //
	carba[3] = AddStaticVehicle(566,928.0026,-1076.4211,24.0705,89.7112,5,5); //
	carba[4] = AddStaticVehicle(566,928.0301,-1081.1838,24.0697,89.0147,5,5); //
	carba[5] = AddStaticVehicle(412,938.1188,-1119.8831,23.8762,359.5080,5,5); //
	carba[6] = AddStaticVehicle(412,933.5250,-1119.8441,23.8799,359.3729,5,5); //
	carba[7] = AddStaticVehicle(412,928.3372,-1119.9475,23.8803,359.9997,5,5); //
	carba[8] = AddStaticVehicle(412,922.9549,-1119.9800,23.8795,359.1668,5,5); //
	carba[9] = AddStaticVehicle(482,847.7009,-1102.0111,24.4192,269.6259,5,5); //
	carba[10] = AddStaticVehicle(482,832.9348,-1091.1189,24.4175,178.6990,5,5); //
	carba[11] = AddStaticVehicle(482,833.9083,-1115.4220,24.2361,359.7176,5,5); //
	//////////////////////////LICENSERS//////////////////////////
	carlica[1] = AddStaticVehicle(500,-2068.5273,-84.9205,35.2687,180.4428,151,151); //
	carlica[2] = AddStaticVehicle(500,-2072.8884,-84.8355,35.2724,180.7105,151,151); //
	carlica[3] = AddStaticVehicle(500,-2089.7397,-84.4630,35.2666,180.6796,151,151); //
	carlica[4] = AddStaticVehicle(500,-2081.0620,-84.3982,35.2685,179.4476,151,151); //
	carlica[5] = AddStaticVehicle(500,-2085.3457,-84.1855,35.2707,179.4265,151,151); //
	carlica[6] = AddStaticVehicle(500,-2077.0081,-84.6077,35.2714,179.4112,151,151); //
	carlica[7] = AddStaticVehicle(500,-2083.3945,-116.3941,35.4191,181.0708,151,151); //
	carlica[8] = AddStaticVehicle(500,-2075.3613,-115.7776,35.4351,181.1215,151,151); //
	carlica[9] = AddStaticVehicle(500,-2067.1721,-115.9259,35.4346,180.1110,151,151); //
	///////////////////////////////?????? ????///////////////////
	carrm[1] = AddStaticVehicle(580,-2773.9407,-281.8288,6.8391,179.6273,0,0); //
	carrm[2] = AddStaticVehicle(555,-2769.1055,-281.8216,6.7270,179.8896,0,0); //
	carrm[3] = AddStaticVehicle(580,-2764.8579,-295.6835,6.8352,359.2128,0,0); //
	carrm[4] = AddStaticVehicle(579,-2754.9634,-294.9881,6.9733,359.7928,0,0); //
	carrm[5] = AddStaticVehicle(579,-2755.3105,-310.6560,6.9722,5.1110,0,0); //
	////////////////////////////////////////////////////////////

 	
	if (realtime)
	{
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		FixHour(tmphour);
		tmphour = shifthour;
		SetWorldTime(tmphour);
	}
	synctimer = SetTimer("SyncUp", 60000, 1);
	unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	othtimer = SetTimer("OtherTimer", 1000, 1);
	cartimer = SetTimer("CarCheck", 30000, 1);
	pickuptimer = SetTimer("CustomPickups", 3000, 1);
	spectatetimer = SetTimer("Spectator", 0, 1);
	idletimer = SetTimer("IdleKick", idletime, 1);
	productiontimer = SetTimer("Production", 300000, 1); //5 mins (300000)
	accountstimer = SetTimer("SaveAccounts", 1800000, 1); //10 mins every account saved
	checkgastimer = SetTimer("CheckGas", RunOutTime, 1);
	check1timer = SetTimer("Check1", 1000, 1);
    stoppedvehtimer = SetTimer("StoppedVehicle", RunOutTime, 1);
    rek = SetTimer("Reklama",600000,1);
	//for(new i = 0; i < sizeof(CarSpawns); i++)
	for(new i = 0; i < 165; i++)
	{
		AddCar(i);
	}
	CarInit();
	return 1;
}

public SyncUp()
{
	SyncTime();
	DollahScoreUpdate();
}

public SyncTime()
{
	new string[64];
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		format(string, sizeof(string), "?????? %d:00 ????(??)",tmphour);
		BroadCast(COLOR_WHITE,string);
		ghour = tmphour;
		PayDay();
		if (realtime)
		{
			SetWorldTime(tmphour);
		}
	}
}

public SaveAccounts()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			OnPlayerUpdate_GF(i);
			if(PlayerInfo[i][pJob] > 0)
	    	{
	    	    if(PlayerInfo[i][pContractTime] < 25)
	    	    {
					PlayerInfo[i][pContractTime] ++;
				}
	    	}
		}
	}
}

public GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}

public Production()
{
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pFishes] >= 5) { if(FishCount[i] >= 3) { PlayerInfo[i][pFishes] = 0; } else { FishCount[i] += 1; } }
		    if(PlayerDrunk[i] > 0) { PlayerDrunk[i] = 0; PlayerDrunkTime[i] = 0; SetPlayerDrunkLevel(i,0); GameTextForPlayer(i, "~p~Drunk effect~n~~w~Gone", 3500, 1); }
		    if(PlayerInfo[i][pPayDay] < 6) { PlayerInfo[i][pPayDay] += 1; } //+ 5 min to PayDay anti-abuse
		    for(new k = 0; k < MAX_PLAYERS; k++)
			{
				if(IsPlayerConnected(k))
				{
				    if(gTeam[k] == 2 && CrimInRange(80.0, i,k))
				    {
					}
					else
					{
					    WantedPoints[i] -= 3;
					    if(WantedPoints[i] < 0) { WantedPoints[i] = 0; }
					    new points = WantedPoints[i];
					    new wlevel;
					    if(points > 0)
						{
						    new yesno;
							if(points == 3) { if(WantedLevel[i] != 1) { WantedLevel[i] = 1; wlevel = 1; yesno = 1; } }
							else if(points >= 4 && points <= 5) { if(WantedLevel[i] != 2) { WantedLevel[i] = 2; wlevel = 2; yesno = 1; } }
							else if(points >= 6 && points <= 7) { if(WantedLevel[i] != 3) { WantedLevel[i] = 3; wlevel = 3; yesno = 1; } }
							else if(points >= 8 && points <= 9) { if(WantedLevel[i] != 4) { WantedLevel[i] = 4; wlevel = 4; yesno = 1; } }
							else if(points >= 10 && points <= 11) { if(WantedLevel[i] != 5) { WantedLevel[i] = 5; wlevel = 5; yesno = 1; } }
							else if(points >= 12 && points <= 13) { if(WantedLevel[i] != 6) { WantedLevel[i] = 6; wlevel = 6; yesno = 1; } }
							else if(points >= 14) { if(WantedLevel[i] != 10) { WantedLevel[i] = 10; wlevel = 10; yesno = 1; } }
							else if(points <= 0) { if(WantedLevel[i] != 0) { ClearCrime(i); WantedLevel[i] = 0; wlevel = 0; yesno = 1;} }
							if(yesno)
							{
								format(string, sizeof(string), "??????? ??????? ???????: %d", wlevel);
								SendClientMessage(i, COLOR_YELLOW, string);
							}
						}
					}
				}
			}
		}
	}
}

public DateProp(playerid)
{
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	new curdate = getdate();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if (strcmp(playername, HouseInfo[h][hOwner], true) == 0)
		{
			HouseInfo[h][hDate] = curdate;
			OnPropUpdate();
		}
	}
	return 1;
}

public Checkprop()
{
	new olddate;
	new string[256];
	new curdate = getdate();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 1 && HouseInfo[h][hDate] > 9)
		{
			olddate = HouseInfo[h][hDate];
			if(curdate-olddate >= 5)
			{
				HouseInfo[h][hHel] = 0;
				HouseInfo[h][hArm] = 0;
				HouseInfo[h][hHealthx] = 0;
				HouseInfo[h][hHealthy] = 0;
				HouseInfo[h][hHealthz] = 0;
				HouseInfo[h][hArmourx] = 0;
				HouseInfo[h][hArmoury] = 0;
				HouseInfo[h][hArmourz] = 0;
				HouseInfo[h][hLock] = 1;
				HouseInfo[h][hOwned] = 0;
				HouseInfo[h][hVec] = 418;
				HouseInfo[h][hVcol1] = -1;
				HouseInfo[h][hVcol2] = -1;
				strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
				format(string, sizeof(string), "????????????: ??? ???????? ?? ???? $%d",HouseInfo[h][hValue]);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				OnPropUpdate();
			}
		}
	}
	return 1;
}

public PayDay()
{
	new string[128];
	new account,interest;
	new rent = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLevel] > 0)
		    {
			    if(MoneyMessage[i]==1)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "?? ???? ?? ? ????????? ????????? ???? ????, ??????!!!.");
				    GameTextForPlayer(i, "~r~Busted!", 2000, 1);
				    SetPlayerInterior(i, 6);
			   		SetPlayerPos(i, 264.6288,77.5742,1001.0391);
		            PlayerInfo[i][pJailed] = 1;
		            ResetPlayerWeapons(i);
					WantedPoints[i] = 0;
					PlayerInfo[i][pJailTime] = 240;
					format(string, sizeof(string), "?? ????????? ? ?????? ? ??????? %d ??????. ???????: ????", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_LIGHTBLUE, string);
				}
				new playername2[MAX_PLAYER_NAME];
				GetPlayerName(i, playername2, sizeof(playername2));
				account = PlayerInfo[i][pAccount];
				new key = PlayerInfo[i][pPhousekey];
				if(key != 255)
				{
					rent = HouseInfo[key][hRent];
					if(strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
					{
						rent = 0;
					}
					else if(rent > GetPlayerMoney(i))
					{
						PlayerInfo[i][pPhousekey] = 255;
						SendClientMessage(i, COLOR_WHITE, "?? ???? ????????.");
						rent = 0;
					}
					HouseInfo[key][hTakings] = HouseInfo[key][hTakings]+rent;
				}
				new tmpintrate;
				if (key != 255 && strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
				{
				    if(PlayerInfo[i][pDonateRank] > 0) { tmpintrate = intrate+4; }
					else { tmpintrate = intrate+2; }//HouseInfo[key][hLevel]
				}
				else
				{
				    if(PlayerInfo[i][pDonateRank] > 0) { tmpintrate = 3; }
					else { tmpintrate = 1; }
				}
				if(PlayerInfo[i][pPayDay] >= 5)
				{
				    Tax += TaxValue;//Should work for every player online
				    PlayerInfo[i][pAccount] -= TaxValue;
				    if(PlayerInfo[i][pDonateRank] > 0)
					{
					    new bonus = PlayerInfo[i][pPayCheck] / 2;
					    PlayerInfo[i][pPayCheck] += bonus;
					}
					new checks = PlayerInfo[i][pPayCheck];
				    new ebill = (PlayerInfo[i][pAccount]/10000)*(PlayerInfo[i][pLevel]);
				    ConsumingMoney[i] = 1;
				    GivePlayerMoney(i, checks);
				    if(PlayerInfo[i][pAccount] > 0)
				    {
				    	PlayerInfo[i][pAccount] -= ebill;
				    	SBizzInfo[4][sbTill] += ebill;
					}
					else
					{
					    ebill = 0;
					}
					interest = (PlayerInfo[i][pAccount]/1000)*(tmpintrate);
					PlayerInfo[i][pExp]++;
					PlayerPlayMusic(i);
					PlayerInfo[i][pAccount] = account+interest;
					SendClientMessage(i, COLOR_WHITE, "|___ ???????? ___|");
					format(string, sizeof(string), "  ??? ??? ??????????: $%d   ?????: -$%d", checks, TaxValue);
					SendClientMessage(i, COLOR_GRAD1, string);
					if(PlayerInfo[i][pPhousekey] != 255 || PlayerInfo[i][pPbiskey] != 255)
					{
					    format(string, sizeof(string), " ???? ?? ?????????????: -$%d", ebill);
						SendClientMessage(i, COLOR_GRAD1, string);
					}
					format(string, sizeof(string), "  ?? ????? ?????: $%d", account);
					SendClientMessage(i, COLOR_GRAD1, string);
					format(string, sizeof(string), "  ????????: 0.%d",tmpintrate);
					SendClientMessage(i, COLOR_GRAD2, string);
					format(string, sizeof(string), "  ?????????? ??????? $%d", interest);
					SendClientMessage(i, COLOR_GRAD3, string);
					SendClientMessage(i, COLOR_GRAD4, "|--------------------------------------|");
					format(string, sizeof(string), "  ????? ????: $%d", PlayerInfo[i][pAccount]);
					SendClientMessage(i, COLOR_GRAD5, string);
					format(string, sizeof(string), "  ????? ?? ??????: -$%d", rent);
					SendClientMessage(i, COLOR_GRAD5, string);
					format(string, sizeof(string), "~y~PayDay~n~~w~Paycheck");
					GameTextForPlayer(i, string, 5000, 1);
					rent = 0;
					PlayerInfo[i][pPayDay] = 0;
					PlayerInfo[i][pPayCheck] = 0;
					PlayerInfo[i][pConnectTime] += 1;
					if(PlayerInfo[i][pDonateRank] > 0)
					{
					    PlayerInfo[i][pPayDayHad] += 1;
					    if(PlayerInfo[i][pPayDayHad] >= 5)
					    {
					        PlayerInfo[i][pExp]++;
					        PlayerInfo[i][pPayDayHad] = 0;
					    }
					}
				}
				else
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "*?? ??????? ???? ?????, ? ?? ???????? ????????.");
				}
			}
		}
	}
	Checkprop();
	return 1;
}



public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}

public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
		new string3[32];
		new pass[256];
		new playername3[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername3, sizeof(playername3));
		format(string3, sizeof(string3), "%s.ini", playername3);
		dini_Create(string3);
		format(pass,sizeof(pass),"%s",Encrypt(password));
		dini_Set(string3,"Key",pass);
		PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
		dini_IntSet(string3,"Level",PlayerInfo[playerid][pLevel]);
		dini_IntSet(string3,"AdminLevel",PlayerInfo[playerid][pAdmin]);
	    dini_IntSet(string3,"DonateRank",PlayerInfo[playerid][pDonateRank]);
	    dini_IntSet(string3,"UpgradePoints",PlayerInfo[playerid][gPupgrade]);
	    dini_IntSet(string3,"ConnectedTime",PlayerInfo[playerid][pConnectTime]);
	    dini_IntSet(string3,"Registered",PlayerInfo[playerid][pReg]);
	    dini_IntSet(string3,"Sex",PlayerInfo[playerid][pSex]);
	    dini_IntSet(string3,"Age",PlayerInfo[playerid][pAge]);
	    dini_IntSet(string3,"Origin",PlayerInfo[playerid][pOrigin]);
	    dini_IntSet(string3,"CK",PlayerInfo[playerid][pCK]);
	    dini_IntSet(string3,"Muted",PlayerInfo[playerid][pMuted]);
	    dini_IntSet(string3,"Respect",PlayerInfo[playerid][pExp]);
	    dini_IntSet(string3,"Money",PlayerInfo[playerid][pCash]);
	    dini_IntSet(string3,"Bank",PlayerInfo[playerid][pAccount]);
	    dini_IntSet(string3,"Crimes",PlayerInfo[playerid][pCrimes]);
	    dini_IntSet(string3,"Kills",PlayerInfo[playerid][pKills]);
	    dini_IntSet(string3,"Deaths",PlayerInfo[playerid][pDeaths]);
	    dini_IntSet(string3,"Arrested",PlayerInfo[playerid][pArrested]);
	    dini_IntSet(string3,"WantedDeaths",PlayerInfo[playerid][pWantedDeaths]);
	    dini_IntSet(string3,"Phonebook",PlayerInfo[playerid][pPhoneBook]);
	    dini_IntSet(string3,"Kpk",PlayerInfo[playerid][pKpk]);
	    dini_IntSet(string3,"Penalty",PlayerInfo[playerid][pPenalty]);
	    dini_IntSet(string3,"LottoNr",PlayerInfo[playerid][pLottoNr]);
	    dini_IntSet(string3,"Fishes",PlayerInfo[playerid][pFishes]);
	    dini_IntSet(string3,"BiggestFish",PlayerInfo[playerid][pBiggestFish]);
	    dini_IntSet(string3,"Job",PlayerInfo[playerid][pJob]);
	    dini_IntSet(string3,"Paycheck",PlayerInfo[playerid][pPayCheck]);
	    dini_IntSet(string3,"HeadValue",PlayerInfo[playerid][pHeadValue]);
	    dini_IntSet(string3,"Jailed",PlayerInfo[playerid][pJailed]);
	    dini_IntSet(string3,"JailTime",PlayerInfo[playerid][pJailTime]);
	    dini_IntSet(string3,"Materials",PlayerInfo[playerid][pMats]);
	    dini_IntSet(string3,"Drugs",PlayerInfo[playerid][pDrugs]);
	    dini_IntSet(string3,"Leader",PlayerInfo[playerid][pLeader]);
	    dini_IntSet(string3,"Member",PlayerInfo[playerid][pMember]);
	    dini_IntSet(string3,"FMember",PlayerInfo[playerid][pFMember]);
	    dini_IntSet(string3,"Rank",PlayerInfo[playerid][pRank]);
	    dini_IntSet(string3,"Char",PlayerInfo[playerid][pChar]);
	    dini_IntSet(string3,"ContractTime",PlayerInfo[playerid][pContractTime]);
        dini_IntSet(string3,"DetSkill",PlayerInfo[playerid][pDetSkill]);
	    dini_IntSet(string3,"SexSkill",PlayerInfo[playerid][pSexSkill]);
	    dini_IntSet(string3,"BoxSkill",PlayerInfo[playerid][pBoxSkill]);
	    dini_IntSet(string3,"LawSkill",PlayerInfo[playerid][pLawSkill]);
	    dini_IntSet(string3,"MechSkill",PlayerInfo[playerid][pMechSkill]);
	    dini_IntSet(string3,"JackSkill",PlayerInfo[playerid][pJackSkill]);
	    dini_IntSet(string3,"VorSkill",PlayerInfo[playerid][pVorSkill]);
	    dini_IntSet(string3,"CarSkill",PlayerInfo[playerid][pCarSkill]);
	    dini_IntSet(string3,"NewsSkill",PlayerInfo[playerid][pNewsSkill]);
	    dini_IntSet(string3,"DrugsSkill",PlayerInfo[playerid][pDrugsSkill]);
	    dini_IntSet(string3,"CookSkill",PlayerInfo[playerid][pCookSkill]);
	    dini_IntSet(string3,"FishSkill",PlayerInfo[playerid][pFishSkill]);
	    dini_FloatSet(string3,"pSHealth",PlayerInfo[playerid][pSHealth]);
	    GetPlayerHealth(playerid,PlayerInfo[playerid][pHealth]);
	    dini_FloatSet(string3,"pHealth",PlayerInfo[playerid][pHealth]);
	    dini_IntSet(string3,"Int",PlayerInfo[playerid][pInt]);
		dini_IntSet(string3,"Local",PlayerInfo[playerid][pLocal]);
	    dini_IntSet(string3,"Team",PlayerInfo[playerid][pTeam]);
	    dini_IntSet(string3,"Model",PlayerInfo[playerid][pModel]);
	    dini_IntSet(string3,"PhoneNr",PlayerInfo[playerid][pPnumber]);
	    dini_IntSet(string3,"House",PlayerInfo[playerid][pPhousekey]);
	    dini_IntSet(string3,"Bizz",PlayerInfo[playerid][pPbiskey]);
		if ((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
		{
			PlayerInfo[playerid][pPos_x] = 1684.9;
			PlayerInfo[playerid][pPos_y] = -2244.5;
			PlayerInfo[playerid][pPos_z] = 13.5;
		}
		if(Spectate[playerid] != 255)
		{
			PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
			PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
			PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
			PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
			PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
		}
		dini_FloatSet(string3,"Pos_x",PlayerInfo[playerid][pPos_x]);
		dini_FloatSet(string3,"Pos_y",PlayerInfo[playerid][pPos_y]);
		dini_FloatSet(string3,"Pos_z",PlayerInfo[playerid][pPos_z]);
		dini_IntSet(string3,"CarLic",PlayerInfo[playerid][pCarLic]);
		dini_IntSet(string3,"FlyLic",PlayerInfo[playerid][pFlyLic]);
		dini_IntSet(string3,"BoatLic",PlayerInfo[playerid][pBoatLic]);
		dini_IntSet(string3,"FishLic",PlayerInfo[playerid][pFishLic]);
		dini_IntSet(string3,"GunLic",PlayerInfo[playerid][pGunLic]);
		dini_IntSet(string3,"Gun1",PlayerInfo[playerid][pGun1]);
		dini_IntSet(string3,"Gun2",PlayerInfo[playerid][pGun2]);
		dini_IntSet(string3,"Gun3",PlayerInfo[playerid][pGun3]);
		dini_IntSet(string3,"Gun4",PlayerInfo[playerid][pGun4]);
		dini_IntSet(string3,"Ammo1",PlayerInfo[playerid][pAmmo1]);
		dini_IntSet(string3,"Ammo2",PlayerInfo[playerid][pAmmo2]);
		dini_IntSet(string3,"Ammo3",PlayerInfo[playerid][pAmmo3]);
		dini_IntSet(string3,"Ammo4",PlayerInfo[playerid][pAmmo4]);
		dini_IntSet(string3,"CarTime",PlayerInfo[playerid][pCarTime]);
		dini_IntSet(string3,"VorTime",PlayerInfo[playerid][pVorTime]);
		dini_IntSet(string3,"PayDay",PlayerInfo[playerid][pPayDay]);
		dini_IntSet(string3,"PayDayHad",PlayerInfo[playerid][pPayDayHad]);
		dini_IntSet(string3,"CDPlayer",PlayerInfo[playerid][pCDPlayer]);
		dini_IntSet(string3,"Wins",PlayerInfo[playerid][pWins]);
		dini_IntSet(string3,"Loses",PlayerInfo[playerid][pLoses]);
		dini_IntSet(string3,"AlcoholPerk",PlayerInfo[playerid][pAlcoholPerk]);
		dini_IntSet(string3,"DrugPerk",PlayerInfo[playerid][pDrugPerk]);
		dini_IntSet(string3,"MiserPerk",PlayerInfo[playerid][pMiserPerk]);
		dini_IntSet(string3,"PainPerk",PlayerInfo[playerid][pPainPerk]);
		dini_IntSet(string3,"TraderPerk",PlayerInfo[playerid][pTraderPerk]);
		dini_IntSet(string3,"Tutorial",PlayerInfo[playerid][pTut]);
		dini_IntSet(string3,"Mission",PlayerInfo[playerid][pMissionNr]);
		dini_IntSet(string3,"Warnings",PlayerInfo[playerid][pWarns]);
		dini_IntSet(string3,"Adjustable",PlayerInfo[playerid][pAdjustable]);
		dini_IntSet(string3,"Fuel",PlayerInfo[playerid][pFuel]);
		dini_IntSet(string3,"Married",PlayerInfo[playerid][pFuel]);
		dini_Set(string3,"MarriedTo",PlayerInfo[playerid][pMarriedTo]);
		SendClientMessage(playerid, COLOR_YELLOW, "?? ?????????????????, ?????? ?????");
	}
	return 1;
}

public OnPlayerUpdate_GF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(gPlayerLogged[playerid])
		{
			new string3[32];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "%s.ini", playername3);
			PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
			dini_IntSet(string3,"Level",PlayerInfo[playerid][pLevel]);
			dini_IntSet(string3,"AdminLevel",PlayerInfo[playerid][pAdmin]);
		    dini_IntSet(string3,"DonateRank",PlayerInfo[playerid][pDonateRank]);
		    dini_IntSet(string3,"UpgradePoints",PlayerInfo[playerid][gPupgrade]);
		    dini_IntSet(string3,"ConnectedTime",PlayerInfo[playerid][pConnectTime]);
		    dini_IntSet(string3,"Registered",PlayerInfo[playerid][pReg]);
		    dini_IntSet(string3,"Sex",PlayerInfo[playerid][pSex]);
		    dini_IntSet(string3,"Age",PlayerInfo[playerid][pAge]);
		    dini_IntSet(string3,"Origin",PlayerInfo[playerid][pOrigin]);
		    dini_IntSet(string3,"CK",PlayerInfo[playerid][pCK]);
		    dini_IntSet(string3,"Muted",PlayerInfo[playerid][pMuted]);
		    dini_IntSet(string3,"Respect",PlayerInfo[playerid][pExp]);
		    dini_IntSet(string3,"Money",PlayerInfo[playerid][pCash]);
		    dini_IntSet(string3,"Bank",PlayerInfo[playerid][pAccount]);
		    dini_IntSet(string3,"Crimes",PlayerInfo[playerid][pCrimes]);
		    dini_IntSet(string3,"Kills",PlayerInfo[playerid][pKills]);
		    dini_IntSet(string3,"Deaths",PlayerInfo[playerid][pDeaths]);
		    dini_IntSet(string3,"Arrested",PlayerInfo[playerid][pArrested]);
		    dini_IntSet(string3,"WantedDeaths",PlayerInfo[playerid][pWantedDeaths]);
		    dini_IntSet(string3,"Phonebook",PlayerInfo[playerid][pPhoneBook]);
		    dini_IntSet(string3,"Kpk",PlayerInfo[playerid][pKpk]);
		    dini_IntSet(string3,"Penalty",PlayerInfo[playerid][pPenalty]);
		    dini_IntSet(string3,"LottoNr",PlayerInfo[playerid][pLottoNr]);
		    dini_IntSet(string3,"Fishes",PlayerInfo[playerid][pFishes]);
		    dini_IntSet(string3,"BiggestFish",PlayerInfo[playerid][pBiggestFish]);
		    dini_IntSet(string3,"Job",PlayerInfo[playerid][pJob]);
		    dini_IntSet(string3,"Paycheck",PlayerInfo[playerid][pPayCheck]);
		    dini_IntSet(string3,"HeadValue",PlayerInfo[playerid][pHeadValue]);
		    dini_IntSet(string3,"Jailed",PlayerInfo[playerid][pJailed]);
		    dini_IntSet(string3,"JailTime",PlayerInfo[playerid][pJailTime]);
		    dini_IntSet(string3,"Materials",PlayerInfo[playerid][pMats]);
		    dini_IntSet(string3,"Drugs",PlayerInfo[playerid][pDrugs]);
		    dini_IntSet(string3,"Leader",PlayerInfo[playerid][pLeader]);
		    dini_IntSet(string3,"Member",PlayerInfo[playerid][pMember]);
		    dini_IntSet(string3,"FMember",PlayerInfo[playerid][pFMember]);
		    dini_IntSet(string3,"Rank",PlayerInfo[playerid][pRank]);
		    dini_IntSet(string3,"Char",PlayerInfo[playerid][pChar]);
		    dini_IntSet(string3,"ContractTime",PlayerInfo[playerid][pContractTime]);
		    dini_IntSet(string3,"DetSkill",PlayerInfo[playerid][pDetSkill]);
		    dini_IntSet(string3,"SexSkill",PlayerInfo[playerid][pSexSkill]);
		    dini_IntSet(string3,"BoxSkill",PlayerInfo[playerid][pBoxSkill]);
		    dini_IntSet(string3,"LawSkill",PlayerInfo[playerid][pLawSkill]);
		    dini_IntSet(string3,"MechSkill",PlayerInfo[playerid][pMechSkill]);
		    dini_IntSet(string3,"JackSkill",PlayerInfo[playerid][pJackSkill]);
		    dini_IntSet(string3,"VorSkill",PlayerInfo[playerid][pVorSkill]);
		    dini_IntSet(string3,"CarSkill",PlayerInfo[playerid][pCarSkill]);
		    dini_IntSet(string3,"NewsSkill",PlayerInfo[playerid][pNewsSkill]);
		    dini_IntSet(string3,"DrugsSkill",PlayerInfo[playerid][pDrugsSkill]);
		    dini_IntSet(string3,"CookSkill",PlayerInfo[playerid][pCookSkill]);
		    dini_IntSet(string3,"FishSkill",PlayerInfo[playerid][pFishSkill]);
		    dini_FloatSet(string3,"pSHealth",PlayerInfo[playerid][pSHealth]);
		    GetPlayerHealth(playerid,PlayerInfo[playerid][pHealth]);
		    dini_FloatSet(string3,"pHealth",PlayerInfo[playerid][pHealth]);
		    dini_IntSet(string3,"Int",PlayerInfo[playerid][pInt]);
		    dini_IntSet(string3,"Local",PlayerInfo[playerid][pLocal]);
		    dini_IntSet(string3,"Team",PlayerInfo[playerid][pTeam]);
		    dini_IntSet(string3,"Model",PlayerInfo[playerid][pModel]);
		    dini_IntSet(string3,"PhoneNr",PlayerInfo[playerid][pPnumber]);
		    dini_IntSet(string3,"House",PlayerInfo[playerid][pPhousekey]);
		    dini_IntSet(string3,"Bizz",PlayerInfo[playerid][pPbiskey]);
			if ((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
			{
				PlayerInfo[playerid][pPos_x] = 1684.9;
				PlayerInfo[playerid][pPos_y] = -2244.5;
				PlayerInfo[playerid][pPos_z] = 13.5;
			}
			if(Spectate[playerid] != 255)
			{
				PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
				PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
				PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
				PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
				PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
			}
            dini_FloatSet(string3,"Pos_x",PlayerInfo[playerid][pPos_x]);
			dini_FloatSet(string3,"Pos_y",PlayerInfo[playerid][pPos_y]);
			dini_FloatSet(string3,"Pos_z",PlayerInfo[playerid][pPos_z]);
			dini_IntSet(string3,"CarLic",PlayerInfo[playerid][pCarLic]);
			dini_IntSet(string3,"FlyLic",PlayerInfo[playerid][pFlyLic]);
			dini_IntSet(string3,"BoatLic",PlayerInfo[playerid][pBoatLic]);
			dini_IntSet(string3,"FishLic",PlayerInfo[playerid][pFishLic]);
			dini_IntSet(string3,"GunLic",PlayerInfo[playerid][pGunLic]);
			dini_IntSet(string3,"Gun1",PlayerInfo[playerid][pGun1]);
			dini_IntSet(string3,"Gun2",PlayerInfo[playerid][pGun2]);
			dini_IntSet(string3,"Gun3",PlayerInfo[playerid][pGun3]);
			dini_IntSet(string3,"Gun4",PlayerInfo[playerid][pGun4]);
			dini_IntSet(string3,"Ammo1",PlayerInfo[playerid][pAmmo1]);
			dini_IntSet(string3,"Ammo2",PlayerInfo[playerid][pAmmo2]);
			dini_IntSet(string3,"Ammo3",PlayerInfo[playerid][pAmmo3]);
			dini_IntSet(string3,"Ammo4",PlayerInfo[playerid][pAmmo4]);
			dini_IntSet(string3,"CarTime",PlayerInfo[playerid][pCarTime]);
			dini_IntSet(string3,"VorTime",PlayerInfo[playerid][pVorTime]);
			dini_IntSet(string3,"PayDay",PlayerInfo[playerid][pPayDay]);
			dini_IntSet(string3,"PayDayHad",PlayerInfo[playerid][pPayDayHad]);
			dini_IntSet(string3,"CDPlayer",PlayerInfo[playerid][pCDPlayer]);
			dini_IntSet(string3,"Wins",PlayerInfo[playerid][pWins]);
			dini_IntSet(string3,"Loses",PlayerInfo[playerid][pLoses]);
			dini_IntSet(string3,"AlcoholPerk",PlayerInfo[playerid][pAlcoholPerk]);
			dini_IntSet(string3,"DrugPerk",PlayerInfo[playerid][pDrugPerk]);
			dini_IntSet(string3,"MiserPerk",PlayerInfo[playerid][pMiserPerk]);
			dini_IntSet(string3,"PainPerk",PlayerInfo[playerid][pPainPerk]);
			dini_IntSet(string3,"TraderPerk",PlayerInfo[playerid][pTraderPerk]);
			dini_IntSet(string3,"Tutorial",PlayerInfo[playerid][pTut]);
			dini_IntSet(string3,"Mission",PlayerInfo[playerid][pMissionNr]);
			dini_IntSet(string3,"Warnings",PlayerInfo[playerid][pWarns]);
			dini_IntSet(string3,"Adjustable",PlayerInfo[playerid][pAdjustable]);
			dini_IntSet(string3,"Fuel",PlayerInfo[playerid][pFuel]);
			dini_IntSet(string3,"Married",PlayerInfo[playerid][pFuel]);
			dini_Set(string3,"MarriedTo",PlayerInfo[playerid][pMarriedTo]);
		}
	}
	return 1;
}

public OnPlayerLogin(playerid,password[])
{
	new tmp2[256];
    new string2[64];
	new playername2[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername2, sizeof(playername2));
	format(string2, sizeof(string2), "%s.ini", playername2);
	new pass[256];
	new pass1[256];
    pass1=dini_Get(string2,"Key");
    format(pass,sizeof(pass),"%s",Encrypt(password));
	if(strcmp(pass1,pass, true ) == 0 )
	{
	    PlayerInfo[playerid][pLevel]=dini_Int(string2,"Level");
	    PlayerInfo[playerid][pAdmin]=dini_Int(string2,"AdminLevel");
        PlayerInfo[playerid][pDonateRank]=dini_Int(string2,"DonateRank");
        PlayerInfo[playerid][gPupgrade]=dini_Int(string2,"UpgradePoints");
        PlayerInfo[playerid][pConnectTime]=dini_Int(string2,"ConnectTime");
        PlayerInfo[playerid][pReg]=dini_Int(string2,"Registered");
        PlayerInfo[playerid][pSex]=dini_Int(string2,"Sex");
        PlayerInfo[playerid][pAge]=dini_Int(string2,"Age");
        PlayerInfo[playerid][pOrigin]=dini_Int(string2,"Origin");
        PlayerInfo[playerid][pCK]=dini_Int(string2,"CK");
        PlayerInfo[playerid][pMuted]=dini_Int(string2,"Muted");
        PlayerInfo[playerid][pExp]=dini_Int(string2,"Respect");
        PlayerInfo[playerid][pCash]=dini_Int(string2,"Money");
        PlayerInfo[playerid][pAccount]=dini_Int(string2,"Bank");
        PlayerInfo[playerid][pCrimes]=dini_Int(string2,"Crimes");
        PlayerInfo[playerid][pKills]=dini_Int(string2,"Kills");
        PlayerInfo[playerid][pDeaths]=dini_Int(string2,"Deaths");
        PlayerInfo[playerid][pArrested]=dini_Int(string2,"Arrested");
        PlayerInfo[playerid][pWantedDeaths]=dini_Int(string2,"WantedDeaths");
        PlayerInfo[playerid][pPhoneBook]=dini_Int(string2,"Phonebook");
        PlayerInfo[playerid][pKpk]=dini_Int(string2,"Kpk");
        PlayerInfo[playerid][pPenalty]=dini_Int(string2,"Penalty");
        PlayerInfo[playerid][pLottoNr]=dini_Int(string2,"LottoNr");
        PlayerInfo[playerid][pFishes]=dini_Int(string2,"Fishes");
        PlayerInfo[playerid][pBiggestFish]=dini_Int(string2,"BiggestFish");
        PlayerInfo[playerid][pJob]=dini_Int(string2,"Job");
        PlayerInfo[playerid][pPayCheck]=dini_Int(string2,"Paycheck");
        PlayerInfo[playerid][pHeadValue]=dini_Int(string2,"HeadValue");
        PlayerInfo[playerid][pJailed]=dini_Int(string2,"Jailed");
        PlayerInfo[playerid][pJailTime]=dini_Int(string2,"JailTime");
        PlayerInfo[playerid][pMats]=dini_Int(string2,"Materials");
        PlayerInfo[playerid][pDrugs]=dini_Int(string2,"Drugs");
        PlayerInfo[playerid][pLeader]=dini_Int(string2,"Leader");
        PlayerInfo[playerid][pMember]=dini_Int(string2,"Member");
        PlayerInfo[playerid][pFMember]=dini_Int(string2,"FMember");
        PlayerInfo[playerid][pRank]=dini_Int(string2,"Rank");
        PlayerInfo[playerid][pChar]=dini_Int(string2,"Char");
        PlayerInfo[playerid][pContractTime]=dini_Int(string2,"ContractTime");
        PlayerInfo[playerid][pDetSkill]=dini_Int(string2,"DetSkill");
        PlayerInfo[playerid][pSexSkill]=dini_Int(string2,"SexSkill");
        PlayerInfo[playerid][pBoxSkill]=dini_Int(string2,"BoxSkill");
        PlayerInfo[playerid][pLawSkill]=dini_Int(string2,"LawSkill");
        PlayerInfo[playerid][pMechSkill]=dini_Int(string2,"MechSkill");
        PlayerInfo[playerid][pJackSkill]=dini_Int(string2,"JackSkill");
        PlayerInfo[playerid][pVorSkill]=dini_Int(string2,"VorSkill");
        PlayerInfo[playerid][pCarSkill]=dini_Int(string2,"CarSkill");
        PlayerInfo[playerid][pNewsSkill]=dini_Int(string2,"NewsSkill");
        PlayerInfo[playerid][pDrugsSkill]=dini_Int(string2,"DrugsSkill");
        PlayerInfo[playerid][pCookSkill]=dini_Int(string2,"CookSkill");
        PlayerInfo[playerid][pFishSkill]=dini_Int(string2,"FishSkill");
        PlayerInfo[playerid][pSHealth]=dini_Float(string2,"pSHealth");
        PlayerInfo[playerid][pHealth]=dini_Float(string2,"pHealth");
        PlayerInfo[playerid][pInt]=dini_Int(string2,"Int");
        PlayerInfo[playerid][pLocal]=dini_Int(string2,"Local");
        PlayerInfo[playerid][pTeam]=dini_Int(string2,"Team");
        PlayerInfo[playerid][pModel]=dini_Int(string2,"Model");
        PlayerInfo[playerid][pPnumber]=dini_Int(string2,"PhoneNr");
        PlayerInfo[playerid][pPhousekey]=dini_Int(string2,"House");
        PlayerInfo[playerid][pPbiskey]=dini_Int(string2,"Bizz");
        PlayerInfo[playerid][pPos_x]=dini_Float(string2,"Pos_x");
        PlayerInfo[playerid][pPos_y]=dini_Float(string2,"Pos_y");
        PlayerInfo[playerid][pPos_z]=dini_Float(string2,"Pos_z");
        PlayerInfo[playerid][pCarLic]=dini_Int(string2,"CarLic");
        PlayerInfo[playerid][pFlyLic]=dini_Int(string2,"FlyLic");
        PlayerInfo[playerid][pBoatLic]=dini_Int(string2,"BoatLic");
        PlayerInfo[playerid][pFishLic]=dini_Int(string2,"FishLic");
        PlayerInfo[playerid][pGunLic]=dini_Int(string2,"GunLic");
        PlayerInfo[playerid][pGun1]=dini_Int(string2,"Gun1");
        PlayerInfo[playerid][pGun2]=dini_Int(string2,"Gun2");
        PlayerInfo[playerid][pGun3]=dini_Int(string2,"Gun3");
        PlayerInfo[playerid][pGun4]=dini_Int(string2,"Gun4");
        PlayerInfo[playerid][pAmmo1]=dini_Int(string2,"Ammo1");
        PlayerInfo[playerid][pAmmo2]=dini_Int(string2,"Ammo2");
        PlayerInfo[playerid][pAmmo3]=dini_Int(string2,"Ammo3");
        PlayerInfo[playerid][pAmmo4]=dini_Int(string2,"Ammo4");
        PlayerInfo[playerid][pCarTime]=dini_Int(string2,"CarTime");
        PlayerInfo[playerid][pVorTime]=dini_Int(string2,"VorTime");
        PlayerInfo[playerid][pPayDay]=dini_Int(string2,"PayDay");
        PlayerInfo[playerid][pPayDayHad]=dini_Int(string2,"PayDayHad");
        PlayerInfo[playerid][pCDPlayer]=dini_Int(string2,"CDPlayer");
        PlayerInfo[playerid][pWins]=dini_Int(string2,"Wins");
        PlayerInfo[playerid][pLoses]=dini_Int(string2,"Loses");
        PlayerInfo[playerid][pAlcoholPerk]=dini_Int(string2,"AlcoholPerk");
        PlayerInfo[playerid][pDrugPerk]=dini_Int(string2,"DrugPerk");
        PlayerInfo[playerid][pMiserPerk]=dini_Int(string2,"MiserPerk");
        PlayerInfo[playerid][pPainPerk]=dini_Int(string2,"PainPerk");
        PlayerInfo[playerid][pTraderPerk]=dini_Int(string2,"TraderPerk");
        PlayerInfo[playerid][pTut]=dini_Int(string2,"Tutorial");
        PlayerInfo[playerid][pMissionNr]=dini_Int(string2,"Mission");
        PlayerInfo[playerid][pWarns]=dini_Int(string2,"Warnings");
        PlayerInfo[playerid][pAdjustable]=dini_Int(string2,"Adjustable");
        PlayerInfo[playerid][pFuel]=dini_Int(string2,"Fuel");
        PlayerInfo[playerid][pMarried]=dini_Int(string2,"Married");
        PlayerInfo[playerid][pMarriedTo]=dini_Int(string2,"MarriedTo");
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "?????? ?? ????????????? ?????? ?????.");
		gPlayerLogTries[playerid] += 1;
		new loginmsg[256+1];
		format(loginmsg,256,"?????????? ??????? ???? ?????? ? ??????");
		ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"???????????",loginmsg,"???????","??????");
		if(gPlayerLogTries[playerid] == 4) { Ban(playerid); }
	    return 1;
	}
	PlayerInfo[playerid][pAdjustable] = 0;
	ResetPlayerMoney(playerid);
	ConsumingMoney[playerid] = 1;
	GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
	CurrentMoney[playerid] = PlayerInfo[playerid][pCash];
	if(PlayerInfo[playerid][pReg] == 0)
	{
	    PlayerInfo[playerid][pTut] = 1;
		PlayerInfo[playerid][pLevel] = 1;
		PlayerInfo[playerid][pSHealth] = 0.0;
		PlayerInfo[playerid][pHealth] = 50.0;
		PlayerInfo[playerid][pPos_x] = 2246.6;
		PlayerInfo[playerid][pPos_y] = -1161.9;
		PlayerInfo[playerid][pPos_z] = 1029.7;
		PlayerInfo[playerid][pInt] = 15;
		PlayerInfo[playerid][pLocal] = 255;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pModel] = 137;
		new randphone = 1000 + random(8999);//minimum 1000  max 9999 //giving one at the start
		PlayerInfo[playerid][pPnumber] = randphone;
		PlayerInfo[playerid][pPhousekey] = 255;
		PlayerInfo[playerid][pPbiskey] = 255;
		PlayerInfo[playerid][pAccount] = 50000;
		PlayerInfo[playerid][pReg] = 1;
		GivePlayerMoney(playerid, 5000);
	}
	if(PlayerInfo[playerid][pLevel] == -999) //autoban
	{
		Ban(playerid);
	}
	if(PlayerInfo[playerid][pCK] > 0)
	{
	    Kick(playerid);
	}
	format(string2, sizeof(string2), "????? ?????????? %s",playername2);
	SendClientMessage(playerid, COLOR_WHITE,string2);
	printf("%s has logged in.",playername2);
	if (PlayerInfo[playerid][pDonateRank] > 0)
	{
		SendClientMessage(playerid, COLOR_WHITE,"?? ????? ??? VIP ?????.");
	}
	if (PlayerInfo[playerid][pAdmin] > 0)
	{
		format(string2, sizeof(string2), "?? ????? ??? ?????????????  %d ??????.",PlayerInfo[playerid][pAdmin]);
		SendClientMessage(playerid, COLOR_WHITE,string2);
	}
	SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
	if(gTeam[playerid] == 0)
	{
		gTeam[playerid] = 3;
	}
	else
	{
		gTeam[playerid] = PlayerInfo[playerid][pTeam];
	}
	gPlayerLogged[playerid] = 1;
	SpawnPlayer(playerid);
	format(tmp2, sizeof(tmp2), "~w~Welcome ~n~~y~   %s", playername2);
	DateProp(playerid);
	GameTextForPlayer(playerid, tmp2, 5000, 1);
	SendClientMessage(playerid, COLOR_YELLOW, motd);
	if(PlayerInfo[playerid][pFMember] < 255)
	{
	    format(tmp2, sizeof(tmp2), "?????: %s.", FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyMOTD]);
	    SendClientMessage(playerid, COLOR_YELLOW, tmp2);
	}
	return 1;
}

stock ini_GetKey( line[] )
{
	new keyRes[256];
	keyRes[0] = 0;
    if ( strfind( line , "=" , true ) == -1 ) return keyRes;
    strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
    return keyRes;
}

stock ini_GetValue( line[] )
{
	new valRes[256];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}

public OnPropUpdate()
{
	new idx;
	new File: file2;
	while (idx < sizeof(HouseInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%s,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hHealthx],
		HouseInfo[idx][hHealthy],
		HouseInfo[idx][hHealthz],
		HouseInfo[idx][hArmourx],
		HouseInfo[idx][hArmoury],
		HouseInfo[idx][hArmourz],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hDiscription],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hHel],
		HouseInfo[idx][hArm],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hRooms],
		HouseInfo[idx][hRent],
		HouseInfo[idx][hRentabil],
		HouseInfo[idx][hTakings],
		HouseInfo[idx][hVec],
		HouseInfo[idx][hVcol1],
		HouseInfo[idx][hVcol2],
		HouseInfo[idx][hDate],
		HouseInfo[idx][hLevel],
		HouseInfo[idx][hVirtual]);
		if(idx == 0)
		{
			file2 = fopen("property.cfg", io_write);
		}
		else
		{
			file2 = fopen("property.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(BizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bMessage],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntranceX],
		BizzInfo[idx][bEntranceY],
		BizzInfo[idx][bEntranceZ],
		BizzInfo[idx][bExitX],
		BizzInfo[idx][bExitY],
		BizzInfo[idx][bExitZ],
		BizzInfo[idx][bLevelNeeded],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bEntranceCost],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bLocked],
		BizzInfo[idx][bInterior],
		BizzInfo[idx][bProducts],
		BizzInfo[idx][bMaxProducts],
		BizzInfo[idx][bPriceProd]);
		if(idx == 0)
		{
			file2 = fopen("bizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("bizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		SBizzInfo[idx][sbOwned],
		SBizzInfo[idx][sbOwner],
		SBizzInfo[idx][sbMessage],
		SBizzInfo[idx][sbExtortion],
		SBizzInfo[idx][sbEntranceX],
		SBizzInfo[idx][sbEntranceY],
		SBizzInfo[idx][sbEntranceZ],
		SBizzInfo[idx][sbLevelNeeded],
		SBizzInfo[idx][sbBuyPrice],
		SBizzInfo[idx][sbEntranceCost],
		SBizzInfo[idx][sbTill],
		SBizzInfo[idx][sbLocked],
		SBizzInfo[idx][sbInterior],
		SBizzInfo[idx][sbProducts],
		SBizzInfo[idx][sbMaxProducts],
		SBizzInfo[idx][sbPriceProd]);
		if(idx == 0)
		{
			file2 = fopen("sbizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("sbizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public BroadCast(color,const string[])
{
	SendClientMessageToAll(color, string);
	return 1;
}

public ABroadCast(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdmin] >= level)
			{
				SendClientMessage(i, color, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}

public OOCOff(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gOoc[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public OOCNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gNews[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendTeamMessage(team, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(IsACop(i) || PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pLeader] == 4)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendRadioMessage(member, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendJobMessage(job, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pJob] == job)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendNewFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pFMember] == family)
		    {
                if(!gFam[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

public SendFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
		    {
                if(!gFam[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

public SendIRCMessage(channel, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayersChannel[i] == channel)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendTeamBeepMessage(team, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gTeam[i] == team)
		    {
				SendClientMessage(i, color, string);
				RingTone[i] = 20;
			}
		}
	}
}

public SendEnemyMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gTeam[i] >= 3)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}


public SendAdminMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pAdmin] >= 1)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}



public AddCar(carcoords)
{
	new randcol = random(126);
	new randcol2 = 1;
	if (rccounter == 14)
	{
		rccounter = 0;
	}
	AddStaticVehicleEx(carselect[rccounter], CarSpawns[carcoords][pos_x], CarSpawns[carcoords][pos_y], CarSpawns[carcoords][pos_z], CarSpawns[carcoords][z_angle], randcol, randcol2, 60000);
	rccounter++;
	return 1;
}

public PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

public StopMusic()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}

public PlayerFixRadio(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    SetTimer("PlayerFixRadio2", 1000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
		Fixr[playerid] = 1;
	}
}

public PlayerFixRadio2()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Fixr[i])
			{
				PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
				Fixr[i] = 0;
			}
		}
	}
}

//---------------------------<[ OnPlayerCommandText ]>--------------------------------------------------------

public OnPlayerCommandText(playerid, cmdtext[])
{
	new string[256];
	new playermoney;
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new playername[MAX_PLAYER_NAME];
	new cmd[256];
	new tmp[256];
	new giveplayerid, moneys, idx;
	cmd = strtok(cmdtext, idx);

    if(strcmp(cmd,"/lightblue",true)==0)//???????
	{
		if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
		{
	    	SetPlayerColor(playerid,0x00FDFDAA);
	    	SendClientMessage(playerid,0x00FDFDAA,"?? ???????????? ???? El Coronos");
		}
		else
		{
            SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? El Coronos");
		}
		return 1;
	}
	if(strcmp(cmd,"/magenta",true)==0)//?????
	{
	    if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
		{
		    SetPlayerColor(playerid,0xDE17E4AA);
		    SendClientMessage(playerid,0xDE17E4AA,"?? ???????????? ???? Ballas Gang");
		}
		else
		{
		    SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? Ballas Gang");
		}
		return 1;
	}
	if(strcmp(cmd,"/gold",true)==0)//?????
	{
	    if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
		{
	    	SetPlayerColor(playerid,0xB8860BAA);
	    	SendClientMessage(playerid,0xB8860BAA,"?? ???????????? ???? Los Santos Vagos");
		}
		else
		{
		    SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? Los Santos Vagos");
		}
		return 1;
	}
	if(strcmp(cmd,"/inv",true)==0)
	{
	    SetPlayerColor(playerid,0xFFFFFF00);
		SendClientMessage(playerid,COLOR_WHITE,"??????????? ????? ?????????");
		return 1;
	}
	if(strcmp(cmd,"/lime",true)==0)//grove
	{
	    if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
		{
		    SetPlayerColor(playerid,0x36D352AA);
		    SendClientMessage(playerid,0x36D352AA,"?? ???????????? ???? Grove Street");
		}
		else
		{
		    SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? Grove Street");
		}
		return 1;
	}
	if(strcmp(cmd,"/orangered",true)==0)//LCN
	{
	    if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
		{
		    SetPlayerColor(playerid,0xFF8040AA);
		    SendClientMessage(playerid,0xFF0080AA,"?? ???????????? ???? La Cosa Nostra");
	    }
	    else
	    {
	        SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? La Cosa Nostra");
	    }
		return 1;
	}
	if(strcmp(cmd,"/grey",true)==0)//LCN
	{
	    if(PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
		{
	    	SetPlayerColor(playerid,0x808080AA);
	    	SendClientMessage(playerid,0x808080AA,"?? ???????????? ???? ???????");
	    }
	    else
	    {
	        SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? ???????");
	    }
		return 1;
	}
	if(strcmp(cmd,"/black",true)==0)//??????? ?????
	{
	    if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
		{
	    	SetPlayerColor(playerid,0x000000AA);
	    	SendClientMessage(playerid,0x000000AA,"?? ???????????? ???? ??????? ?????");
		}
		else
		{
		    SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? ??????? ?????");
		}
		return 1;
	}
	if(strcmp(cmd,"/gren",true)==0)//
	{
	    if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
		{
		    SetPlayerColor(playerid,0x008000AA);
		    SendClientMessage(playerid,0x008000AA,"?? ???????????? ???? ?????");
		}
		else
		{
		    SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? ?????");
		}
		return 1;
	}
	if(strcmp(cmd,"/ya",true)==0)//
	{
	    if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
		{
		    SetPlayerColor(playerid,0x450778AA);
		    SendClientMessage(playerid,0x450778AA,"?? ???????????? ???? Yakuza");
	    }
	    else
	    {
	        SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? Yakuza");
	    }
		return 1;
	}
	if(strcmp(cmd,"/blue",true)==0)//
	{
	    if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
		    SetPlayerColor(playerid,0x07049DAA);
		    SendClientMessage(playerid,0x07049DAA,"?? ???????????? ???? FBR");
	    }
	    else
	    {
	        SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? FBR");
	    }
		return 1;
	}
	if(strcmp(cmd,"/bikers",true)==0)//
	{
	    if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
		{
		    SetPlayerColor(playerid,0xFEFFA9AA);
		    SendClientMessage(playerid,0xFEFFA9AA,"?? ???????????? ???? The Flaming Cobra Geng");
	    }
	    else
	    {
	        SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? The Flaming Cobra Geng");
	    }
		return 1;
	}
	if(strcmp(cmd,"/lica",true)==0)//
	{
	    if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
		{
		    SetPlayerColor(playerid,0x55CBF3AA);
		    SendClientMessage(playerid,0x55CBF3AA,"?? ???????????? ???? ??????????");
	    }
	    else
	    {
	        SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? ??????????");
	    }
		return 1;
	}
	if(strcmp(cmd,"/rif",true)==0)//
	{
	    if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
		{
		    SetPlayerColor(playerid,0x86B7B3AA);
		    SendClientMessage(playerid,0x86B7B3AA,"?? ???????????? ???? The Rifa Gang");
	    }
	    else
	    {
	        SendClientMessage(playerid,COLOR_GREY," ?? ?? ???????? ? The Rifa Gang");
	    }
		return 1;
	}

	
    if(strcmp(cmd,"/mak",true)==0)
	{
	    new x_nr[256];
	    new Float:health;
		x_nr = strtok(cmdtext, idx);
		if(!strlen(x_nr)) {
			SendClientMessage(playerid, COLOR_WHITE, "|____________________ ?????? ____________________|");
			SendClientMessage(playerid, COLOR_WHITE, " ???????????: /mak [??????]");
			SendClientMessage(playerid, COLOR_GREY, "  ????????? ????????: ?????????(50$), ?????(75$)");
			SendClientMessage(playerid, COLOR_GREY, "  ????????? ????????: ?????(30$), ??????(120$)");
			SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
			return 1;
		}
	    if(IsPlayerInRangeOfPoint(playerid,2.0,-2350.8,-152.2,35.3) || IsPlayerInRangeOfPoint(playerid,2.0,1213.8,-152.2,35.3) || IsPlayerInRangeOfPoint(playerid,2.0,801.0,-1629.1,13.3) || IsPlayerInRangeOfPoint(playerid,2.0,-2342.5,1023.2,50.6))
		{
			GetPlayerName(playerid,sendername,sizeof(sendername));
		    if(strcmp(x_nr,"?????????",true) == 0)
			{
			    if(GetPlayerHealth(playerid, health) < 100)
				{
					SetPlayerHealth(playerid, health + 15.0);
				}
				GivePlayerMoney(playerid,-50);
				format(string, sizeof(string), "* %s ?????? ?????????", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    return 1;
			}
			if(strcmp(x_nr,"?????",true) == 0)
			{
			    if(GetPlayerHealth(playerid, health) < 100)
				{
					SetPlayerHealth(playerid, health + 25.0);
				}
				GivePlayerMoney(playerid,-75);
				format(string, sizeof(string), "* %s ?????? ?????", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    return 1;
			}
			if(strcmp(x_nr,"?????",true) == 0)
			{
			    if(GetPlayerHealth(playerid, health) < 100)
				{
					SetPlayerHealth(playerid, health + 10.0);
				}
				GivePlayerMoney(playerid,-30);
				format(string, sizeof(string), "* %s ???? ?????", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    return 1;
			}
			if(strcmp(x_nr,"??????",true) == 0)
			{
			    if(GetPlayerHealth(playerid, health) < 100)
				{
					SetPlayerHealth(playerid, health + 15.0);
				}
				GivePlayerMoney(playerid,-120);
				format(string, sizeof(string), "* %s ?????? ??????", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid,COLOR_RED," ?? ?? ? mak auto");
		}
		return 1;
	}

	if(strcmp(cmd,"/lexit",true)==0)
	{
	    if(IsPlayerInRangeOfPoint(playerid,2.0,1525.2408,-1678.1493,5.8906))
	    {
			if(IsACop(playerid))
			{
				SetPlayerPos(playerid,251.6939,90.9921,1002.4453);
				SetPlayerInterior(playerid,6);
				return 1;
			}
			else
			{
			    SendClientMessage(playerid,COLOR_RED,"?? ?? ????????!");
			    return 1;
   			}
		}
		else
		{
		    SendClientMessage(playerid,COLOR_RED,"?? ?? ????? ?????");
		    return 1;
  		}
	}
	if(strcmp(cmd,"/lexit2",true)==0)
	{
	    if(IsPlayerInRangeOfPoint(playerid,2.0,251.6939,90.9921,1002.4453))
	    {
			if(IsACop(playerid))
			{
				SetPlayerPos(playerid,1525.2408,-1678.1493,5.8906);
				SetPlayerInterior(playerid,0);
				return 1;
			}
			else
			{
			    SendClientMessage(playerid,COLOR_RED,"?? ?? ????????!");
			    return 1;
   			}
		}
		else
		{
		    SendClientMessage(playerid,COLOR_RED,"?? ?? ????? ?????");
		    return 1;
  		}
	}
	if (strcmp(cmdtext, "/armopen", true) == 0)
	{
		if(IsACop(playerid))
		{
			MoveObject(vorota[17],-1538.996215,482.800567,9.424772, 0.8);
			timer[17] = SetTimer("ArmyClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ????????");
		}
	}
	if (strcmp(cmdtext, "/gopen", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14)
		{
			MoveObject(vorota[1],2434.4150390625, -1658.9677734375, 8.4062805175781, 1.0);
			timer[1] = SetTimer("GrooveClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ? ?????");
		}
	}
	if (strcmp(cmdtext, "/baopen", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12)
		{
			MoveObject(vorota[16],778.30541992188, -1330.1901855469, 5.725944519043, 1.0);
			timer[1] = SetTimer("BikerClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ? ????????");
		}
	}
	if (strcmp(cmdtext, "/lsopen", true) == 0)
	{
		if(IsACop(playerid))
		{
			MoveObject(vorota[2],245.53210449219,72.665069580078,1000.1773681641, 1.0);
			timer[2] = SetTimer("DoorClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ????????");
		}
	}
	if (strcmp(cmdtext, "/lsopen1", true) == 0)
	{
		if(IsACop(playerid))
		{
			MoveObject(vorota[3],1590.056640625,-1637.974609375,7.3683304786682, 1.0);
			timer[3] = SetTimer("CopClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ????????");
		}
	}
	if (strcmp(cmdtext, "/op", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pMember] == 11)
		{
			SetObjectRot(vorota[4],1.9849853515625, 359.99932861328, 267.70544433594);
			timer[4] = SetTimer("InstClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ??????????");
		}
	}
	if (strcmp(cmdtext, "/topen", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pMember] == 10)
		{
			MoveObject(vorota[5], -1771.3575439453, 985.03479003906, 32.24254989624, 1.0);
			timer[5] = SetTimer("TaxiClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????");
		}
	}
	if (strcmp(cmdtext, "/ropen", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17)
		{
			MoveObject(vorota[6],-2127.4970703125, -80.3525390625, 30.093704223633, 1.0);
			timer[6] = SetTimer("RifaClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ? ????");
		}
	}
	if (strcmp(cmdtext, "/ropen1", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13)
		{
			MoveObject(vorota[7],-2655.1630859375, -220.1318359375, -1.2879219055176, 1.0);
			timer[7] = SetTimer("RusClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ? ??????? ?????");
		}
	}
	if (strcmp(cmdtext, "/ropen2", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13)
		{
			MoveObject(vorota[8],-2805.353515625, -329.9619140625, 1.5546417236328, 1.0);
			timer[8] = SetTimer("RusClose1", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ? ??????? ?????");
		}
	}
	if (strcmp(cmdtext, "/lcnopen", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5)
		{
			MoveObject(vorota[9],-2241.0712890625, 643.40625, 57.969596862793, 1.0);
			timer[9] = SetTimer("LcnClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ???");
		}
	}
	if (strcmp(cmdtext, "/copen", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15)
		{
			MoveObject(vorota[10],1811.6845703125, -1889.642578125, 8.4374542236328, 1.0);
			timer[10] = SetTimer("CoronosClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ? ??? ???????");
		}
	}
	if (strcmp(cmdtext, "/bopen", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pMember] == 16)
		{
			MoveObject(vorota[12],949.887146, -1091.500610, 24.822163,2.0);
			MoveObject(vorota[13],949.726563, -1115.018066, 24.673584,2.0);
			timer[11] = SetTimer("BallasClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ? ??????");
		}
	}
	if (strcmp(cmdtext, "/vopen", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18)
		{
			MoveObject(vorota[11], 2802.213135, -1600.037231, 11.812474, 1.0);
			timer[12] = SetTimer("VagosClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ? ?????");
		}
	}
	if (strcmp(cmdtext, "/yopen", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6)
		{
			MoveObject(vorota[22],660.100464, -1227.394653, 21.702566, 1.0);
			timer[23] = SetTimer("YakuzaClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ? ???????");
		}
	}
	if (strcmp(cmdtext, "/yopen2", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6)
		{
			MoveObject(vorota[23],664.801147, -1309.616455, 19.234329, 1.0);
			timer[24] = SetTimer("YakuzaClose2", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ? ???????");
		}
	}
	if (strcmp(cmdtext, "/yopen3", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6)
		{
			MoveObject(vorota[24],786.174866, -1152.311279, 29.380497, 1.0);
			timer[25] = SetTimer("YakuzaClose3", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ? ???????");
		}
	}
	if (strcmp(cmdtext, "/nopen", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 21 || PlayerInfo[playerid][pMember] == 21)
		{
			MoveObject(vorota[18],-393.604431, -1410.991333, 26.453381, 1.0);
			MoveObject(vorota[19],-369.916138, -1406.418213, 25.739368, 1.0);
			timer[21] = SetTimer("KolhozClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ???????? ? ???????");
		}
	}
	if (strcmp(cmdtext, "/sfopen1", true) == 0)
	{
		if(IsACop(playerid))
		{
			MoveObject(vorota[14],-1644.6865234375, 682.3408203125, 1.9969673156738, 1.0);
			timer[14] = SetTimer("FbiClose", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ????????");
		}
	}
	if (strcmp(cmdtext, "/sfopen2", true) == 0)
	{
		if(IsACop(playerid))
		{
			MoveObject(vorota[15],-1571.8798828125, 661.4853515625, 1.7108917236328, 1.0);
			timer[15] = SetTimer("FbiClose1", 10000, 0);
			SendClientMessage(playerid,0x15AAEAAA,"?????? ??????? ?? 10 ??????. ??????????");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED,"*?? ?? ????????");
		}
	}
//-------------------------------[Pay]--------------------------------------------------------------------------
    if(strcmp(cmd, "/setname", true) == 0)
	{
	new newname[128];
	if (PlayerInfo[playerid][pAdmin] >= 1339)
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
		SendClientMessage(playerid, COLOR_YELLOW, "???????????: /setname [playerid] [newname]");
		SendClientMessage(playerid, COLOR_YELLOW, "???????: ????? ????");
		return 1;
	}

	giveplayerid = ReturnUser(tmp);
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	GetPlayerName(playerid, sendername, sizeof(sendername));
	new length = strlen(cmdtext);
	while ((idx < length) && (cmdtext[idx] <= ' '))
	{
	idx++;
	}
	new offset = idx;
	while ((idx < length) && ((idx - offset) < (sizeof(newname) - 1)))
	{
	newname[idx - offset] = cmdtext[idx];
	idx++;
	}
	newname[idx - offset] = EOS;
	if(!strlen(newname))
	{
		SendClientMessage(playerid, COLOR_YELLOW, "???????????: /setname [playerid] [newname]");
		return 1;
	}
	else
	{
	format(string, sizeof(string), " ????????????? %s ?????? ??? ?????? %s - ??: %s", sendername,giveplayer,newname);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	SetPlayerName(giveplayerid, newname);
	}
	}

	else if(giveplayerid == INVALID_PLAYER_ID)
	{
	format(string, sizeof(string), "%d ????? ???.", giveplayerid);
	SendClientMessage(playerid, COLOR_RED, string);
	}
	}
	else
	{
		SendClientMessage(playerid, COLOR_RED, " ?? ?? ?????.");
	}
	return 1;
	}
	if(strcmp(cmd, "/setskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "???????????: /setskin [playerid/PartOfName] [skin id]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 299 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "??? ?????? ????? ID!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pChar] = level;
						format(string, sizeof(string), "??? ???? ??????? ????? %s", sendername);
						SendClientMessage(para1, COLOR_WHITE, string);
						format(string, sizeof(string), "?? ???? %s ???? %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_WHITE, string);
					    SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ?????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/pdd", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY,"_________________________??? ????? San Andreas___________________________");
			SendClientMessage(playerid, COLOR_YELLOW,"*** 1.????????? ?????? ?? ????????? ??????, ?????????, ???????");
			SendClientMessage(playerid, COLOR_YELLOW,"*** 2.????????? ??????? ????????? ?? ???????? ?????. (????????? ????? ???????? ?? ????????)");
			SendClientMessage(playerid, COLOR_YELLOW,"*** 3.????? ???????? ?????? ? ????? ???????");
			SendClientMessage(playerid, COLOR_YELLOW,"*** 4.??? ?????? ?????????? ??????????? ?????, ??? ??????? ???????");
			SendClientMessage(playerid, COLOR_YELLOW,"*** 5.???????? ? ?????????? ??????? 60??/?, ?? ??????? 100-120??/?");
			SendClientMessage(playerid, COLOR_YELLOW,"*** ????????? ?????? ???????? ???????, ???? ???????? ????");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/paypenalty", true) == 0)
	{
	    if(PlayerToPoint(10.0,playerid,253.6,68.2,1003.6))
	    {
			GivePlayerMoney(playerid,-PlayerInfo[playerid][pPenalty]);
			PlayerInfo[playerid][pPenalty] = 0;
			SendClientMessage(playerid,COLOR_WHITE,"?? ???????? ?????");
	    }
		else
		{
		    SendClientMessage(playerid,COLOR_GREY,"?? ?? ? LSPD");
		}
	    return 1;
	}
	
	if(strcmp(cmd, "/penalty", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????????, ? ?? ?????? ???????? ?????");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "???????????: /penalty [playerid/PartOfName] [amount]");
				return 1;
			}
			//giveplayerid = strval(tmp);
	        giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "???????????: /penalty [playerid/PartOfName] [amount]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys > 30000)
			{
			    SendClientMessage(playerid,COLOR_GREY,"????? ????? ???? ?? 1$ ?? 30000$");
			    return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), " ?? ???????? ????? ?????? %s ?? ????? $%d",giveplayer,moneys);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), " ??????????? %s ??????? ??? ????? ?? ????? $%d",sendername,moneys);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "* ??????????? %s ??????? ????? %s", sendername ,giveplayer);
						SendClientMessage(giveplayerid,COLOR_WHITE,"???????? ????? ? LSPD, ???? ?? ??? ?? ????????, ?? ??? ???????");
						SendClientMessage(giveplayerid,COLOR_WHITE,"???????? ????? - /paypenalty");
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						PlayerInfo[giveplayerid][pPenalty] = PlayerInfo[giveplayerid][pPenalty] + moneys;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, " ??? ??????? ??????");
					}
				}//invalid id
			}
			else
			{
				format(string, sizeof(string), " %d ?? ???????? ?????", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/pay", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "???????????: /pay [playerid/PartOfName] [amount]");
				return 1;
			}
			//giveplayerid = strval(tmp);
	        giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "???????????: /pay [playerid/PartOfName] [amount]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys > 1000 && PlayerInfo[playerid][pLevel] < 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?????? ???? ??????? 3, ????? ????????? 1000");
				return 1;
			}
			if(moneys < 1 || moneys > 99999)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "?? ???? 1, ? ?? ???? 99999 ?????.");
			    return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pLocal] == 106)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "??????? ????????? .");
						return 1;
					}
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playermoney = GetPlayerMoney(playerid);
						if (moneys > 0 && playermoney >= moneys)
						{
						    ConsumingMoney[giveplayerid] = 1;
							GivePlayerMoney(playerid, (0 - moneys));
							GivePlayerMoney(giveplayerid, moneys);
							format(string, sizeof(string), "   ?? ??????? %s (??????: %d), $%d.", giveplayer,giveplayerid, moneys);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "   ?? ???????? $%d ?? %s (??????: %d).", moneys, sendername, playerid);
							SendClientMessage(giveplayerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "%s ???????? $%d %s", sendername, moneys, giveplayer);
							PayLog(string);
							if(moneys >= 1000000)
							{
								ABroadCast(COLOR_YELLOW,string,1);
							}
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "* %s ???????? ?????, ? ???????? ?? %s.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "   ???????????????? ???????????? ??????????.");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   ??? ??????? ??????.");
					}
				}//invalid id
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/charity", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "???????????: /charity [amount]");
				return 1;
			}
			if(PlayerInfo[playerid][pLocal] == 106)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "??????? ????????? .");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "??? ????????????.");
				return 1;
			}
			if(GetPlayerMoney(playerid) < moneys)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "? ??? ??? ?????? ???????? ?????????? ?????.");
				return 1;
			}
			GivePlayerMoney(playerid, -moneys);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s ??????? ??? ?? ?????????????, $%d.",sendername, moneys);
			printf("%s", string);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			PayLog(string);
		}
		return 1;
	}
//---------------------------------------------------------------------------------
	if(strcmp(cmd, "/agivelicense", true) == 0)
	{
	if(IsPlayerConnected(playerid))
	{
	if (PlayerInfo[playerid][pAdmin] >= 5)
	{
	new x_nr[256];
	x_nr = strtok(cmdtext, idx);
	if(!strlen(x_nr)) {
	SendClientMessage(playerid, COLOR_WHITE, "???????????: /agivelicense [????????] [playerid/PartOfName]");
	SendClientMessage(playerid, COLOR_WHITE, "????????? ????????: Driving, Pilots, Sailing, Fishing, Weapon.");
	return 1;
	}
	if(strcmp(x_nr,"driving",true) == 0)
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_WHITE, "USAGE: /agivelicense driving [playerid/PartOfName]");
	return 1;
	}
	giveplayerid = ReturnUser(tmp);
	if(IsPlayerConnected(giveplayerid))
	{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	format(string, sizeof(string), "* ?? ???? ???????? ?? ???????? ?????? %s.",giveplayer);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Admin %s ??? ??? ???????? ?? ????????.",sendername);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	PlayerInfo[giveplayerid][pCarLic] = 1;
	return 1;
	}
	}
	else
	{
	SendClientMessage(playerid, COLOR_GREY, " ???? ????? ?? ? ????!");
	return 1;
	}
	}
	else if(strcmp(x_nr,"pilots",true) == 0)
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_WHITE, "USAGE: /agivelicense pilots [playerid/PartOfName]");
	return 1;
	}
	giveplayerid = ReturnUser(tmp);
	if(IsPlayerConnected(giveplayerid))
	{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	format(string, sizeof(string), "* ?? ???? ???????? ?? ?????????? ????????? ??????????? ?????? %s.",giveplayer);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Admin %s ??? ??? ???????? ?? ?????????? ????????? ???????????.",sendername);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	PlayerInfo[giveplayerid][pFlyLic] = 1;
	return 1;
	}
	}
	else
	{
	SendClientMessage(playerid, COLOR_GREY, " ????? ?? ? ????!");
	return 1;
	}
	}
	else if(strcmp(x_nr,"sailing",true) == 0)
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_WHITE, "USAGE: /agivelicense sailing [playerid/PartOfName]");
	return 1;
	}
	giveplayerid = ReturnUser(tmp);
	if(IsPlayerConnected(giveplayerid))
	{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	format(string, sizeof(string), "* ?? ???? ???????? ?? ?????????? ?????? ?????????? ?????? %s.",giveplayer);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Admin %s ??? ??? ???????? ?? ?????????? ?????? ???????????.",sendername);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	PlayerInfo[giveplayerid][pBoatLic] = 1;
	return 1;
	}
	}
	else
	{
	SendClientMessage(playerid, COLOR_GREY, " ????? ?? ? ????!");
	return 1;
	}
	}
	else if(strcmp(x_nr,"fishing",true) == 0)
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_WHITE, "USAGE: /agivelicense fishing [playerid/PartOfName]");
	return 1;
	}
	giveplayerid = ReturnUser(tmp);
	if(IsPlayerConnected(giveplayerid))
	{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	format(string, sizeof(string), "* ?? ???? ???????? ?? ??????? ?????? %s.",giveplayer);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Admin %s ??? ??? ???????? ?? ???????.",sendername);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	PlayerInfo[giveplayerid][pFishLic] = 1;
	return 1;
	}
	}
	else
	{
	SendClientMessage(playerid, COLOR_GREY, " ????? ?? ? ????!");
	return 1;
	}
	}
	else if(strcmp(x_nr,"weapon",true) == 0)
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_WHITE, "USAGE: /agivelicense weapon [playerid/PartOfName]");
	return 1;
	}
	giveplayerid = ReturnUser(tmp);
	if(IsPlayerConnected(giveplayerid))
	{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	format(string, sizeof(string), "* ?? ???? ???????? ?? ?????? ?????? %s.",giveplayer);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Admin %s ??? ??? ???????? ?? ??????.",sendername);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	PlayerInfo[giveplayerid][pGunLic] = 1;
	return 1;
	}
	}
	else
	{
	SendClientMessage(playerid, COLOR_GREY, " ????? ?? ? ????!");
	return 1;
	}
	}
	}
	else
	{
	SendClientMessage(playerid, COLOR_GREY, " ?? ?? ????????????? ??? ???? ???????!");
	return 1;
	}
	}
	return 1;
	}
	if(strcmp(cmd, "/atakelicense", true) == 0)
	{
	if(IsPlayerConnected(playerid))
	{
	if (PlayerInfo[playerid][pAdmin] >= 5)
	{
	new x_nr[256];
	x_nr = strtok(cmdtext, idx);
	if(!strlen(x_nr)) {
	SendClientMessage(playerid, COLOR_WHITE, "???????????: /atakelicense [????????] [playerid/PartOfName]");
	SendClientMessage(playerid, COLOR_WHITE, "????????? ????????: Driving, Pilots, Sailing, Fishing, Weapon.");
	return 1;
	}
	if(strcmp(x_nr,"driving",true) == 0)
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_WHITE, "????: /atakelicense driving [playerid/PartOfName]");
	return 1;
	}
	giveplayerid = ReturnUser(tmp);
	if(IsPlayerConnected(giveplayerid))
	{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	format(string, sizeof(string), "* ?? ??????? ???????? ?? ???????? ? ?????? %s.",giveplayer);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Admin %s ?????? ? ??? ???????? ?? ????????.",sendername);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	PlayerInfo[giveplayerid][pCarLic] = 0;
	return 1;
	}
	}
	else
	{
	SendClientMessage(playerid, COLOR_GREY, " ???? ????? ?? ? ????!");
	return 1;
	}
	}
	else if(strcmp(x_nr,"pilots",true) == 0)
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_WHITE, "USAGE: /atakelicense pilots [playerid/PartOfName]");
	return 1;
	}
	giveplayerid = ReturnUser(tmp);
	if(IsPlayerConnected(giveplayerid))
	{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	format(string, sizeof(string), "* ?? ??????? ???????? ?? ?????????? ????????? ??????????? ? ?????? %s.",giveplayer);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Admin %s ?????? ? ??? ???????? ?? ?????????? ????????? ???????????.",sendername);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	PlayerInfo[giveplayerid][pFlyLic] = 0;
	return 1;
	}
	}
	else
	{
	SendClientMessage(playerid, COLOR_GREY, " ????? ?? ? ????!");
	return 1;
	}
	}
	else if(strcmp(x_nr,"sailing",true) == 0)
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_WHITE, "USAGE: /atakelicense sailing [playerid/PartOfName]");
	return 1;
	}
	giveplayerid = ReturnUser(tmp);
	if(IsPlayerConnected(giveplayerid))
	{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	format(string, sizeof(string), "* ?? ??????? ???????? ?? ?????????? ?????? ?????????? ? ?????? %s.",giveplayer);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Admin %s ?????? ? ??? ???????? ?? ?????????? ?????? ???????????.",sendername);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	PlayerInfo[giveplayerid][pBoatLic] = 0;
	return 1;
	}
	}
	else
	{
	SendClientMessage(playerid, COLOR_GREY, " ????? ?? ? ????!");
	return 1;
	}
	}
	else if(strcmp(x_nr,"fishing",true) == 0)
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_WHITE, "USAGE: /atakelicense fishing [playerid/PartOfName]");
	return 1;
	}
	giveplayerid = ReturnUser(tmp);
	if(IsPlayerConnected(giveplayerid))
	{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	format(string, sizeof(string), "* ?? ??????? ???????? ?? ??????? ? ?????? %s.",giveplayer);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Admin %s ?????? ? ??? ???????? ?? ???????.",sendername);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	PlayerInfo[giveplayerid][pFishLic] = 0;
	return 1;
	}
	}
	else
	{
	SendClientMessage(playerid, COLOR_GREY, " ????? ?? ? ????!");
	return 1;
	}
	}
	else if(strcmp(x_nr,"weapon",true) == 0)
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_WHITE, "USAGE: /atakelicense weapon [playerid/PartOfName]");
	return 1;
	}
	giveplayerid = ReturnUser(tmp);
	if(IsPlayerConnected(giveplayerid))
	{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	format(string, sizeof(string), "* ?? ??????? ???????? ?? ?????? ? ?????? %s.",giveplayer);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Admin %s ?????? ? ??? ???????? ?? ??????.",sendername);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	PlayerInfo[giveplayerid][pGunLic] = 0;
	return 1;
	}
	}
	else
	{
	SendClientMessage(playerid, COLOR_GREY, " ????? ?? ? ????!");
	return 1;
	}
	}
	}
	else
	{
	SendClientMessage(playerid, COLOR_GREY, " ?? ?? ????????????? ??? ???? ???????!");
	return 1;
	}
	}
	return 1;
	}
//-------------------------------[Stats]--------------------------------------------------------------------------
	if (strcmp(cmd, "/stats", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				ShowStats(playerid,playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ????? ?? ?????? !");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/dn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz-2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ?????.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/up", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ?????.");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/fly", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:px, Float:py, Float:pz, Float:pa;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py+15, pz+5);
				}
				if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-30, py, pz+5);
				}
				if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py-15, pz+5);
				}
				if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py-30, pz+5);
				}
				if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py-15, pz+5);
				}
				if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+30, py, pz+5);
				}
				if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py+15, pz+5);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ?????.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/lt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly+2, slz);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ?? ?? ?????.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly-2, slz-2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ?????.");
			}
		}
		return 1;
	}
//-------------------------------[Check]--------------------------------------------------------------------------
	if (strcmp(cmd, "/check", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "???????????: /check [playerid/PartOfName]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						ShowStats(playerid,giveplayerid);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "?? ???? ????? ??????");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ?????.");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/number", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pPhoneBook] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /number [playerid/PartOfName]");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						format(string, 256, "Name: %s, Ph: %d",sendername,PlayerInfo[giveplayerid][pPnumber]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   ??? ?????? ?????? !");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ? ??? ??? ?????????? ????? !");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/getmypos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new Float:xx,Float:yy,Float:zz,strstr[128],Float:an;
			GetPlayerPos(playerid,xx,yy,zz);
			GetPlayerFacingAngle(playerid,an);
			format(strstr,sizeof(strstr),"X: %0.1f Y: %0.1f Z: %0.1f Angle: %0.1f  Int: %d",xx,yy,zz,an,GetPlayerInterior(playerid));
			SendClientMessage(playerid,COLOR_LIGHTRED,strstr);
		}
		return 1;
	}
	if(strcmp(cmd, "/1", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetPlayerPos(playerid,359.5408,206.7693,1008.3828);
			SetPlayerInterior(playerid,3);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/kpk", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pKpk] == 1)
			{
			    format(string, sizeof(string), "* %s ???????? ???", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                format(string,sizeof(string),"AMMO LS\nPolice LS\nBank LS\n???????? LS\n????????? GPS\n????????? SF\nAMMO SF");
      			ShowPlayerDialog(playerid,999,DIALOG_STYLE_LIST,"GPS",string,"??","??????");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ? ??? ??? K?K !");
			}
		}
		return 1;
	}
	
//-------------------------------[BuyLevel]--------------------------------------------------------------------------
	if (strcmp(cmd, "/buylevel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				if(PlayerInfo[playerid][pLevel] >= 0)
				{
					new nxtlevel = PlayerInfo[playerid][pLevel]+1;
					new costlevel = nxtlevel*levelcost;//10k for testing purposes
					new expamount = nxtlevel*levelexp;
					new infostring[256];
					if(GetPlayerMoney(playerid) < costlevel)
					{
						format(infostring, 256, "   ? ??? ??? ???????????? ?????????? ???????? ????? ($%d) !",costlevel);
						SendClientMessage(playerid, COLOR_GRAD1, infostring);
						return 1;
					}
					else if (PlayerInfo[playerid][pExp] < expamount)
					{
						format(infostring, 256, "   ????? %d ?????????, ? ??? ????? [%d] !",expamount,PlayerInfo[playerid][pExp]);
						SendClientMessage(playerid, COLOR_GRAD1, infostring);
						return 1;
					}
					else
					{
						format(string, sizeof(string), "~g~LEVEL UP~n~~w~You Are Now Level %d", nxtlevel);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						PlayerPlayMusic(playerid);
						GivePlayerMoney(playerid, (-costlevel));
						PlayerInfo[playerid][pLevel]++;
						if(PlayerInfo[playerid][pDonateRank] > 0)
						{
						    PlayerInfo[playerid][pExp] -= expamount;
						    new total = PlayerInfo[playerid][pExp];
						    if(total > 0)
						    {
						        PlayerInfo[playerid][pExp] = total;
						    }
						    else
						    {
						        PlayerInfo[playerid][pExp] = 0;
						    }
						}
						else
						{
							PlayerInfo[playerid][pExp] = 0;
						}
						PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
						GameTextForPlayer(playerid, string, 5000, 1);
						format(infostring, 256, "   ?? ?????? ??????? %d ?? ($%d) ?????? /upgrade", nxtlevel, costlevel);
						SendClientMessage(playerid, COLOR_GRAD1, infostring);
						format(infostring, 256, "   ??? ???? %d ??????? ????????????",PlayerInfo[playerid][gPupgrade]);
						SendClientMessage(playerid, COLOR_GRAD2, infostring);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ????????? !");
			}
		}
		return 1;
	}
//-------------------------------[UPGRADE]--------------------------------------------------------------------------
	if (strcmp(cmd, "/carcolor", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new house = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD3,"($5000)???????????: /carcolor [color 1 - 2] [color number]");
					return 1;
				}
				new colornum = strval(tmp);
				if(colornum > 2 || colornum < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"?????? 1 ??? 2");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD3,"($5000)???????????: /carcolor [color 1 - 2] [color number]");
				}
				new color = strval(tmp);
				if(color > 126)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"???????? 126 ??????");
					return 1;
				}
				if (GetPlayerMoney(playerid) < 5000)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"? ??? ????????? ?????");
				}
				if(colornum == 1)
				{
					HouseInfo[house][hVcol1] = color;
					format(string, sizeof(string), "????????????? ???? 1 ?????? %d -$5000",color);
					SendClientMessage(playerid, COLOR_GRAD3,string);
				}
				else
				{
					HouseInfo[house][hVcol2] = color;
					format(string, sizeof(string), "????????????? ???? 2 ?????? %d -$5000",color);
					SendClientMessage(playerid, COLOR_GRAD3,string);
				}
				SendClientMessage(playerid, COLOR_GRAD6, "? ??????? 24 ????? ???? ????? ?????? ????? ???????");
				GivePlayerMoney(playerid,-5000);
				SBizzInfo[5][sbTill] += 5000;
				ExtortionSBiz(5, 5000);
				PlayerPlaySound(giveplayerid, 1134, 0.0, 0.0, 0.0);
				OnPropUpdate();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ??? ?? ??????????? ???");
				return 1;
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/carupgrade", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new house = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
			    if(HouseCarSpawns[house][0] == 0.0)
			    {
					SendClientMessage(playerid,COLOR_GREY,"? ?????? ???? ??????????? ????????, ?? ?? ?????? ????? ?????");
					return 1;
			    }
				new gunid[16];
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					format(string, sizeof(string), "???????????: /carupgrade [carname]");
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					SendClientMessage(playerid, COLOR_WHITE,"*** ????????????? ????????? ???????????? $100000 ***");
					SendClientMessage(playerid, COLOR_GRAD2,string);
					if(PlayerInfo[playerid][pLevel] >= 3)
					{
						SendClientMessage(playerid, COLOR_GRAD3, "??????????: blistacompact clover elegant emperor glendale greenwood");
						SendClientMessage(playerid, COLOR_GRAD3, "??????????: huntley jester landstalker merit nebula sabre stratum");
						SendClientMessage(playerid, COLOR_GRAD3, "??????????: sunrise tahoma uranus regina");
						SendClientMessage(playerid, COLOR_GRAD3, "?????????? ??? VIP: stretch elegy phoenix hotknife bandito sultan");
						SendClientMessage(playerid, COLOR_GRAD3, "?????????? ??? VIP: infernus turismo nrg500 slamvan bullet banshee");
					}
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					return 1;
				}
				if(SBizzInfo[5][sbProducts] == 0)
				{
					GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					return 1;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				if (GetPlayerMoney(playerid) > 100000)
				{
				    if(strcmp(gunid, "regina", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Regina");
						HouseInfo[house][hVec] = 479;
					}
				    else if(strcmp(gunid, "banshee", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pDonateRank] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ? ??? ?? VIP ???????");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Banshee");
						HouseInfo[house][hVec] = 429;
					}
				    else if(strcmp(gunid, "bullet", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pDonateRank] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ? ??? ?? VIP ???????");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Bullet");
						HouseInfo[house][hVec] = 541;
					}
				    else if(strcmp(gunid, "slamvan", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pDonateRank] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ? ??? ?? VIP ???????");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? slamvan");
						HouseInfo[house][hVec] = 535;
					}
				    else if(strcmp(gunid, "nrg500", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pDonateRank] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ? ??? ?? VIP ???????");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? nrg500");
						HouseInfo[house][hVec] = 522;
					}
				    else if(strcmp(gunid, "turismo", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pDonateRank] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ? ??? ?? VIP ???????");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? turismo");
						HouseInfo[house][hVec] = 451;
					}
				    else if(strcmp(gunid, "infernus", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pDonateRank] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ? ??? ?? VIP ???????");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Infernus");
						HouseInfo[house][hVec] = 411;
					}
					else if(strcmp(gunid, "stretch", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pDonateRank] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ? ??? ?? VIP ???????");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Stretch");
						HouseInfo[house][hVec] = 409;
					}
					else if(strcmp(gunid, "hotknife", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pDonateRank] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ? ??? ?? VIP ???????");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Hotknife");
						HouseInfo[house][hVec] = 434;
					}
					else if(strcmp(gunid, "bandito", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pDonateRank] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ? ??? ?? VIP ???????");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Bandito");
						HouseInfo[house][hVec] = 568;
					}
					else if(strcmp(gunid, "sultan", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pDonateRank] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ? ??? ?? VIP ???????");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Sultan");
						HouseInfo[house][hVec] = 560;
					}
					else if(strcmp(gunid, "elegy", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pDonateRank] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ? ??? ?? VIP ???????");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Elegy");
						HouseInfo[house][hVec] = 562;
					}
					else if(strcmp(gunid, "phoenix", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pDonateRank] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ? ??? ?? VIP ???????");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Phoenix");
						HouseInfo[house][hVec] = 603;
					}
					else if(strcmp(gunid, "blistacompact", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Blista Compact");
						HouseInfo[house][hVec] = 496;
					}
					else if(strcmp(gunid, "clover", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Clover");
						HouseInfo[house][hVec] = 542;
					}
					else if(strcmp(gunid, "elegant", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Elegant");
						HouseInfo[house][hVec] = 507;
					}
					else if(strcmp(gunid, "emperor", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Emperor");
						HouseInfo[house][hVec] = 585;
					}
					else if(strcmp(gunid, "glendale", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Glendale");
						HouseInfo[house][hVec] = 466;
					}
					else if(strcmp(gunid, "greenwood", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Greenwood");
						HouseInfo[house][hVec] = 492;
					}
					else if(strcmp(gunid, "huntley", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Huntley");
						HouseInfo[house][hVec] = 579;
					}
					else if(strcmp(gunid, "jester", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Jester");
						HouseInfo[house][hVec] = 559;
					}
					else if(strcmp(gunid, "landstalker", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Landstalker");
						HouseInfo[house][hVec] = 400;
					}
					else if(strcmp(gunid, "merit", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Merit");
						HouseInfo[house][hVec] = 551;
					}
					else if(strcmp(gunid, "nebula", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Nebula");
						HouseInfo[house][hVec] = 516;
					}
					else if(strcmp(gunid, "sabre", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Sabre");
						HouseInfo[house][hVec] = 475;
					}
					else if(strcmp(gunid, "stratum", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Stratum");
						HouseInfo[house][hVec] = 561;
					}
					else if(strcmp(gunid, "sunrise", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Sunrise");
						HouseInfo[house][hVec] = 550;
					}
					else if(strcmp(gunid, "tahoma", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Tahoma");
						HouseInfo[house][hVec] = 566;
					}
					else if(strcmp(gunid, "uranus", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "????? ????????????: ??? ?????????? ?????? Uranus");
						HouseInfo[house][hVec] = 558;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Unrecognized Car or Donate Rank not High enough.");
						return 1;
					}
					SendClientMessage(playerid, COLOR_GRAD6, "? ??????? 24 ????? ??? ????? ?????????? ????? ????????? -$100000");
					OnPropUpdate();
					GivePlayerMoney(playerid,-100000);
					SBizzInfo[5][sbTill] += 100000;
					ExtortionSBiz(5, 100000);
					SBizzInfo[5][sbProducts]--;
					PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "? ??? ??? ($100000)");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "?? ????, ??????? ?????? ???.");
				return 1;
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/resetupgrades", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ??????????.");
				return 1;
			}
			if (GetPlayerMoney(playerid) < 100000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ????????? 100000$ !");
				return 1;
			}
			if (PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?????? ???? ?? ??????? ???? ??????? 2 !");
				return 1;
			}
			PlayerInfo[playerid][gPupgrade] = (PlayerInfo[playerid][pLevel]-1)*2;
			PlayerInfo[playerid][pSHealth] = 0.0;
			PlayerInfo[playerid][pAlcoholPerk] = 0;
			PlayerInfo[playerid][pDrugPerk] = 0;
			PlayerInfo[playerid][pMiserPerk] = 0;
			PlayerInfo[playerid][pPainPerk] = 0;
			PlayerInfo[playerid][pTraderPerk] = 0;
			GivePlayerMoney(playerid,-100000);
			PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
			format(string, 256, "   ? ??? ???? %d ??????? ???????????? !",PlayerInfo[playerid][gPupgrade]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
		return 1;
	}
	if (strcmp(cmd, "/buygun", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(GetPlayerMoney(playerid) < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ? ??? ???? ?????!");
			    return 1;
			}
			new gun;
			new gunid[16];
			new gunstring1[256];
			new gunstring2[256];
			new gunstring3[256];
			new gunstring4[256];
			new gunstring5[256];
			new infostring[256];
			new guncharge;
			new ammocharge;
			new location = PlayerInfo[playerid][pLocal];
			if(location == 99 || location == 100 || location == 102 || IsPlayerInRangeOfPoint(playerid,5.0,2176.3,1619.4,999.9))
			{
			    if(BizzInfo[location-99][bProducts] <= 0)
			    {
			        GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					return 1;
			    }
				new mod1 = 100;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					format(string, sizeof(string), " ???????????: /buygun [gunname] [ammoamount]");
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					SendClientMessage(playerid, COLOR_WHITE,"*** Guns & Ammo ***");
					SendClientMessage(playerid, COLOR_GRAD2,string);
					format(gunstring1, 256, "Weapons: parachute ($%d) golfclub ($%d) nightstick ($%d) baseballbat ($%d) shovel ($%d) poolcue ($%d)",
					GunPrice[0][0]/100*mod1,GunPrice[1][0]/100*mod1,GunPrice[2][0]/100*mod1,GunPrice[3][0]/100*mod1,GunPrice[4][0]/100*mod1,GunPrice[5][0]/100*mod1,GunPrice[6][0]/100*mod1);
					SendClientMessage(playerid, COLOR_GRAD3, gunstring1);
					format(gunstring2, 256, "Weapons: purpledildo ($%d) whitedildo ($%d) longwhitedildo ($%d) whitedildo2 ($%d) flowers ($%d) cane",
					GunPrice[7][0]/100*mod1,GunPrice[8][0]/100*mod1,GunPrice[9][0]/100*mod1,GunPrice[10][0]/100*mod1,GunPrice[11][0]/100*mod1,GunPrice[12][0]/100*mod1);
					SendClientMessage(playerid, COLOR_GRAD3, gunstring2);
					format(gunstring3, 256, "Weapons: sdpistol ($%d) deagle ($%d) mp5 ($%d)",
					GunPrice[13][0]/100*mod1,GunPrice[14][0]/100*mod1,GunPrice[15][0]/100*mod1,GunPrice[16][0]/100*mod1,GunPrice[17][0]/100*mod1,GunPrice[18][0]/100*mod1);
					SendClientMessage(playerid, COLOR_GRAD3, gunstring3);
					format(gunstring4, 256, "Weapons: shotgun ($%d) ak47 ($%d) m4 ($%d) rifle ($%d)",
					GunPrice[19][0]/100*mod1,GunPrice[20][0]/100*mod1,GunPrice[21][0]/100*mod1,GunPrice[22][0]/100*mod1,GunPrice[23][0]/100*mod1,GunPrice[24][0]/100*mod1);
					SendClientMessage(playerid, COLOR_GRAD3, gunstring4);
					format(gunstring5, 256, "Weapons: pistolammo ($%d) shotgunammo ($%d) smgammo ($%d) assaultammo ($%d) rifleammo ($%d)",
					GunPrice[25][0],GunPrice[26][0],GunPrice[27][0],GunPrice[28][0],GunPrice[29][0]);
					SendClientMessage(playerid, COLOR_GRAD3, gunstring5);
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					return 1;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					format(string, sizeof(string), " ???????????: /buygun [gunname] [ammoamount]");
					return 1;
				}
				new ammo = strval(tmp);
				if(ammo < 1 || ammo > 999) { SendClientMessage(playerid, COLOR_GREY, "   ?????????? ammount ?? ???? 1 ? ?? ???? 999 !"); return 1; }
				if (strcmp(gunid, "parachute", true, strlen(gunid)) == 0)
				{
					gun = 46;
					guncharge = GunPrice[0][0]/100*mod1;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "golfclub", true, strlen(gunid)) == 0)
				{
					gun = 2; guncharge = GunPrice[1][0]/100*mod1; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 2; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "nightstick", true, strlen(gunid)) == 0)
				{
					gun = 3; guncharge = GunPrice[2][0]/100*mod1; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 3; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "baseballbat", true, strlen(gunid)) == 0)
				{
					gun = 5; guncharge = GunPrice[4][0]/100*mod1; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 5; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "shovel", true, strlen(gunid)) == 0)
				{
					gun = 6; guncharge = GunPrice[5][0]/100*mod1; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 6; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "poolcue", true, strlen(gunid)) == 0)
				{
					gun = 7; guncharge = GunPrice[6][0]/100*mod1; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 7; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "purpledildo", true, strlen(gunid)) == 0)
				{
					gun = 10; guncharge = GunPrice[7][0]/100*mod1; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 10; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "whitedildo", true, strlen(gunid)) == 0)
				{
					gun = 11; guncharge = GunPrice[8][0]/100*mod1; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 11; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "longwhitedildo", true, strlen(gunid)) == 0)
				{
					gun = 12; guncharge = GunPrice[9][0]/100*mod1; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 12; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "whitedildo2", true, strlen(gunid)) == 0)
				{
					gun = 13; guncharge = GunPrice[10][0]/100*mod1; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 13; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "flowers", true, strlen(gunid)) == 0)
				{
					gun = 14; guncharge = GunPrice[11][0]/100*mod1; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 14; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "cane", true, strlen(gunid)) == 0)
				{
					gun = 15; guncharge = GunPrice[12][0]/100*mod1; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 15; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "sdpistol", true, strlen(gunid)) == 0)
				{
					gun = 23; guncharge = GunPrice[13][0]/100*mod1; ammocharge = GunPrice[25][0]*ammo;
					PlayerInfo[playerid][pGun2] = 23; PlayerInfo[playerid][pAmmo2] = ammo;
				}
				else if (strcmp(gunid, "deagle", true, strlen(gunid)) == 0)
				{
					gun = 24; guncharge = GunPrice[15][0]/100*mod1; ammocharge = GunPrice[25][0]*ammo;
					PlayerInfo[playerid][pGun2] = 24; PlayerInfo[playerid][pAmmo2] = ammo;
				}
				else if (strcmp(gunid, "mp5", true, strlen(gunid)) == 0)
				{
					gun = 29; guncharge = GunPrice[18][0]/100*mod1; ammocharge = GunPrice[27][0]*ammo;
					PlayerInfo[playerid][pGun3] = 29; PlayerInfo[playerid][pAmmo3] = ammo;
				}
				else if (strcmp(gunid, "shotgun", true, strlen(gunid)) == 0)
				{
					gun = 25; guncharge = GunPrice[19][0]/100*mod1; ammocharge = GunPrice[26][0]*ammo;
					PlayerInfo[playerid][pGun3] = 25; PlayerInfo[playerid][pAmmo3] = ammo;
				}
				else if (strcmp(gunid, "ak47", true, strlen(gunid)) == 0)
				{
					gun = 30; guncharge = GunPrice[22][0]/100*mod1; ammocharge = GunPrice[28][0]*ammo;
					PlayerInfo[playerid][pGun4] = 30; PlayerInfo[playerid][pAmmo4] = ammo;
				}
				else if (strcmp(gunid, "m4", true, strlen(gunid)) == 0)
				{
					gun = 31; guncharge = GunPrice[23][0]/100*mod1; ammocharge = GunPrice[28][0]*ammo;
					PlayerInfo[playerid][pGun4] = 31; PlayerInfo[playerid][pAmmo4] = ammo;
				}
				else if (strcmp(gunid, "rifle", true, strlen(gunid)) == 0)
				{
					gun = 33; guncharge = GunPrice[24][0]/100*mod1; ammocharge = GunPrice[29][0]*ammo;
					PlayerInfo[playerid][pGun4] = 33; PlayerInfo[playerid][pAmmo4] = ammo;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "???????? ????????: ? ??????? ?? ?????? ? ??? ??????.");
					return 1;
				}
				if((guncharge+ammocharge) > GetPlayerMoney(playerid))
				{
					format(infostring, 256, "   ?? ?? ?????? $%d !",guncharge+ammocharge);
					SendClientMessage(playerid, COLOR_GRAD3, infostring);
					return 1;
				}
				if(GetPlayerMoney(playerid) < (guncharge+ammocharge))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ????? ???????????? ??? !");
				    return 1;
				}
				new payout = guncharge + ammocharge;
				format(infostring, 256, "?? ?????? %s ?%d ???????????? ??? $%d",gunid,ammo,payout);
				SendClientMessage(playerid, COLOR_GRAD3, infostring);
				if(location == 102 && IsACop(playerid)) { }
				else { GivePlayerMoney(playerid, - payout); }
				BizzInfo[location-99][bTill] += payout;
				ExtortionBiz(location-99, payout);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeapon(playerid, gun, ammo);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s ????????? ?????? ?? $%d ? ??????? %d", sendername, payout, location-99);
				printf("%s", string);
				PayLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE,"?? ?? ?????????? ? ????????.");
				return 1;
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/upgrade", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new gunid[16];
			new infostring[256];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				format(string, sizeof(string), " ???????????: /upgrade [upgradename] (?? ?????? %d ????? ??????????)",PlayerInfo[playerid][gPupgrade]);
				SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
				SendClientMessage(playerid, COLOR_WHITE,"*** ????? ???????????? ***");
				SendClientMessage(playerid, COLOR_GRAD2,string);
				if(PlayerInfo[playerid][pLevel] == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Level 2 Perks: Alcoholic, DrugAddict");
				}
				else if(PlayerInfo[playerid][pLevel] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Level 3 Perks: Alcoholic, DrugAddict, Miser");
				}
				else if(PlayerInfo[playerid][pLevel] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Level 4 Perks: Alcoholic, DrugAddict, Miser, Trader");
				}
				else if(PlayerInfo[playerid][pLevel] >= 5)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Level 5 Perks: Alcoholic, DrugAddict, Miser, Trader, PainKillers");
				}
				SendClientMessage(playerid, COLOR_GRAD5, "???.????????: health");
				SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
				return 1;
			}
			strmid(gunid, tmp, 0, strlen(cmdtext), 255);
			if (PlayerInfo[playerid][gPupgrade] > 1)
			{
				if (PlayerInfo[playerid][pLevel] >= 1 && (strcmp(gunid, "health", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pSHealth] < 50)
					{
						PlayerInfo[playerid][pSHealth] = PlayerInfo[playerid][pSHealth]+5.0;
						format(infostring, 256, "????? ????????????: ?????? ?? ?????????? ?  %.2f ??????? (+5)",PlayerInfo[playerid][pSHealth]+50);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   ? ??? ???????????? ???????? ????? ??? ????????");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "alcoholic", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pAlcoholPerk] < 3)
					{
						PlayerInfo[playerid][pAlcoholPerk] += 1;
						format(infostring, 256, "????? ??????? ????????????: ???? ??????????? ??????????? ?????? %d ??????.",PlayerInfo[playerid][pAlcoholPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   ? ??? ???????????? ??????????? ??????????? !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "drugaddict", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pDrugPerk] < 3)
					{
						PlayerInfo[playerid][pDrugPerk] += 1;
						format(infostring, 256, "????? ??????? ????????????: ???? ???????????????? %d ??????.",PlayerInfo[playerid][pDrugPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   ? ??? ???????????? ????? ??????????? !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 3 && (strcmp(gunid, "miser", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pMiserPerk] < 3)
					{
						PlayerInfo[playerid][pMiserPerk] += 1;
						format(infostring, 256, "????? ??????? ????????????: ???? ???????? ??? %d ?????? .",PlayerInfo[playerid][pMiserPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   ?? ??????????? ????? !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 4 && (strcmp(gunid, "trader", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pTraderPerk] < 3)
					{
						PlayerInfo[playerid][pTraderPerk] += 1;
						format(infostring, 256, "????? ??????? ????????????: ??? ????? ????????  %d ??????.",PlayerInfo[playerid][pTraderPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   ? ??? ????????????? ??????? ???????? !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 5 && (strcmp(gunid, "painkillers", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pPainPerk] < 3)
					{
						PlayerInfo[playerid][pPainPerk] += 1;
						format(infostring, 256, "????? ??????? ????????????: ??? ????? ?????? ???? ??????  %d ??????.",PlayerInfo[playerid][pPainPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   ? ??? ???????????? ??????? ?????? ???? !");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   ??????????? ??????");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD6, "   ? ??? ???? ????? ?????");
				return 1;
			}
			SendClientMessage(playerid, COLOR_GRAD6, infostring);
			PlayerInfo[playerid][gPupgrade]--;
		}
		return 1;
	}
//-------------------------------[Login]--------------------------------------------------------------------------
	if (strcmp(cmd, "/login", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new tmppass[64];
			if(gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, " ?? ?????? ?????.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /login ????????");
				return 1;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerLogin(playerid,tmppass);
		}
		return 1;
	}
	if (strcmp(cmd, "/register", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, " ?? ?????? ?????.");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s.ini", sendername);
			new File: hFile = fopen(string, io_read);
			if (hFile)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "??? ???/??? ??? ?? ????????, ??????? ???. ??????????.");
				fclose(hFile);
				return 1;
			}
	        new tmppass[64];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /register ??????");
				return 1;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerRegister(playerid,tmppass);
		}
		return 1;
	}
	if (strcmp(cmd, "/setpass", true) ==0 )
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, " ??????????! !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s.ini", sendername);
			new tmppass[64];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /setpass [???????????]");
				return 1;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerRegister(playerid,tmppass);
		}
		return 1;
	}
	if(strcmp(cmd, "/setage", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "*???????????: /setage [id ??????/????? ????] [???????]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "*???????????: /setage [id ??????/????? ????] [???????]");
				return 1;
			}
			new age = strval(tmp);
			PlayerInfo[giveplayerid][pAge] = age;
			}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ??? ????? ??????? !");
				return 1;
			}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ??? ??????? !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[ooc]-----------------------------------------------
	if(strcmp(cmd, "/o", true) == 0 || strcmp(cmd, "/o", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, " ?? ?? ?????????? !");
	            return 1;
	        }
			if ((noooc) && PlayerInfo[playerid][pAdmin] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "????? ??? ??? ??????????? ???????? ? ????? ????!");
				return 1;
			}
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "????? ????? ? ??? ??????????? ???????? ? ????? ????.");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/o) [chat]");
				return 1;
			}
			format(string, sizeof(string), "(( %s: %s ))", sendername, result);
			OOCOff(COLOR_OOC,string);
			printf("%s", string);
		}
		return 1;
	}
	if(strcmp(cmd, "/noooc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3 && (!noooc))
			{
				noooc = 1;
				BroadCast(COLOR_GRAD2, "   ????? ???? OOC ??? ???????? !");
			}
			else if (PlayerInfo[playerid][pAdmin] >= 3 && (noooc))
			{
				noooc = 0;
				BroadCast(COLOR_GRAD2, "   ????? ???? OOC ??? ??????? !");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "? ??? ??? ???? ??? ???? ???????.");
			}
		}
		return 1;
	}
//----------------------------------[aooc]-----------------------------------------------
	if(strcmp(cmd, "/aooc", true) == 0 || strcmp(cmd, "/ao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??????????!");
	            return 1;
	        }
			if (PlayerInfo[playerid][pAdmin] < 1338)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ? ??? ??? ??????? ? ???? ???????!");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "??????: (/ao)oc [aooc chat]");
				return 1;
			}
			format(string, sizeof(string), "[??.?????]%s: %s" , sendername, result);
			OOCOff(0x62B382AA,string);
			printf("%s", string);
		}
		return 1;
	}
	if(strcmp(cmd, "/speedoz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gSpeedo[playerid] == 1)
			{
				gSpeedo[playerid] = 2;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~on", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
			else if (gSpeedo[playerid] == 2)
			{
				gSpeedo[playerid] = 1;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~off", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "? ??? ??? ??????????. ?????? ??? ? ????? ?? ????????? 24/7 /buy");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/fuel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gGas[playerid] == 0)
			{
				gGas[playerid] = 1;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Fuel Info on", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
			else if (gGas[playerid] == 1)
			{
				gGas[playerid] = 0;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~Fuel Info off", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
		}
		return 1;
	}
	
//----------------------------------[advertise]-----------------------------------------------
	if(strcmp(cmd, "/advertise", true) == 0 || strcmp(cmd, "/ad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??????????!");
	            return 1;
         	}
	        if(PlayerInfo[playerid][pLevel] < 2)
	        {
	            SendClientMessage(playerid, TEAM_GREEN_COLOR, "(( ????? ?????? ??????? ? ???? ??? ????????? 2 ??? ))");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/ad)vertise [????? ???????]");
				return 1;
			}
			if ((!adds) && (PlayerInfo[playerid][pAdmin] < 1))
			{
				format(string, sizeof(string), "   ?????????? ?????????? ??? ??? ????? %d ??????? ????? ?????????? ???????????? !",  (addtimer/1000));
				SendClientMessage(playerid, COLOR_GRAD2, string);
				return 1;

			}
			new payout = idx * 25;
			if(GetPlayerMoney(playerid) < payout)
	        {
	            format(string, sizeof(string), "* ?? ???????????? %d ?????????, ??????? ????? $%d, ? ??? ??? ??????????.", offset, payout);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	            return 1;
	        }
			GivePlayerMoney(playerid, - payout);
			SBizzInfo[7][sbTill] += payout;
			ExtortionSBiz(7, payout);
			format(string, sizeof(string), "???????: %s, ???????: %s ?????: %d",  result, sendername,PlayerInfo[playerid][pPnumber]);
			OOCNews(TEAM_GROVE_COLOR,string);
			format(string, sizeof(string), "~r~Paid $%d~n~~w~Message contained: %d Characters", payout, idx);
			GameTextForPlayer(playerid, string, 5000, 5);
			if (PlayerInfo[playerid][pAdmin] < 1){SetTimer("AddsOn", addtimer, 0); adds = 0;}
		}
		return 1;
	}
//----------------------------------[government]-----------------------------------------------
	if(strcmp(cmd, "/government", true) == 0 || strcmp(cmd, "/gov", true) == 0 || strcmp(cmd, "/mer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid) || PlayerInfo[playerid][pMember] != 7 || PlayerInfo[playerid][pLeader] != 7)
			{
			    SendClientMessage(playerid, COLOR_GREY, "?? ?? ???????????.");
			    return 1;
			}
			if(PlayerInfo[playerid][pRank] < 5)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ???? ???????? 5, ????? ???? ? ????????? ???????????? ??? !");
			    return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/gov)ernment [text]");
				return 1;
			}
			if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1)
			{
				SendClientMessageToAll(COLOR_WHITE, "|___________ ??????? ??????? ___________|");
				format(string, sizeof(string), "?????? %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
			}
			else if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2)
			{
			    SendClientMessageToAll(COLOR_WHITE, "|___________ ??????? FBI ___________|");
				format(string, sizeof(string), "??? %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
			}
			else if(PlayerInfo[playerid][pMember]==3||PlayerInfo[playerid][pLeader]==3)
			{
			    SendClientMessageToAll(COLOR_WHITE, "|___________ ??????? ????? ___________|");
				format(string, sizeof(string), "????? %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
			}
			else if(PlayerInfo[playerid][pMember]==7||PlayerInfo[playerid][pLeader]==7)
			{
			    SendClientMessageToAll(COLOR_WHITE, "|___________ ??????? ????? ___________|");
				format(string, sizeof(string), "??? %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
			}
		}
		return 1;
	}
//----------------------------------[togooc]-----------------------------------------------

	if(strcmp(cmd, "/togooc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gOoc[playerid])
			{
				gOoc[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   ???????? ?????? ???? OOC !");
			}
			else if (gOoc[playerid])
			{
				gOoc[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   ????? ???? OOC ??????? !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tognews", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gNews[playerid])
			{
				gNews[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "??????? ?????????!");
			}
			else if (gNews[playerid])
			{
				gNews[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "??????? ????????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/togfam", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gFam[playerid])
			{
				gFam[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "??? ????? ????????!");
			}
			else if (gFam[playerid])
			{
				gFam[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "??? ????? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/togwhisper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pAdmin] > 1)
	        {
				if (!HidePM[playerid])
				{
					HidePM[playerid] = 1;
					SendClientMessage(playerid, COLOR_GRAD2, "   ??????? ?????? ???? ?????? !");
				}
				else if (HidePM[playerid])
				{
					HidePM[playerid] = 0;
					SendClientMessage(playerid, COLOR_GRAD2, "   ????? ???? ?????? ???????? !");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????/?? VIP !");
	            return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/togphone", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pAdmin] > 1)
	        {
				if (!PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 1;
					SendClientMessage(playerid, COLOR_GRAD2, "   ??? ??????? ???????? !");
				}
				else if (PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 0;
					SendClientMessage(playerid, COLOR_GRAD2, "   ??? ??????? ??????? !");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????/?? VIP !");
	            return 1;
			}
		}
		return 1;
	}
//----------------------------------[Emote]-----------------------------------------------
	if(strcmp(cmd, "/me", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????????? !");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /me [????????]");
				return 1;
			}
			format(string, sizeof(string), "* %s %s", sendername, result);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			printf("%s", string);
		}
		return 1;
	}
//----------------------------------[Local]-----------------------------------------------
	if(strcmp(cmd, "/local", true) == 0 || strcmp(cmd, "/l", true) == 0 || strcmp(cmd, "/say", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????????? !");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/l)ocal [local chat]");
				return 1;
			}
			format(string, sizeof(string), "%s ??????: %s", sendername, result);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			printf("%s", string);
		}
		return 1;
	}
	if(strcmp(cmd, "/b", true) == 0)//local ooc
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????????? !");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /b [local ooc chat]");
				return 1;
			}
			format(string, sizeof(string), "%s ??????: (( %s ))", sendername, result);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			printf("%s", string);
		}
		return 1;
	}
	if(strcmp(cmd, "/close", true) == 0 || strcmp(cmd, "/c", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??????????!");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /(c)lose [close chat text]");
				return 1;
			}
			format(string, sizeof(string), "%s ??????: %s", sendername, result);
			ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			printf("%s", string);
		}
		return 1;
	}
//----------------------------------[Shout]-----------------------------------------------
	if(strcmp(cmd, "/shout", true) == 0 || strcmp(cmd, "/s", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??????????!");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/s)hout [local chat]");
				return 1;
			}
			format(string, sizeof(string), "%s ???????: %s!!", sendername, result);
			ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			printf("%s", string);
		}
		return 1;
	}
//----------------------------------[Shout]-----------------------------------------------
	if(strcmp(cmd, "/megaphone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new tmpcar = GetPlayerVehicleID(playerid);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/m)egaphone [megaphone chat]");
				return 1;
			}
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
				if(!IsACopCar(tmpcar))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?? ?????????? ? ??????????? ???????????? ???????? !");
					return 1;
				}
				if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
				{
					format(string, sizeof(string), "[Officer %s:o< %s]", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
				{
					format(string, sizeof(string), "[Agent %s:o< %s]", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
				{
				    format(string, sizeof(string), "[Soldier %s:o< %s]", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				printf("%s", string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?? ????? ??????? !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[Team]-----------------------------------------------
	if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/r", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/r)adio [radio chat]");
				return 1;
			}
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
			{
				if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "** ?.? LSPD %s: %s. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "** ????????? LSPD %s: %s. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "** ???????????? LSPD %s: %s. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "** ????? LSPD %s: %s. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "** ??????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ??.????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ??.????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ??.????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ???????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ??.??????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ??.??????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ??????? LSPD %s: %s. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** ??????? LSPD %s: %s. **", sendername, result);
				}
				SendRadioMessage(1, TEAM_BLUE_COLOR, string);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
			{
			    if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ???????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ??????????? ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ????????? ??? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ????? ?????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ??????????? ????? ?????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ??????????? ????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ??.????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ??.????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ?????? %s: %s. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** ?????? %s: %s. **", sendername, result);
				}
				SendRadioMessage(2, TEAM_BLUE_COLOR, string);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
			{
			    if(PlayerInfo[playerid][pRank] == 20) { format(string, sizeof(string), "** ?????? ??????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 19) { format(string, sizeof(string), "** ??????? ????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 18) { format(string, sizeof(string), "** ???????-????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 17) { format(string, sizeof(string), "** ???????-????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "** ???????-????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "** ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "** ???????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "** ????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "** ??.????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ??.????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ??.????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ???????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ??.??????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??.??????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ???????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result);
				}
				SendRadioMessage(3, TEAM_BLUE_COLOR, string);
				printf("%s", string);
				return 1;
			}
			else if(gTeam[playerid] == 1||PlayerInfo[playerid][pMember]==4||PlayerInfo[playerid][pLeader]==4)
			{
				format(string, sizeof(string), "** ??????????? %s: %s. **", sendername, result);
				SendRadioMessage(4, TEAM_CYAN_COLOR, string);
				printf("%s", string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?? ????? ??????? !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[offduty]-----------------------------------------------
	if(strcmp(cmd, "/duty", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
			{
				if (PlayerToPoint(3, playerid,255.3,77.4,1003.6) || PlayerToPoint(3,playerid,-1616.1294,681.1594,7.1875) || PlayerInfo[playerid][pLocal] != 255)
				{
					if(OnDuty[playerid]==0)
			        {
				    	format(string, sizeof(string), "* ?????? %s ???? ?????? ? ?????? ?? ?????? ????????.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 24, 70);
						GivePlayerWeapon(playerid, 3, 0);
						OnDuty[playerid] = 1;
					}
					else if(OnDuty[playerid]==1)
					{
						format(string, sizeof(string), "* ?????? %s ????? ???? ?????? ? ?????? ? ???? ???????.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 23, 150);
						GivePlayerWeapon(playerid, 5, 0);
						OnDuty[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?? ? ?????????? !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 4||PlayerInfo[playerid][pLeader] == 4)
			{
			    if(JobDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ?????? ?? ?? ?????????");
			        JobDuty[playerid] = 0;
			        Medics -= 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ????????? ?? ??????");
			        JobDuty[playerid] = 1;
			        Medics += 1;
			    }
			}
			else if(PlayerInfo[playerid][pJob] == 7)
			{
			    if(JobDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ?????? ?? ?? ?????????");
			        JobDuty[playerid] = 0;
			        Mechanics -= 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ????????? ?? ?????????");
			        JobDuty[playerid] = 1;
			        Mechanics += 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ??????????? !");
			}
		}
		return 1;
	}
//----------------------------------[departments]-----------------------------------------------
	if(strcmp(cmd, "/departments", true) == 0 || strcmp(cmd, "/d", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/d)epartments [department chat]");
				return 1;
			}
			if(PlayerInfo[playerid][pMember]==1 || PlayerInfo[playerid][pLeader]==1)
			{
			    if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "** ?.? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "** ????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "** ???????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "** ????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "** ??????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ??.????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ??.????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ??.????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ???????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ??.??????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ??.??????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ??????? LSPD %s: %s. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result);
				}
				//SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember]==2 || PlayerInfo[playerid][pLeader]==2)
			{
			    if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ???????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ??????????? ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ????????? ??? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ????? ?????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ??????????? ????? ?????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ??????????? ????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ??.????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ??.????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ?????? %s: %s. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** ?????? %s: %s. **", sendername, result);
				}
				//SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember]==3 || PlayerInfo[playerid][pLeader]==3)
			{
			    if(PlayerInfo[playerid][pRank] == 20) { format(string, sizeof(string), "** ?????? ??????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 19) { format(string, sizeof(string), "** ??????? ????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 18) { format(string, sizeof(string), "** ???????-????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 17) { format(string, sizeof(string), "** ???????-????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "** ???????-????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "** ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "** ???????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "** ????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "** ??.????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ??.????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ??.????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ???????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ??.??????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??.??????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ???????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result);
				}
				//SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			else if(gTeam[playerid] == 1||PlayerInfo[playerid][pMember]==19||PlayerInfo[playerid][pLeader]==19)
			{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ??????? ??????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ??????? ???????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????? ???????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ???????? ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result);
				}
				//SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_YELLOW, string);
				printf("%s", string);
				return 1;
			}
			else if(gTeam[playerid] == 1||PlayerInfo[playerid][pMember]==4||PlayerInfo[playerid][pLeader]==4)
			{
				format(string, sizeof(string), "** ????? %s: %s. **", sendername, result);
				SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?? ???? ??????? !");
				return 1;
			}
		}
		return 1;
	}
	//----------------------------------[departments]-----------------------------------------------
	if(strcmp(cmd, "/dep", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/d)epartments [department chat]");
				return 1;
			}
			if(PlayerInfo[playerid][pMember]==1 || PlayerInfo[playerid][pLeader]==1)
			{
			    if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "** ?.? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "** ????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "** ???????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "** ????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "** ??????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ??.????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ??.????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ??.????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ????????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ???????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ??.??????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ??.??????? LSPD %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ??????? LSPD %s: %s. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result);
				}
				//SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember]==2 || PlayerInfo[playerid][pLeader]==2)
			{
			    if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ???????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ??????????? ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ????????? ??? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ????? ?????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ??????????? ????? ?????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ??????????? ????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ??.????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ??.????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ?????? %s: %s. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** ?????? %s: %s. **", sendername, result);
				}
				//SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
                }
				else if(PlayerInfo[playerid][pMember]==19 || PlayerInfo[playerid][pLeader]==19)
				{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ??????? ??????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ??????? ???????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????? ???????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ???????? ????????? %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result);
				}
				//SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			//else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?? ???? ??????? !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[mdc]-----------------------------------------------
	if(strcmp(cmd, "/mdc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsACop(playerid))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??????????? !");
	            return 1;
	        }
			new tmpcar = GetPlayerVehicleID(playerid);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /mdc [playerid/PartOfName]");
				return 1;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsACopCar(tmpcar)||PlayerToPoint(5.0, playerid, 253.9280,69.6094,1003.6406))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						SendClientMessage(playerid, TEAM_BLUE_COLOR,"______-=????????? ????????? ??????=-_______");
						format(string, sizeof(string), "??? : %s", sendername);
						SendClientMessage(playerid, COLOR_WHITE,string);
						format(string, sizeof(string), "???????????? : %s", PlayerCrime[giveplayerid][pAccusedof]);
						SendClientMessage(playerid, COLOR_GRAD2,string);
						format(string, sizeof(string), "?????????? : %s", PlayerCrime[giveplayerid][pVictim]);
						SendClientMessage(playerid, COLOR_GRAD3,string);
						format(string, sizeof(string), "?????????? : %s", PlayerCrime[giveplayerid][pAccusing]);
						SendClientMessage(playerid, COLOR_GRAD4,string);
						format(string, sizeof(string), "?????????? : %s", PlayerCrime[giveplayerid][pBplayer]);
						SendClientMessage(playerid, COLOR_GRAD5,string);
						SendClientMessage(playerid, TEAM_BLUE_COLOR,"_______________________________________");
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?? ?????????? ? ??????????? ???????????? ???????? ??? ? ??????????? ??????????.");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[SetCrim]-----------------------------------------------
	if(strcmp(cmd, "/suspect", true) == 0 || strcmp(cmd, "/su", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(OnDuty[playerid] != 1  && PlayerInfo[playerid][pMember] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??? ?????????? ????????? ????????????!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/su)spect [playerid/PartOfName] [crime discription]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (gTeam[playerid] == 2 || IsACop(playerid))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (gTeam[giveplayerid] != 2)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/su)spect [playerid/PartOfName] [crime text]");
								return 1;
							}
							if(WantedPoints[giveplayerid] == 0) { WantedPoints[giveplayerid] = 3; }
							else { WantedPoints[giveplayerid]+= 2; }
							SetPlayerCriminal(giveplayerid,playerid, result);
							return 1;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?? ?????? ??????????? ???????????? !");
						}
					}
				}
				else
				{
						format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?? ??????????? / ??? / ???????????? ??????? !");
			}
		}
		return 1;
	}
//----------------------------------[LOCK]-----------------------------------------------
	if(strcmp(cmd, "/lock", true) == 0)
	{
	if(IsPlayerConnected(playerid))
	{
	new carid;
	if(gTeam[playerid] == 2 || gTeam[playerid] == 1)
	{
		if(gLastCar[playerid] == 0 && PlayerInfo[playerid][pPhousekey] == 255)
		{
			SendClientMessage(playerid, COLOR_GRAD2, " ? ??? ??? ??????. ");
			return 1;
		}
		else if(gLastCar[playerid] != 0 && gLastCar[playerid] != PlayerInfo[playerid][pPhousekey]+1)
		{
			if (HireCar[playerid] != gLastCar[playerid] && HireCar[playerid] != 299)
			{
				gLastDriver[HireCar[playerid]] = 300;
				gCarLock[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
			}
			HireCar[playerid] = gLastCar[playerid];
		}
	}
	if (PlayerInfo[playerid][pPhousekey] == 255)
	{
		if(HireCar[playerid] == 299)
		{
			SendClientMessage(playerid, COLOR_GRAD2, " ? ??? ??? ??????.");
			return 1;
		}
	}
	carid = PlayerInfo[playerid][pPhousekey]+1;
	if(HireCar[playerid] != 299 && !SwitchKey[playerid])
	{
		carid = HireCar[playerid];
	}
	//new driver = gLastDriver[carid];
	new lockstatus = gCarLock[carid];
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	switch (lockstatus)
	{
		case 0:
		{
			if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ? ??? ??? ??????");
				return 1;
			}
			if(HireCar[playerid] == carid && !SwitchKey[playerid])
			{
				GameTextForPlayer(playerid, "~w~Hire Vehicle ~r~Locked", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				gCarLock[carid] = 1;
				LockCar(carid);
			}
			else if (PlayerInfo[playerid][pPhousekey] == carid-1)
			{
				GameTextForPlayer(playerid, "~w~House Vehicle ~r~Locked", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				gCarLock[carid] = 1;
				LockCar(carid);
				return 1;
			}
		}
		case 1:
		{
			if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ? ??? ??? ?????? ");
				return 1;
			}
			if(HireCar[playerid] == carid && !SwitchKey[playerid])
			{
				GameTextForPlayer(playerid, "~w~Hire Vehicle ~g~Unlocked", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				gCarLock[carid] = 0;
				UnLockCar(carid);
			}
			if (PlayerInfo[playerid][pPhousekey] == carid-1)
			{
				GameTextForPlayer(playerid, "~w~House Vehicle ~g~Unlocked", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				gCarLock[carid] = 0;
				UnLockCar(carid);
				return 1;
			}
		}
		default:
		{
			SendClientMessage(playerid, COLOR_GRAD2, " ? ??? ??? ?????? ");
		}
	}
	if(carid == 256)
	{
		SendClientMessage(playerid, COLOR_GRAD2, " ? ??? ??? ?????? !");
	}
	}
	return 1;
}
	if(strcmp(cmd, "/open", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(PlayerInfo[playerid][pPhousekey] == i)
					{
						if(HouseInfo[i][hLock] == 1)
						{
							HouseInfo[i][hLock] = 0;
							GameTextForPlayer(playerid, "~w~Door ~g~Unlocked", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(HouseInfo[i][hLock] == 0)
						{
							HouseInfo[i][hLock] = 1;
							GameTextForPlayer(playerid, "~w~Door ~r~Locked", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You Dont Have A Key", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i)
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							BizzInfo[i][bLocked] = 0;
							GameTextForPlayer(playerid, "~w~Bussiness ~g~Open", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(BizzInfo[i][bLocked] == 0)
						{
							BizzInfo[i][bLocked] = 1;
							GameTextForPlayer(playerid, "~w~Bussiness ~r~Closed", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You Dont Have A Key", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i+100)
					{
						if(SBizzInfo[i][sbLocked] == 1)
						{
							SBizzInfo[i][sbLocked] = 0;
							GameTextForPlayer(playerid, "~w~Bussiness ~g~Open", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(SBizzInfo[i][sbLocked] == 0)
						{
							SBizzInfo[i][sbLocked] = 1;
							GameTextForPlayer(playerid, "~w~Bussiness ~r~Closed", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You Dont Have A Key", 5000, 6);
						return 1;
					}
				}
			}
	    }
	    return 1;
	}
//----------------------------------[Wisper]-----------------------------------------------
	if(strcmp(cmd, "/wisper", true) == 0 || strcmp(cmd, "/w", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ??????????!");
	            return 1;
         	}
	        if(PlayerInfo[playerid][pLevel] < 2)
	        {
	            SendClientMessage(playerid, TEAM_GREEN_COLOR, "(( ????? ????? ???????? ?? - ??? ????????? 2 ??? ))");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/w)isper [playerid/PartOfName] [whisper text]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(HidePM[giveplayerid] > 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ????? ???????? ?? !");
			            return 1;
			        }
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					if(giveplayerid == playerid)
					{
						format(string, sizeof(string), "* %s ?? .", sendername);
						ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/w)isper [playerid/PartOfName] [whisper text]");
						return 1;
					}
					format(string, sizeof(string), "%s(ID: %d) ?? %s", sendername, playerid, (result));
					SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "?? ? %s(ID: %d) %s", giveplayer, giveplayerid,(result));
					SendClientMessage(playerid,  COLOR_YELLOW, string);
					SBizzInfo[2][sbTill] += txtcost / 2;
					ExtortionSBiz(2, txtcost / 2);
					return 1;
				}
			}
			else
			{
					format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//----------------------------------[Bank System]-----------------------------------------------
    if(strcmp(cmd, "/withdraw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLocal] != 103)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "?? ?? ? ?????.");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /withdraw [amount]");
				format(string, sizeof(string), "  ? ??? ???? $%d ? ????? ?????.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /withdraw [amount]");
				format(string, sizeof(string), "  ? ??? ???? $%d ? ????? ?????.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ? ??? ??? ??? ????? !");
				return 1;
			}
		    ConsumingMoney[playerid] = 1;
			GivePlayerMoney(playerid,cashdeposit);
			PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-cashdeposit;
			format(string, sizeof(string), "  ?? ??????? $%d ?? ?????? ?????? ?????????? ?????: $%d ", cashdeposit,PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/bank", true) == 0 || strcmp(cmd, "/deposit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLocal] != 103)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ? ????? !");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /bank [amount]");
				format(string, sizeof(string), "  ? ??? $%d ?? ?????.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /bank [amount]");
				format(string, sizeof(string), "  ? ??? $%d ?? ?????.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if (cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "? ??? ??? ??????? ?????.");
				return 1;
			}
			GivePlayerMoney(playerid,-cashdeposit);
			new curfunds = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount]=cashdeposit+PlayerInfo[playerid][pAccount];
			SendClientMessage(playerid, COLOR_WHITE, "|___ ???? ?????? ___|");
			format(string, sizeof(string), "  ?????? ??????: $%d", curfunds);
			SendClientMessage(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "  ???????: $%d",cashdeposit);
			SendClientMessage(playerid, COLOR_GRAD4, string);
			SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
			format(string, sizeof(string), "  ????? ??????: $%d", PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/balance", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pLocal] != 103)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "?? ?? ? ?????.");
	            return 1;
	        }
			format(string, sizeof(string), "  ? ??? ???? $%d ? ????? ?????.",PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/dice", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new dice = random(6)+1;
			if (gDice[playerid] == 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s ??????? ???? ? ?????, ??????? ???????????? ?? %d", sendername,dice);
				ProxDetector(5.0, playerid, string, TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ? ??? ??? ??????");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/transfer", true) == 0 || strcmp(cmd, "/wiretransfer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pLevel] < 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?????? ???? ??????? 3 !");
				return 1;
			}
			if(PlayerInfo[playerid][pLocal] != 103)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ? ????? !");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /transfer [playerid/PartOfName] [amount]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /transfer [playerid/PartOfName] [amount]");
				return 1;
			}
			moneys = strval(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					playermoney = PlayerInfo[playerid][pAccount] ;
					if (moneys > 0 && playermoney >= moneys)
					{
						PlayerInfo[playerid][pAccount] -= moneys;
						PlayerInfo[giveplayerid][pAccount] += moneys;
						format(string, sizeof(string), "   ? ??? ???? transferd $ %d ? ????? %s's", moneys, giveplayer,giveplayerid);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "   ?? ???????? $%d ?? ??? ???? ?? %s %s", moneys, sendername, playerid);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "%s transferd $%d ? %s", sendername, moneys, giveplayer);
		                if(moneys >= 500000)
						{
							ABroadCast(COLOR_YELLOW,string,1);
						}
						printf("%s", string);
						PayLog(string);
						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   ???????????????? ???????????? ??????????.");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/buy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!PlayerToPoint(100, playerid,-30.875, -88.9609, 1004.53))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?? ?????????? ? 24-7 !");
				return 1;
			}
			format(string,sizeof(string),"??????? 500$\n????? ???????? 7500$\n?????????? ????? 5000$\n???? ? ????? 500$\n???? ?? ????? 5000$\n????? ??? ????? 10000$\nKpk 1000$\n?????? 50$\n????? 2500$\n???????? 10$\n????????? 10$\n????? 10$");
			ShowPlayerDialog(playerid,101,DIALOG_STYLE_LIST,"??????? 27/7",string,"??","??????");
		}
		return 1;
	}
	if(strcmp(cmd, "/buyhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
					{
						format(string, sizeof(string), "   ? ??? ??????? ?????? ??????? ??? ??????? ????? ???? !", HouseInfo[h][hLevel]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   ? ??? ??? ???? ???. ??????? ???????? ???: /sellhouse !");
						return 1;
					}
					if(GetPlayerMoney(playerid) > HouseInfo[h][hValue])
					{
						PlayerInfo[playerid][pPhousekey] = h;
						HouseInfo[h][hOwned] = 1;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-HouseInfo[h][hValue]);
						PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,HouseInfo[h][hInt]);
						SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
						GameTextForPlayer(playerid, "~w~Welcome Home~n~You can exit at any time by moving to this door and typing /exit", 5000, 3);
						PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
						PlayerInfo[playerid][pLocal] = h;
						SetPlayerVirtualWorld(playerid,HouseInfo[h][hVirtual]);
						SendClientMessage(playerid, COLOR_WHITE, " ?????? /help ??? ????????? ????? ???????!");
                        DateProp(playerid);
						OnPropUpdate();
						OnPlayerUpdate_GF(playerid);
						new strin[256];
						format(strin,sizeof(strin),"%s",HouseInfo[h][hOwner]);
						Update3DTextLabelText(hhh[h],0x37E3ECAA,strin);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "? ??? ?? ??????? ?????.");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rentroom", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
				{
					if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   ? ??? ???? ???? ???, ???????? ??? /sellhouse");
						return 1;
					}
					if(GetPlayerMoney(playerid) > HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pPhousekey] = h;
						GivePlayerMoney(playerid,-HouseInfo[h][hRent]);
						HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
						PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,HouseInfo[h][hInt]);
						SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
						GameTextForPlayer(playerid, "~w~Welcome Home~n~You can exit at any time by moving to this door and typing /exit", 5000, 3);
						PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
						PlayerInfo[playerid][pLocal] = h;
						SendClientMessage(playerid, COLOR_WHITE, " ?????? /help ??? ????????? ????? ???????");
						OnPlayerUpdate_GF(playerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, " ? ??? ????????? ?????");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rentcar", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if(GetPlayerVehicleID(playerid) >= 72 && GetPlayerVehicleID(playerid) <= 77)
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if(GetPlayerVehicleID(playerid) >= 72 && GetPlayerVehicleID(playerid) <= 74)
				{
					if(SBizzInfo[0][sbProducts] == 0)
					{
						GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
						return 1;
					}
					if(PlayerInfo[playerid][pPbiskey] == 0)
					{
						GameTextForPlayer(playerid, "~w~No charge for the boss", 5000, 3);
						TogglePlayerControllable(playerid, 1);
						return 1;
					}
					if (GetPlayerMoney(playerid) <  SBizzInfo[0][sbEntranceCost])
					{
						SendClientMessage(playerid, COLOR_GRAD2, "   ? ??? ???? ?????!");
						return 1;
					}
					GivePlayerMoney(playerid,-SBizzInfo[0][sbEntranceCost]);
					SBizzInfo[0][sbTill] += SBizzInfo[0][sbEntranceCost];
					ExtortionSBiz(0, SBizzInfo[0][sbEntranceCost]);
					SBizzInfo[0][sbProducts]--;
				}
				if(GetPlayerVehicleID(playerid) >= 75 && GetPlayerVehicleID(playerid) <= 77)
				{
					if(SBizzInfo[1][sbProducts] == 0)
					{
						GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
						return 1;
					}
					if(PlayerInfo[playerid][pPbiskey] == 1)
					{
						GameTextForPlayer(playerid, "~w~No charge for the boss", 5000, 3);
						TogglePlayerControllable(playerid, 1);
						return 1;
					}
					if (GetPlayerMoney(playerid) <  SBizzInfo[1][sbEntranceCost])
					{
						SendClientMessage(playerid, COLOR_GRAD2, "? ??? ?? ??????? ?????.");
						return 1;
					}
					GivePlayerMoney(playerid,-SBizzInfo[1][sbEntranceCost]);
					SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];
					ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
					SBizzInfo[1][sbProducts]--;
				}
				if(HireCar[playerid] != 299)
				{
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
				}
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~We hope you enjoy ~n~the use of this car~n~To lock or unlock your car~n~type ~g~/lock~n~~w~please drive safely",hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/hirecar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /hirecar [key id]");
					return 1;
				}
				new car = strval(tmp);
				HireCar[playerid] = car;
				format(string, sizeof(string), " ???? ??? %d ??????.",car);
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_WHITE, "??????: /lock ");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/switchkey", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(!SwitchKey[playerid])
			{
				if(HireCar[playerid] != 299)
				{
					SwitchKey[playerid] = 1;
					GameTextForPlayer(playerid, "~w~You control now your house car", 5000, 6);
				}
				else
				{
					GameTextForPlayer(playerid, "~w~You do not hire a car", 5000, 6);
				}
				return 1;
			}
			else
			{
				SwitchKey[playerid] = 0;
				GameTextForPlayer(playerid, "~w~You control now your hire car", 5000, 6);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/givekey", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			new car;
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /givekey [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "  ? ??? ??? ?????, ????? ????");
				return 1;
			}
			else
			{
				if(HireCar[playerid] != 299 && SwitchKey[playerid] == 0)
				{
					car = HireCar[playerid];
					gCarLock[car] = 0;
					UnLockCar(car);
					HireCar[playerid] = 299;
				}
				else
				{
					car = PlayerInfo[playerid][pPhousekey]+1;
				}
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if(ProxDetectorS(5.0, playerid, giveplayerid))
					{
						if(HireCar[giveplayerid] != 299)
						{
							gCarLock[HireCar[giveplayerid]] = 0;
							UnLockCar(HireCar[giveplayerid]);
						}
						HireCar[giveplayerid] = car;
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "   ?? ???? %s ???? ? ?????? ????????????? ????????", giveplayer);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "   ?? ???????? ???? ? ????????????? ???????? ?? %s", sendername);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "* %s ???????? ?????? ??????, ? ???? ?? %s", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/unrentcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
				gCarLock[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 299;
				GameTextForPlayer(playerid, "~w~You no longer rent a car", 5000, 3);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/unrent", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, " ??? ??????????? ???? ??? !");
				return 1;
			}
			PlayerInfo[playerid][pPhousekey] = 255;
			SendClientMessage(playerid, COLOR_WHITE, "?? ?????? ????");
		}
		return 1;
	}
	if(strcmp(cmd, "/housewithdraw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			new bouse = PlayerInfo[playerid][pPhousekey];
			if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /housewithdraw [amount]");
					format(string, sizeof(string), "  ? ??? ???? $%d ? ????? ?????.", HouseInfo[bouse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /housewithdraw [amount]");
					format(string, sizeof(string), "  ? ??? ???? $%d ? ????? ?????.", HouseInfo[bouse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				if (cashdeposit >  HouseInfo[bouse][hTakings] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ? ??? ??? ??? ????? !");
					return 1;
				}
				if (!PlayerToPoint(100, playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?????? ?? ?????? ???? !");
					return 1;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,cashdeposit);
					HouseInfo[bouse][hTakings]=HouseInfo[bouse][hTakings]-cashdeposit;
					format(string, sizeof(string), "  ?? ??????? $%d ?? ?????? ?????? ?????????? ?????: $%d ", cashdeposit,HouseInfo[bouse][hTakings]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "??? ?? ??????????? ???.");
			}
		}
		return 1;

	}
	if(strcmp(cmd, "/asellbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /asellbiz [bizid]");
				return 1;
			}
			new biz = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				BizzInfo[biz][bLocked] = 1;
				BizzInfo[biz][bOwned] = 0;
				strmid(BizzInfo[biz][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[biz][bExtortion], "No-one", 0, strlen("No-one"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~You have sold the Business");
				GameTextForPlayer(playerid, string, 10000, 3);
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "?? ?? ?????????????.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/asellsbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /asellsbiz [sbizid]");
				return 1;
			}
			new sbiz = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				SBizzInfo[sbiz][sbLocked] = 1;
				SBizzInfo[sbiz][sbOwned] = 0;
				strmid(SBizzInfo[sbiz][sbOwner], "The State", 0, strlen("The State"), 255);
				strmid(SBizzInfo[sbiz][sbExtortion], "No-one", 0, strlen("No-one"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~You have sold the Business");
				GameTextForPlayer(playerid, string, 10000, 3);
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "?? ?? ?????????????.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/asellhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /asellhouse [houseid]");
				return 1;
			}
			new house = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hArm] = 0;
				HouseInfo[house][hHealthx] = 0;
				HouseInfo[house][hHealthy] = 0;
				HouseInfo[house][hHealthz] = 0;
				HouseInfo[house][hArmourx] = 0;
				HouseInfo[house][hArmoury] = 0;
				HouseInfo[house][hArmourz] = 0;
				HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				HouseInfo[house][hVec] = 418;
				HouseInfo[house][hVcol1] = -1;
				HouseInfo[house][hVcol2] = -1;
				strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~You have sold this property", HouseInfo[house][hValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "?? ?? ?????????????.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/sellhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPhousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "??? ?? ??????????? ???.");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ? ??????? ?? ?????? ??????? ??? !");
		        return 1;
		    }
			if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hArm] = 0;
				HouseInfo[house][hHealthx] = 0;
				HouseInfo[house][hHealthy] = 0;
				HouseInfo[house][hHealthz] = 0;
				HouseInfo[house][hArmourx] = 0;
				HouseInfo[house][hArmoury] = 0;
				HouseInfo[house][hArmourz] = 0;
				HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				HouseInfo[house][hVec] = 418;
				HouseInfo[house][hVcol1] = -1;
				HouseInfo[house][hVcol2] = -1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
				ConsumingMoney[playerid] = 1;
				GivePlayerMoney(playerid,HouseInfo[house][hValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~$%d", HouseInfo[house][hValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				PlayerInfo[playerid][pPhousekey] = 255;
				new strin[256];
				format(strin,sizeof(strin),"??? ?????????\n???????: %d\n????: %d",HouseInfo[house][hLevel],HouseInfo[house][hValue]);
				Update3DTextLabelText(hhh[house],0xFF8000AA,strin);
				if(PlayerInfo[playerid][pLocal] == house)
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
				}
				OnPropUpdate();
				OnPlayerUpdate_GF(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "?? ????.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/houseupgrade", true) == 0 || strcmp(cmd, "/hu", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new house = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /houseupgrade [item number]");
					SendClientMessage(playerid, COLOR_GRAD1, "|_______???????? ??????._______|");
					SendClientMessage(playerid, COLOR_GRAD2, "| 1: ??????? $50000");
					SendClientMessage(playerid, COLOR_GRAD3, "| 2: ????? ????? $100000");
					SendClientMessage(playerid, COLOR_GRAD5, "| 3: ?? $500");
					return 1;
				}
				new item = strval(tmp);
				switch (item)
				{
					case 1:
					{
						if(SBizzInfo[6][sbProducts] == 0)
						{
							GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
							return 1;
						}
						if(PlayerInfo[playerid][pLevel] < 5)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "?? ?????? ???? ??????? 5, ????? ?????? ???");
							return 1;
						}
						if(GetPlayerMoney(playerid) < 50000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "? ??? ??????? ???? ?????");
							return 1;
						}
						HouseInfo[house][hHel] = 1;
						GivePlayerMoney(playerid,-50000);
						SBizzInfo[6][sbTill] += 50000;//heal buisness
						ExtortionSBiz(6, 50000);
						SBizzInfo[6][sbProducts]--;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "?? ?????? ?????? ???????? ???? ????, ?????? /heal.");
					}
					case 2:
					{
					    if(!IsACop(playerid))
					    {
							SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????? ?????? ???, ?? ?? ??????????? !");
							return 1;
					    }
						if(SBizzInfo[6][sbProducts] == 0)
						{
							GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
							return 1;
						}
						if (PlayerInfo[playerid][pLevel] < 7)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "?? ?????? ???? ??????? 7, ????? ?????? ???");
							return 1;
						}
						if(GetPlayerMoney(playerid) < 100000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, " ? ??? ????????? ?????");
							return 1;
						}
						HouseInfo[house][hArm] = 1;
						GivePlayerMoney(playerid,-100000);
						SBizzInfo[6][sbTill] += 100000;//heal buisness
						ExtortionSBiz(6, 100000);
						SBizzInfo[6][sbProducts]--;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "?? ?????? ?????? ???????? ????? ????, ?????????? /heal.");
					}
					case 3:
					{
						if(SBizzInfo[6][sbProducts] == 0)
						{
							GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
							return 1;
						}
						if (PlayerInfo[playerid][pLevel] < 3)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "?? ?????? ???? ??????? 3, ????? ?????? ???");
							return 1;
						}
						if(GetPlayerMoney(playerid) < 500)
						{
							SendClientMessage(playerid, COLOR_GRAD5, " ????????? ?????");
							return 1;
						}
						HouseInfo[house][hHealthx] = 1;
						GivePlayerMoney(playerid,-500);
						SBizzInfo[6][sbTill] += 500;
						ExtortionSBiz(6, 500);
						SBizzInfo[6][sbProducts]--;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "?? ?????? ?????? ???????? ?????, ?????? /tv.");
					}
				}
				OnPropUpdate();
				OnPlayerUpdate_GF(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "?? ????.");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setrent", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /setrent [RentFee]");
					return 1;
				}
				if(strval(tmp) < 1 || strval(tmp) > 99999)
				{
					SendClientMessage(playerid, COLOR_WHITE, "??????????? ???????? ????? ?????????? 1$, ???????????? ???????? ????? $99999.");
					return 1;
				}
				HouseInfo[bouse][hRent] = strval(tmp);
				OnPropUpdate();
				format(string, sizeof(string), "House rent set to $%d", HouseInfo[bouse][hRent]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ??? ?? ??????????? ???");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/evictall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			if (bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(i != playerid)
						{
							if (PlayerInfo[i][pPhousekey] == PlayerInfo[playerid][pPhousekey] )
							{
								SendClientMessage(i, COLOR_WHITE, "?? ???? ???????? ?? ?????? ????.");
								SendClientMessage(playerid, COLOR_WHITE, "??? ???? ????????.");
								PlayerInfo[i][pPhousekey] = 255;
								return 1;
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "?? ????.");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/evict", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /evict [playerid/PartOfName]");
				}
				new target;
				//target = strval(tmp);
				target = ReturnUser(tmp);
				if (target == playerid)
				{
					SendClientMessage(target, COLOR_WHITE, " ?? ?? ?????? ???????? ????");
					return 1;
				}
				if(IsPlayerConnected(target))
				{
				    if(target != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[target][pPhousekey] == PlayerInfo[playerid][pPhousekey])
						{
							SendClientMessage(target, COLOR_WHITE, "?? ???? ????????");
							SendClientMessage(playerid, COLOR_WHITE, "????? ??? ???????");
							PlayerInfo[target][pPhousekey] = 255;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_WHITE, "????? ?? ???????? ? ????? ???? !");
						    return 1;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "? ??? ??? ????.");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setrentable", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /setrentable [0/1]");
				}
				HouseInfo[bouse][hRentabil] = strval(tmp);
				OnPropUpdate();
				format(string, sizeof(string), " ??? ???? ??? ???: %d 1-????, 0-???", HouseInfo[bouse][hRentabil]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "? ??? ??? ????.");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/fightstyle", true) == 0)
	{
		new x_nr[256];
		x_nr = strtok(cmdtext, idx);
		if(!strlen(x_nr)) {
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ ????? ??? ___________________|");
			SendClientMessage(playerid, COLOR_WHITE, " ???????????: /fightstyle [fightname]");
			SendClientMessage(playerid, COLOR_GREY, "  ????????? ????????: box, skeenhead, kungfuu, standart");
			SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
			return 1;
		}
		if(strcmp(x_nr,"box",true) == 0)
		{
            SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
			SendClientMessage(playerid,0xAFAFAF0," > C???? ??? - '??????'");
			return 1;
		}
		if(strcmp(x_nr,"skeenhead",true) == 0)
		{
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
			SendClientMessage(playerid,0xAFAFAF0," > C???? ??? - '???????'");
			return 1;
		}
		if(strcmp(x_nr,"kungfuu",true) == 0)
		{
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
			SendClientMessage(playerid,0xAFAFAF0," > C???? ??? - '????-??'");
		}
		if(strcmp(x_nr,"standart",true) == 0)
		{
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
			SendClientMessage(playerid,0xAFAFAF0," > C???? ??? - '???????'");
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "???????????? ???????? ????? ???");
		    return 1;
		}
    	return 1;
	}
	if(strcmp(cmd, "/call", true) == 0)
	{
	if(IsPlayerConnected(playerid))
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_GRAD2, "*???????????: /call [????? ????????]");
	return 1;
	}
	if(PlayerInfo[playerid][pPnumber] == 0)
	{
	SendClientMessage(playerid, COLOR_GRAD2, "  ? ??? ??? ???????? !");
	return 1;
	}
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), "* %s ?????? ?? ????????", sendername);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
	new phonenumb = strval(tmp);
	if(phonenumb == 911)
	{
	SendClientMessage(playerid, COLOR_WHITE, "*????????: /hangup ????? ???????? ??????");
	SendClientMessage(playerid, COLOR_ALLDEPT, "*911: ????????????.  ????? ?????? ??? ????????? ??????? ??? ???????");
	Mobile[playerid] = 911;
	return 1;
	}
	if(phonenumb == PlayerInfo[playerid][pPnumber])
	{
	SendClientMessage(playerid, COLOR_GRAD2, "  ? ??? ????????? ???...");
	return 1;
	}
	if(Mobile[playerid] != 255)
	{
	SendClientMessage(playerid, COLOR_GRAD2, "  ?? ?????? ?????????...");
	return 1;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
			{
				giveplayerid = i;
				Mobile[playerid] = giveplayerid; //caller connecting
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PhoneOnline[giveplayerid] > 0)
						{
							SendClientMessage(playerid, COLOR_GREY, "   ???? ????? ?? ? ???? !");
							return 1;
						}
						if (Mobile[giveplayerid] == 255)
						{
							format(string, sizeof(string), " ??? ????????? ?????? ??????? (/Pickup) ?????? %s", sendername);
							SendClientMessage(giveplayerid, COLOR_YELLOW, string);
							GetPlayerName(giveplayerid, sendername, sizeof(sendername));
							RingTone[giveplayerid] = 10;
							format(string, sizeof(string), "* %s's ??????? ???????? ???????.", sendername);
							SendClientMessage(playerid, COLOR_WHITE, "*?????????: ??????????? ? ??? ???? ????? ????????, ??????? /hangup ????? ??????? ??????");
							ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							CellTime[playerid] = 1;
							return 1;
						}
					}
				}
			}
		}
	}
	SendClientMessage(playerid, COLOR_GRAD2, "  ? ??? ????????? ???...");
	}
	return 1;
	}
	if(strcmp(cmd, "/txt", true) == 0 || strcmp(cmd, "/t", true) == 0 || strcmp(cmd, "/sms", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ??????????!");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/t)ext [phonenumber] [text chat]");
				return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  ? ??? ??? ????????...");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s ???????? ??????.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new phonenumb = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/t)ext [phonenumber] [text chat]");
				return 1;
			}
			if(phonenumb == 555)
			{
				if ((strcmp("yes", result, true, strlen(result)) == 0) && (strlen(result) == strlen("yes")))
				{
					SendClientMessage(playerid, COLOR_WHITE, "???????????? ????????? ?????????.");
					if (gTeam[playerid] == 2 || gTeam[playerid] == 1)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "???: ? ??????? ?? ????, ??? ?? ????????, ???????????: ??? (555)");
						RingTone[playerid] = 20;
						return 1;
					}
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "???: ??????? ?? ??????? ???, ???????????: ??? (555)");
					RingTone[playerid] = 20;
					return 1;
				}
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   ??????? ?????? ????????!");
						            return 1;
						        }
								format(string, sizeof(string), "SMS: %s, %s (%d)", result,sendername,PlayerInfo[playerid][pPnumber]);
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								//format(string, sizeof(string), "* %s's phone beeps.", sendername);
								RingTone[giveplayerid] =20;
								SendClientMessage(playerid, COLOR_WHITE, " ????? ???????????");
								SendClientMessage(giveplayerid, COLOR_YELLOW, string);
								SendClientMessage(playerid,  COLOR_YELLOW, string);
								format(string, sizeof(string), "~r~$-%d", txtcost);
								GameTextForPlayer(playerid, string, 5000, 1);
								GivePlayerMoney(playerid,-txtcost);
								SBizzInfo[2][sbTill] += txtcost;
								ExtortionSBiz(2, txtcost);
					           	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					           	Mobile[playerid] = 255;
								return 1;
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, "  ??????????? ???????? ?????????...");
		}
		return 1;
	}
//----------------------------------[pickup]-----------------------------------------------

	if(strcmp(cmd, "/pickup", true) == 0 || strcmp(cmd, "/p", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  ?? ??? ????????");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
						Mobile[playerid] = i; //caller connecting
						SendClientMessage(i,  COLOR_GRAD2, "   ?? ??????? ??????.");
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s ???????? ?? ??????.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
						RingTone[playerid] = 0;
					}

				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/hangup", true) == 0 || strcmp(cmd, "/h", true) == 0)
	{
	if(IsPlayerConnected(playerid))
	{
	new caller = Mobile[playerid];
	if(IsPlayerConnected(caller))
	{
	if(caller != INVALID_PLAYER_ID)
	{
	if(caller != 255)
	{
	if(caller < 255)
	{
	SendClientMessage(caller,  COLOR_GRAD2, "   ?? ?????? ??????.");
	CellTime[caller] = 0;
	CellTime[playerid] = 0;
	SendClientMessage(playerid,  COLOR_GRAD2, "   ?? ?????? ??????.");
	Mobile[caller] = 255;
	}
	Mobile[playerid] = 255;
	CellTime[playerid] = 0;
	RingTone[playerid] = 0;
	return 1;
	}
	}
	}
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE); //SendClientMessage(playerid,  COLOR_GRAD2, "   ???? ??????? ????????? ? ???????.");
	}
	return 1;
	}
//----------------------------------[TIME]-----------------------------------------------
    if(strcmp(cmd, "/fixr", true) == 0)
    {
        if(IsPlayerConnected(playerid))
		{
			PlayerFixRadio(playerid);
		}
		return 1;
	}
	if(strcmp(cmd, "/time", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new mtext[20];
			new year, month,day;
			getdate(year, month, day);
			if(month == 1) { mtext = "January"; }
			else if(month == 2) { mtext = "February"; }
			else if(month == 3) { mtext = "March"; }
			else if(month == 4) { mtext = "April"; }
			else if(month == 5) { mtext = "May"; }
			else if(month == 6) { mtext = "June"; }
			else if(month == 7) { mtext = "Juli"; }
			else if(month == 8) { mtext = "August"; }
			else if(month == 9) { mtext = "September"; }
			else if(month == 10) { mtext = "October"; }
			else if(month == 11) { mtext = "November"; }
			else if(month == 12) { mtext = "December"; }
		    new hour,minuite,second;
			gettime(hour,minuite,second);
			FixHour(hour);
			hour = shifthour;
			if (minuite < 10)
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minuite);
				}
			}
			else
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
				}
			}
			GameTextForPlayer(playerid, string, 5000, 1);
		}
		return 1;
	}
//----------------------{HOUSES}-------------------
	if(strcmp(cmd, "/house", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1337)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /house [housenumber]");
					return 1;
				}
				new housenum = strval(tmp);
				SetPlayerInterior(playerid,HouseInfo[housenum][hInt]);
				SetPlayerPos(playerid,HouseInfo[housenum][hExitx],HouseInfo[housenum][hExity],HouseInfo[housenum][hExitz]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
				PlayerInfo[playerid][pInt] = HouseInfo[housenum][hInt];
				PlayerInfo[playerid][pLocal] = housenum;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/houseo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1337)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /houseo [housenumber]");
					return 1;
				}
				new housenum = strval(tmp);
				SetPlayerPos(playerid,HouseInfo[housenum][hEntrancex],HouseInfo[housenum][hEntrancey],HouseInfo[housenum][hEntrancez]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/biz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1337)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /biz [biznumber]");
					return 1;
				}
				new housenum = strval(tmp);
				SetPlayerInterior(playerid,BizzInfo[housenum][bInterior]);
				SetPlayerPos(playerid,BizzInfo[housenum][bExitX],BizzInfo[housenum][bExitY],BizzInfo[housenum][bExitZ]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
				PlayerInfo[playerid][pInt] = BizzInfo[housenum][bInterior];
				PlayerInfo[playerid][pLocal] = housenum+99;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1337)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /sbiz [biznumber]");
					return 1;
				}
				new housenum = strval(tmp);
				SetPlayerInterior(playerid,SBizzInfo[housenum][sbInterior]);
				SetPlayerPos(playerid,SBizzInfo[housenum][sbEntranceX],SBizzInfo[housenum][sbEntranceY],SBizzInfo[housenum][sbEntranceZ]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/resethousecars", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 1337)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "?? ?? ?????.");
				return 1;
			}
			HouseInfo[0][hVec] = 499; HouseInfo[1][hVec] = 499; HouseInfo[2][hVec] = 499;
			HouseInfo[3][hVec] = 499; HouseInfo[4][hVec] = 499; HouseInfo[5][hVec] = 499;
			HouseInfo[6][hVec] = 499; HouseInfo[7][hVec] = 499; HouseInfo[8][hVec] = 499;
			HouseInfo[9][hVec] = 499; HouseInfo[10][hVec] = 499; HouseInfo[11][hVec] = 499;
			HouseInfo[12][hVec] = 499; HouseInfo[13][hVec] = 499; HouseInfo[14][hVec] = 499;
			HouseInfo[15][hVec] = 499; HouseInfo[16][hVec] = 499; HouseInfo[17][hVec] = 499;
			HouseInfo[18][hVec] = 499; HouseInfo[19][hVec] = 499; HouseInfo[20][hVec] = 499;
			HouseInfo[21][hVec] = 499; HouseInfo[22][hVec] = 499; HouseInfo[23][hVec] = 499;
			HouseInfo[24][hVec] = 499; HouseInfo[25][hVec] = 499; HouseInfo[26][hVec] = 499;
			HouseInfo[27][hVec] = 499; HouseInfo[28][hVec] = 499; HouseInfo[29][hVec] = 499;
			HouseInfo[30][hVec] = 499; HouseInfo[31][hVec] = 499; HouseInfo[32][hVec] = 499;
			HouseInfo[33][hVec] = 499;
			OnPropUpdate();
			SendClientMessage(playerid, COLOR_GREY, "   ??? ?????????? ???? ????????????? !");
		}
		return 1;
	}
	if(strcmp(cmd, "/edithousecar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 4)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "?? ?? ?????.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /edithousecar [vecid]");
				return 1;
			}
			new proplev = strval(tmp);
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					HouseInfo[i][hVec] = proplev;
					format(string, sizeof(string), "?????????? ????: %d ?????? %d", i,HouseInfo[i][hVec]);
					SendClientMessage(playerid, COLOR_GRAD2, string);
				}
			}
			OnPropUpdate();
		}
		return 1;
	}
	if(strcmp(cmd, "/edit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 4)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "?? ?? ?????.");
				return 1;
			}
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________??????????????.__________________|");
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /edit [name] [ammount] (Used for Houses and Businesses)");
				SendClientMessage(playerid, COLOR_GREY, "????????? ????????: Level, Price (????), Funds, Products");
				SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /edit [name] [ammount]");
				return 1;
			}
			new proplev = strval(tmp);
	        //if(strcmp(x_job,"car",true) == 0)
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(string, sizeof(string), "House: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_job,"level",true) == 0)
					    {
							HouseInfo[i][hLevel] = proplev;
						}
						else if(strcmp(x_job,"price",true) == 0)
					    {
							HouseInfo[i][hValue] = proplev;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(string, sizeof(string), "Biz: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_job,"level",true) == 0)
					    {
							BizzInfo[i][bLevelNeeded] = proplev;
						}
						else if(strcmp(x_job,"price",true) == 0)
					    {
							BizzInfo[i][bBuyPrice] = proplev;
						}
						else if(strcmp(x_job,"funds",true) == 0)
					    {
							BizzInfo[i][bTill] = proplev;
						}
						else if(strcmp(x_job,"products",true) == 0)
					    {
							BizzInfo[i][bProducts] = proplev;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					format(string, sizeof(string), "SBiz: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_job,"level",true) == 0)
					    {
							SBizzInfo[i][sbLevelNeeded] = proplev;
						}
						else if(strcmp(x_job,"price",true) == 0)
					    {
							SBizzInfo[i][sbBuyPrice] = proplev;
						}
						else if(strcmp(x_job,"funds",true) == 0)
					    {
							SBizzInfo[i][sbTill] = proplev;
						}
						else if(strcmp(x_job,"products",true) == 0)
					    {
							SBizzInfo[i][sbProducts] = proplev;
						}
					}
				}
			}
			format(string, sizeof(string), "?? ??????????????: %s.", x_job);
			SendClientMessage(playerid, COLOR_WHITE, string);
			OnPropUpdate();
		}
		return 1;
	}
	if(strcmp(cmd, "/load", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			if(tmpcar < 78 || tmpcar > 81)
			{
				GameTextForPlayer(playerid, "~r~You are not in a delivery truck", 5000, 1);
				return 1;
			}
			format(string, sizeof(string), "????????: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/buyprods", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			new compcost = 50;
			if(PlayerToPoint(60.0, playerid, 2787.8,-2436.3,13.7))
			{
				if(IsATruck(tmpcar))
				{
					if(PlayerHaul[tmpcar][pLoad] < PlayerHaul[tmpcar][pCapasity])
					{
					    new amount;
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /buyprods [amount]");
							return 1;
						}
						amount = strval(tmp);
						if(amount < 1 || amount > 500) { SendClientMessage(playerid, COLOR_GREY, "   ?? ????? ?????? ????? 1 ???????? ? ?? ????? 500 !"); return 1; }
						new check= PlayerHaul[tmpcar][pLoad] + amount;
						if(check > PlayerHaul[tmpcar][pCapasity])
						{
						    format(string, sizeof(string), "   ?? ??????????? ????? ???????? ???????? ????? ????? %d, ?? ? ????????? ????? ?????? %d.",PlayerHaul[tmpcar][pCapasity],PlayerHaul[tmpcar][pLoad]);
						    SendClientMessage(playerid, COLOR_GREY, string);
						    return 1;
						}
						new cost = amount*compcost;
						if(GetPlayerMoney(playerid) >= cost)
						{
							PlayerHaul[tmpcar][pLoad] += amount;
							format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), "You bought %d Products for $%d.", amount,cost);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							GivePlayerMoney(playerid,-cost);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
						else
						{
							format(string, sizeof(string), "?? ????????????, ????????????? %d ???????? ? $%d !", amount,cost);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							return 1;
						}
					}
					else
					{
							format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "??? ???????????? ???????? ?? ?????????? ????????.");
					return 1;
				}
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/sellprods", true) == 0)
	{
	    new cashmade;
	    new tmpcar;
	    if(IsPlayerConnected(playerid))
		{
			tmpcar = GetPlayerVehicleID(playerid);
			if(!IsATruck(tmpcar))
			{
				GameTextForPlayer(playerid, "~r~You are not in a delivery truck", 5000, 1);
				return 1;
			}
			if(PlayerHaul[tmpcar][pLoad] == 0)
			{
				GameTextForPlayer(playerid, "~r~Truck is empty, return to the stock house", 5000, 1);
				format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				return 1;
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(10, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					//printf("Found House :%d",i);
					for(new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--)
					{
						if(BizzInfo[i][bProducts] == BizzInfo[i][bMaxProducts])
						{
							GameTextForPlayer(playerid, "~r~Our stores are full", 5000, 1);
							format(string, sizeof(string), "Cash Earned $%d.", cashmade);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
						if(BizzInfo[i][bPriceProd] > BizzInfo[i][bTill])
						{
							GameTextForPlayer(playerid, "~r~We Cant Afford The Deal", 5000, 1);
							format(string, sizeof(string), "Cash Earned $%d.", cashmade);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
						PlayerHaul[tmpcar][pLoad]--;
						BizzInfo[i][bProducts]++;
						cashmade = cashmade+BizzInfo[i][bPriceProd];
						ConsumingMoney[playerid] = 1;
						GivePlayerMoney(playerid,BizzInfo[i][bPriceProd]);
						BizzInfo[i][bTill] -= BizzInfo[i][bPriceProd];
						if(PlayerHaul[tmpcar][pLoad] == 0)
						{
							GameTextForPlayer(playerid, "~r~Truck is empty, return to the stock house", 5000, 1);
							format(string, sizeof(string), "Cash Earned $%d.", cashmade);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					OnPropUpdate();
					return 1;
				}
			}
		}
		for(new i = 0; i < sizeof(SBizzInfo); i++)
		{
			if (PlayerToPoint(10, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
			{
				//printf("Found House :%d",i);
				for(new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--)
				{
					if(SBizzInfo[i][sbProducts] == SBizzInfo[i][sbMaxProducts])
					{
						GameTextForPlayer(playerid, "~r~Our stores are full", 5000, 1);
						format(string, sizeof(string), "Cash Earned $%d.", cashmade);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						return 1;
					}
					if(SBizzInfo[i][sbPriceProd] > SBizzInfo[i][sbTill])
					{
						GameTextForPlayer(playerid, "~r~We Cant Afford The Deal", 5000, 1);
						format(string, sizeof(string), "Cash Earned $%d.", cashmade);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						return 1;
					}
					PlayerHaul[tmpcar][pLoad]--;
					SBizzInfo[i][sbProducts]++;
					cashmade = cashmade+SBizzInfo[i][sbPriceProd];
					ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,SBizzInfo[i][sbPriceProd]);
					SBizzInfo[i][sbTill] -= SBizzInfo[i][sbPriceProd];
					if(PlayerHaul[tmpcar][pLoad] == 0)
					{
						GameTextForPlayer(playerid, "~r~Truck is empty, return to the stock house", 5000, 1);
						format(string, sizeof(string), "Cash Earned $%d.", cashmade);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						return 1;
					}
				}
				OnPropUpdate();
				return 1;
			}
		}
		GameTextForPlayer(playerid, "~r~To Far From A Business", 5000, 1);
		return 1;
	}
	
	if(strcmp(cmd, "/enter", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    PlayerInfo[playerid][pNaga] = 1;
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					//printf("Found House :%d",i);
					if(PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0)
					{
						SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						GameTextForPlayer(playerid, "~w~Welcome Home", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hVirtual]);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					//printf("Found House :%d",i);
					if(!IsACop(playerid) && i == 3)
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??????????? ?????? !");
					    return 1;
					}
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= BizzInfo[i][bEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(BizzInfo[i][bLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
								return 1;
							}
							if(BizzInfo[i][bProducts] == 0)
							{
								GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
								return 1;
							}
							GivePlayerMoney(playerid,-BizzInfo[i][bEntranceCost]);
							format(string, sizeof(string), "~r~-$%d~n~~w~type /exit~n~to get out", BizzInfo[i][bEntranceCost]);
							BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
							ExtortionBiz(i, BizzInfo[i][bEntranceCost]);
							BizzInfo[i][bProducts]--;
							OnPropUpdate();
							GameTextForPlayer(playerid, string, 5000, 3);
						}
						SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
						PlayerInfo[playerid][pLocal] = i+99;
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						format(string, sizeof(string), "%s ???????? $%d, ????? ????? ? ??? %d", dood, BizzInfo[i][bEntranceCost], i);
						printf("%s", string);
						PayLog(string);
						//PlayerInfo[playerid][pLocal] = i;
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= SBizzInfo[i][sbEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(SBizzInfo[i][sbLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
								return 1;
							}
							if(SBizzInfo[i][sbProducts] == 0)
							{
								GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
								return 1;
							}
							if(i == 10)
							{
							    PaintballPlayers ++;
							    PlayerPaintballing[playerid] = 1;
							    new rand = random(sizeof(PaintballSpawns));
								SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
								TogglePlayerControllable(playerid, 0);
							}
							else if(i == 11)
							{
							    PlayerKarting[playerid] = 1;
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, "?? ?????? ?????? parcipitate ? ????? ????????, ??????????? ????.");
							}
							else
							{
							    return 1;
							}
							GivePlayerMoney(playerid,-SBizzInfo[i][sbEntranceCost]);
							gSpentCash[playerid] = GetPlayerMoney(playerid);
							SBizzInfo[i][sbProducts]--;
							SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
							ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
							new dood[MAX_PLAYER_NAME];
							GetPlayerName(playerid, dood, sizeof(dood));
							format(string, sizeof(string), "%s ???????? $%d, ????? ????? ? ??? %d", dood, SBizzInfo[i][sbEntranceCost], i);
							printf("%s", string);
							PayLog(string);
							OnPropUpdate();
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
					}
				}
			}
			if (PlayerToPoint(3.0, playerid,1482.2,-1771.0,18.7))
			{
			    SetPlayerInterior(playerid,3);
				SetPlayerPos(playerid,387.7978,173.8582,1008.3828);
				GameTextForPlayer(playerid, "~w~Welcome to the City Hall", 5000, 1);
				PlayerInfo[playerid][pInt] = 3;
				PlayerInfo[playerid][pLocal] = 241;
			}
			else if (PlayerToPoint(3.0, playerid,1073.0619,-344.5148,73.9922))
			{
			    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
			    {
				    SetPlayerInterior(playerid,2);
					SetPlayerPos(playerid,1205.0947,-10.1685,1000.9219);
					PlayerInfo[playerid][pInt] = 2;
					PlayerInfo[playerid][pLocal] = 242;
				}
			}
			else if (PlayerToPoint(3.0, playerid,2695.6235,-1704.6960,11.8438))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the 8ball Track", 5000, 1);
			    SetPlayerInterior(playerid,7);
				SetPlayerPos(playerid,-1404.5299,-259.0602,1043.6563);
			}
			else if (PlayerToPoint(8.0, playerid,-2111.5686,-443.9720,38.7344))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the Dirt Track", 5000, 1);
			    SetPlayerInterior(playerid,4);
				SetPlayerPos(playerid,-1443.0554,-581.1879,1055.0472);
			}
			else if (PlayerToPoint(8.0, playerid,-2080.3079,-406.0309,38.7344))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the Stunting Track", 5000, 1);
			    SetPlayerInterior(playerid,14);
				SetPlayerPos(playerid,-1464.7732,1557.5533,1052.5313);
			}
			if(PlayerToPoint(3,playerid,2495.3,-1690.2,14.7))//grove
			{
			    SetPlayerPos(playerid,2496.0,-1693.7,1014.7);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,1);
			}
			if(PlayerToPoint(3,playerid,691.4,-1276.1,13.5))//Yakuza
			{
			    SetPlayerPos(playerid,964.9,-53.1,1001.1);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,6);
			}
			if(PlayerToPoint(3, playerid,2770.6,-1627.9,12.1))//vagos
			{
			    SetPlayerPos(playerid,1212.1,-28.5,1000.9);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,8);
			}
			if(PlayerToPoint(3, playerid,940.6,-1085.2,24.2))//ballas
			{
			    SetPlayerPos(playerid,1212.0,-28.5,1000.9);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,9);
			}
			if(PlayerToPoint(3, playerid,725.6,-1440.4,13.5))//news
			{
			    SetPlayerPos(playerid,288.7,167.1,1007.1);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,10);
			}
			if(PlayerToPoint(3, playerid,1752.5,-1911.9,13.5))//coronos
			{
			    SetPlayerPos(playerid,2541.8,-1303.9,1025.0);
			    SetPlayerInterior(playerid,2);
			    SetPlayerVirtualWorld(playerid,11);
			}
			if(PlayerToPoint(3, playerid,1122.7,-2036.9,69.8))//lcn
			{
			    SetPlayerPos(playerid,2523.2,-1285.8,1054.6);
			    SetPlayerInterior(playerid,2);
			    SetPlayerVirtualWorld(playerid,12);
			}
			if(PlayerToPoint(3, playerid,-2719.3,-319.1,7.8))//russian mafia
			{
			    SetPlayerPos(playerid,975.3,-8.6,1001.1);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,13);
			}
			if(PlayerToPoint(3, playerid,-2129.1,-188.3,35.3))//rifa
			{
			    SetPlayerPos(playerid,1212.1,-25.8,1000.9);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,14);
			}
			if(PlayerToPoint(3, playerid,2231.3,-1159.8,25.8))
			{
			    SetPlayerPos(playerid,2215.0,-1150.6,1025.7);
			    SetPlayerInterior(playerid,15);
			}
			if(PlayerToPoint(3, playerid,1315.2,-900.2,39.5))
			{
			    SetPlayerPos(playerid,-30.7,-90.6,1003.5);
			    SetPlayerInterior(playerid,18);///
                PlayerInfo[playerid][pEnter] = 3;
			}
			if(PlayerToPoint(3, playerid,1831.5,-1843.3,13.5))
			{
			    SetPlayerPos(playerid,-30.9,-89.6,1003.5);
			    SetPlayerInterior(playerid,18);///
			    PlayerInfo[playerid][pEnter] = 4;
			}
			if(PlayerToPoint(3, playerid,1199.1,-919.8,43.1))
			{
			    SetPlayerPos(playerid,363.4,-74.5,1001.5);
			    SetPlayerInterior(playerid,10);//
			    PlayerInfo[playerid][pEnter] = 1;
			}
			if(PlayerToPoint(3, playerid,813.0,-1616.0,13.5))
			{
			    SetPlayerPos(playerid,363.4,-74.5,1001.5);
			    SetPlayerInterior(playerid,10);//
			    PlayerInfo[playerid][pEnter] = 2;
			}
			if(PlayerToPoint(3, playerid,927.1,-1352.7,13.3))
			{
			    SetPlayerPos(playerid,365.6,-10.7,1001.8);
			    SetPlayerInterior(playerid,9);
			}
			if(PlayerToPoint(3, playerid,1553.6,-1674.8,16.1))
			{
			    SetPlayerPos(playerid,246.7,63.9,1003.6);
			    SetPlayerInterior(playerid,6);
			}
			if(PlayerToPoint(3, playerid,1834.4,-1681.7,13.4))
			{
			    SetPlayerPos(playerid,493.3,-22.7,1000.6);
			    SetPlayerInterior(playerid,17);
			}
			if(PlayerToPoint(3, playerid,1698.1,-1667.1,20.1))
			{
			    SetPlayerPos(playerid,1703.7,-1668.4,20.2);
			    SetPlayerInterior(playerid,18);
			}
			if(PlayerToPoint(3, playerid,-2026.6,-100.6,35.1))
			{
			    SetPlayerPos(playerid,-2027.5,-105.1,1035.1);
			    SetPlayerInterior(playerid,3);////
			    PlayerInfo[playerid][pEnter] = 5;
			}
			if(PlayerToPoint(3, playerid,-2029.7,-122.4,35.1))
			{
			    SetPlayerPos(playerid,-2029.7,-118.0,1035.1);
			    SetPlayerInterior(playerid,3);////
			    PlayerInfo[playerid][pEnter] = 6;
			}
			if(PlayerToPoint(3, playerid,2421.5,-1221.7,25.3))
			{
			    SetPlayerPos(playerid,1203.8,-12.5,1000.9);
			    SetPlayerInterior(playerid,2);
			}
			if(PlayerToPoint(3, playerid,2795.1,-1619.4,10.9))
			{
			    SetPlayerPos(playerid,2542.1,-1304.1,1025.0);
			    SetPlayerInterior(playerid,2);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/exit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    PlayerInfo[playerid][pNaga] = 0;
			for(new i = 0; i <  sizeof(HouseInfo); i++)
			{
				//printf("House :%d",i);
				if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]) && HouseInfo[i][hVirtual]==GetPlayerVirtualWorld(playerid))
				{
				    SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
					PlayerInfo[playerid][pLocal] = 255;
					if(HouseInfo[i][hHel] == 1)
					{
						new Float:tempheal;
						GetPlayerHealth(playerid,tempheal);
						if(tempheal < 100.0)
						{
							SetPlayerHealth(playerid,100.0);
						}
					}
				}
			}
			for(new i = 0; i <  sizeof(BizzInfo); i++)
			{
				//printf("Bizz :%d",i);
				if (PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
					PlayerInfo[playerid][pLocal] = 255;
				}
			}
			if(GetPlayerVehicleID(playerid) >= 71 && GetPlayerVehicleID(playerid) <= 77)
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
			}
			else if (PlayerToPoint(3.0, playerid,387.7978,173.8582,1008.3828))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,1482.2,-1771.0,18.7);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
			}
			else if (PlayerToPoint(6.0, playerid,-1404.5299,-259.0602,1043.6563))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,2695.6235,-1704.6960,11.8438);
			}
			else if (PlayerToPoint(8.0, playerid,-1443.0554,-581.1879,1055.0472))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,-2111.5686,-443.9720,38.7344);
			}
			else if (PlayerToPoint(8.0, playerid,-1464.7732,1557.5533,1052.5313))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,-2080.3079,-406.0309,38.7344);
			}
			else if(NoFuel[playerid] == 1)
			{
			    TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				NoFuel[playerid] = 0;
			}
			if(PlayerToPoint(3, playerid,2496.0,-1693.7,1014.7) && GetPlayerVirtualWorld(playerid) == 1)//grove
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,2495.3,-1690.2,14.7);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,964.9,-53.1,1001.1) && GetPlayerVirtualWorld(playerid) == 6)//Yakuza
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,691.4,-1276.1,13.5);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,1212.1,-28.5,1000.9) && GetPlayerVirtualWorld(playerid) == 8)//vagos
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,2770.6,-1627.9,12.1);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,1212.1,-28.5,1000.9) && GetPlayerVirtualWorld(playerid) == 9)//ballas
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,940.6,-1085.2,24.2);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,288.7,167.1,1007.1) && GetPlayerVirtualWorld(playerid) == 10)//news/
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,725.6,-1440.4,13.5);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,2541.8,-1303.9,1025.0) && GetPlayerVirtualWorld(playerid) == 11)//coronos
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,1752.5,-1911.9,13.5);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,2523.2,-1285.8,1054.6) && GetPlayerVirtualWorld(playerid) == 12)//lcn
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,1122.7,-2036.9,69.8);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,975.3,-8.6,1001.1) && GetPlayerVirtualWorld(playerid) == 13)//russian mafia
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,-2719.3,-319.1,7.8);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,1212.1,-25.8,1000.9) && GetPlayerVirtualWorld(playerid) == 14)//rifa
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,-2129.1,-188.3,35.3);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,1203.8,-12.5,1000.9))
			{
			    SetPlayerPos(playerid,2421.5,-1221.7,25.3);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,2215.0,-1150.6,1025.7))
			{
			    SetPlayerPos(playerid,2231.3,-1159.8,25.8);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,-30.7,-90.6,1003.5))///
			{
			    if(PlayerInfo[playerid][pEnter] == 3)
			    {
				    SetPlayerPos(playerid,1315.2,-900.2,39.5);
				    SetPlayerInterior(playerid,0);
				    PlayerInfo[playerid][pEnter] = 0;
				}
			}
			if(PlayerToPoint(3, playerid,-30.9,-89.6,1003.5))///
			{
			    if(PlayerInfo[playerid][pEnter] == 4)
			    {
				    SetPlayerPos(playerid,1831.5,-1843.3,13.5);
				    SetPlayerInterior(playerid,0);
				    PlayerInfo[playerid][pEnter] = 0;
				}
			}
			if(PlayerToPoint(3, playerid,363.4,-74.5,1001.5))//
			{
			    if(PlayerInfo[playerid][pEnter] == 1)
			    {
				    SetPlayerPos(playerid,1199.1,-919.8,43.1);
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pEnter] = 0;
				}
			}
			if(PlayerToPoint(3, playerid,363.4,-74.5,1001.5))//
			{
			    if(PlayerInfo[playerid][pEnter] == 2)
			    {
				    SetPlayerPos(playerid,813.0,-1616.0,13.5);
				    SetPlayerInterior(playerid,0);
				    PlayerInfo[playerid][pEnter] = 0;
				}
			}
			
			if(PlayerToPoint(3, playerid,365.6,-10.7,1001.8))
			{
			    SetPlayerPos(playerid,927.1,-1352.7,13.3);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,246.7,63.9,1003.6))
			{
			    SetPlayerPos(playerid,1553.6,-1674.8,16.1);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,493.3,-22.7,1000.6))
			{
			    SetPlayerPos(playerid,1834.4,-1681.7,13.4);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,1703.7,-1668.4,20.2))
			{
			    SetPlayerPos(playerid,1698.1,-1667.1,20.1);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,-2027.5,-105.1,1035.1))////
			{
			    if(PlayerInfo[playerid][pEnter] == 5)
			    {
				    SetPlayerPos(playerid,-2026.6,-100.6,35.1);
				    SetPlayerInterior(playerid,0);
				    PlayerInfo[playerid][pEnter] = 0;
			    }
			}
			if(PlayerToPoint(3, playerid,-2029.7,-118.0,1035.1))////
			{
			    if(PlayerInfo[playerid][pEnter] == 6)
			    {
				    SetPlayerPos(playerid,-2029.7,-122.4,35.1);
				    SetPlayerInterior(playerid,0);
				    PlayerInfo[playerid][pEnter] = 0;
				}
			}
			if(PlayerToPoint(3, playerid,2542.1,-1304.1,1025.0))
			{
			    SetPlayerPos(playerid,2795.1,-1619.4,10.9);
			    SetPlayerInterior(playerid,0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/home", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pPhousekey] != 255)
			{
			    if(PlayerOnMission[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??????, ? ?? ?????? ???????????? ??? ???????!");
			        return 1;
			    }
				SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez], 4.0);
				GameTextForPlayer(playerid, "~w~Waypoint set ~r~Home", 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
			}
			else
			{
				GameTextForPlayer(playerid, "~w~You are homeless", 5000, 1);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/towcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new house = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				if(SBizzInfo[8][sbProducts] == 0)
				{
					GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					return 1;
				}
				if(CarTow(house+1))
				{
					GameTextForPlayer(playerid, "~w~Car~n~~g~Towed Home~n~~r~$-1000", 5000, 1);
					GivePlayerMoney(playerid,-1000);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SBizzInfo[8][sbTill] += 1000;//towcar buisness
					ExtortionSBiz(8, 1000);
					SBizzInfo[8][sbProducts]--;
				}
				else
				{
					GameTextForPlayer(playerid, "~w~Car is~n~in ~r~use", 5000, 1);
				}
			}
			else
			{
				GameTextForPlayer(playerid, "~w~You are not a home owner", 5000, 1);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/fixcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new house = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				if(SBizzInfo[8][sbProducts] == 0)
				{
					GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					return 1;
				}
				if(CarRespawn(house+1))
				{
					GameTextForPlayer(playerid, "~w~Car~n~~g~Repaired~n~~r~$-1000", 5000, 1);
					GivePlayerMoney(playerid,-1000);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SBizzInfo[8][sbTill] += 1000;//towcar buisness
					ExtortionSBiz(8, 1000);
					SBizzInfo[8][sbProducts]--;
				}
				else
				{
					GameTextForPlayer(playerid, "~w~Car is~n~in ~r~use", 5000, 1);
				}
			}
			else
			{
				GameTextForPlayer(playerid, "~w~You are not a home owner", 5000, 1);
			}
		}
		return 1;
	}
//----------------------------------[BIZZ]-----------------------------------------------
	if(strcmp(cmd, "/buybiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "   ?? ??? ?????? ??????, ?????? /sellbiz ???? ?? ?????? ?????? ????.");
				return 1;
			}
			for(new b = 0; b < sizeof(SBizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < SBizzInfo[b][sbLevelNeeded])
					{
						format(string, sizeof(string), "?? ?????? ???? ??????? %d, ????? ?????? ???",SBizzInfo[b][sbLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(GetPlayerMoney(playerid) > SBizzInfo[b][sbBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b+100;
						SBizzInfo[b][sbOwned] = 1;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(SBizzInfo[b][sbOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-SBizzInfo[b][sbBuyPrice]);
						PlayerPlayMusic(playerid);
						SendClientMessage(playerid, COLOR_WHITE, "?????????? ? ????????");
						SendClientMessage(playerid, COLOR_WHITE, "?????? /help ???? ??????????? ????? ??????? ?????? ??????.");
                        DateProp(playerid);
						OnPropUpdate();
						OnPlayerUpdate_GF(playerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "? ??? ??? ???????? ????? ??? ?????");
						return 1;
					}
				}
			}
			for(new b = 0; b < sizeof(BizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
					{
						format(string, sizeof(string), "?? ?????? ???? ??????? %d, ????? ?????? ???",BizzInfo[b][bLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(GetPlayerMoney(playerid) > BizzInfo[b][bBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b;
						BizzInfo[b][bOwned] = 1;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-BizzInfo[b][bBuyPrice]);
						PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
						GameTextForPlayer(playerid, "~w~Welcome~n~You can exit at any time by moving to this door and typing /exit", 5000, 3);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						PlayerInfo[playerid][pLocal] = b ;
						SendClientMessage(playerid, COLOR_WHITE, "?????????? ??? ? ????????");
						SendClientMessage(playerid, COLOR_WHITE, "?????? /help ???? ??????????? ????? ??????? ?????? ??????.");
                        DateProp(playerid);
						OnPropUpdate();
						OnPlayerUpdate_GF(playerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "? ??? ??? ???????? ????? ??? ?????");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sellbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPbiskey] == 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "??? ?? ??????????? ??????.");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   ?? ??????, ?? ????? ??????? ??? !");
		        return 1;
		    }
			if(PlayerInfo[playerid][pPbiskey] >= 100 && strcmp(playername, SBizzInfo[PlayerInfo[playerid][pPbiskey]-100][sbOwner], true) == 0)
			{
				new bouse = PlayerInfo[playerid][pPbiskey]-100;
				GivePlayerMoney(playerid,SBizzInfo[bouse][sbTill]);
				SBizzInfo[bouse][sbLocked] = 1;
				SBizzInfo[bouse][sbOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(SBizzInfo[bouse][sbOwner], "The State", 0, strlen("The State"), 255);
				strmid(SBizzInfo[bouse][sbExtortion], "No-one", 0, strlen("No-one"), 255);
				ConsumingMoney[playerid] = 1;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~$%d", SBizzInfo[bouse][sbTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				SBizzInfo[bouse][sbTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				OnPropUpdate();
				OnPlayerUpdate_GF(playerid);
				return 1;
			}
			if(strcmp(playername, BizzInfo[PlayerInfo[playerid][pPbiskey]][bOwner], true) == 0)
			{
				new bouse = PlayerInfo[playerid][pPbiskey];
				BizzInfo[bouse][bLocked] = 1;
				BizzInfo[bouse][bOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(BizzInfo[bouse][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[bouse][bExtortion], "No-one", 0, strlen("No-one"), 255);
				ConsumingMoney[playerid] = 1;
				GivePlayerMoney(playerid,BizzInfo[bouse][bTill]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~$%d", BizzInfo[bouse][bTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				BizzInfo[bouse][bTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				OnPropUpdate();
				OnPlayerUpdate_GF(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "??? ?? ??????????? ??????.");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/bizinfo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if(bouse == 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "? ??? ??? ???????.");
				return 1;
			}
			if (bouse >= 100)
			{

				PrintSBizInfo(playerid,bouse-100);
			}
			else
			{
				PrintBizInfo(playerid,bouse);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/prodprice", true) == 0)
	{
		new bouse = PlayerInfo[playerid][pPbiskey];
		if (bouse == 255)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "? ??? ??? ???????.");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_WHITE, " ???????????: /prodprice [amount to pay per Product]");
		}
		if(strval(tmp) < 1 || strval(tmp) > 99999)
		{
			SendClientMessage(playerid, COLOR_WHITE, "??????????? ???? ?????????? 0$, ???????????? ???? $99999.");
			return 1;
		}
		if (bouse >= 100)
		{
			if(strval(tmp) > SBizzInfo[bouse-100][sbTill])
			{
				SendClientMessage(playerid, COLOR_WHITE, "? ??? ??? ??? ??????? ? ????? ???????.");
				return 1;
			}
			SBizzInfo[bouse-100][sbPriceProd] = strval(tmp);
			format(string, sizeof(string), "??????? ????????? ??? $%d.", SBizzInfo[bouse-100][sbPriceProd]);
		}
		else
		{
			if(strval(tmp) > BizzInfo[bouse][bTill])
			{
				SendClientMessage(playerid, COLOR_WHITE, "? ??? ??? ??? ??????? ? ????? ???????.");
				return 1;
			}
			BizzInfo[bouse][bPriceProd] = strval(tmp);
			format(string, sizeof(string), "??????? ????????? ??? $%d.", BizzInfo[bouse][bPriceProd]);
		}
		OnPropUpdate();
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}
	if(strcmp(cmd, "/bizfee", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new bouse;
		    bouse = PlayerInfo[playerid][pPbiskey];
			if (PlayerInfo[playerid][pPbiskey] == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "? ??? ??? ???????.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /bizfee [EntranceFee]");
			}
			if(strval(tmp) < 0 || strval(tmp) > 99999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "??????????? ???? ?????????? 0$, ???????????? ???? $99999.");
				return 1;
			}
			if (bouse >= 100)
			{
				SBizzInfo[bouse-100][sbEntranceCost] = strval(tmp);
				format(string, sizeof(string), "????? ??????? ????? ? $%d.", SBizzInfo[bouse-100][sbEntranceCost]);
			}
			else
			{
				BizzInfo[bouse][bEntranceCost] = strval(tmp);
				format(string, sizeof(string), "????? ??????? ????? ? $%d.", BizzInfo[bouse][bEntranceCost]);
			}
			OnPropUpdate();
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/extortion", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "? ??? ??? ???????.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /extortion [playerid/PartOfName] (or 555 for No-one)");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        GetPlayerName(playerid, sendername, sizeof(sendername));
			        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			        format(string, sizeof(string), "* %s is know Extortioning your Business.",giveplayer);
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			        format(string, sizeof(string), "* %s ??????????? ??? ??????, ?? - ?????? Extortioning ??? ??????.",sendername);
			        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			        if (bouse >= 100)
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(SBizzInfo[bouse-100][sbExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "??????? ????? ???????? ?????????????? ? %s",SBizzInfo[bouse-100][sbExtortion]);
					}
					else
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(BizzInfo[bouse][bExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "??????? ????? ???????? ?????????????? ? %s",BizzInfo[bouse][bExtortion]);
					}
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			}
			else if(giveplayerid == 555)
			{
			    if (bouse >= 100)
				{
				    format(string, sizeof(string), "?????");
					strmid(SBizzInfo[bouse-100][sbExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "??????? ????? ???????? ?????????????? ? %s",SBizzInfo[bouse-100][sbExtortion]);
				}
				else
				{
				    format(string, sizeof(string), "?????");
					strmid(BizzInfo[bouse][bExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "??????? ????? ???????? ?????????????? ? %s",BizzInfo[bouse][bExtortion]);
				}
				OnPropUpdate();
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ???? ????? ???????? ?????????? !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bizname", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "? ??? ??? ???????.");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /bizname [Name]");
			}
			if (bouse >= 100)
			{
				strmid(SBizzInfo[bouse-100][sbMessage], result, 0, 64, 255);
				format(string, sizeof(string), "????? ??????????????????? ???????????? ????? ? %s",SBizzInfo[bouse-100][sbMessage]);
			}
			else
			{
				strmid(BizzInfo[bouse][bMessage], result, 0, 64, 255);
				format(string, sizeof(string), "????? ??????????????????? ???????????? ????? ? %s",BizzInfo[bouse][bMessage]);
			}
			OnPropUpdate();
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/bizwithdraw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (PlayerInfo[playerid][pPbiskey] == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "? ??? ??? ???????.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (bouse >= 100)
				{
					format(string, sizeof(string), "  ? ??? ??? $%d ? ????? ???????.", SBizzInfo[bouse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  ? ??? ??? $%d ? ????? ???????.", BizzInfo[bouse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /bizwithdraw [amount]");
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /bizwithdraw [amount]");
				return 1;
			}
			if (bouse >= 100)
			{
				if(cashdeposit > SBizzInfo[bouse-100][sbTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ? ??? ??? ??? ???????");
					return 1;
				}
			}
			else
			{
				if (cashdeposit > BizzInfo[bouse][bTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ? ??? ??? ??? ???????");
					return 1;
				}
			}
			if (bouse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[bouse-100][sbEntranceX],SBizzInfo[bouse-100][sbEntranceY],SBizzInfo[bouse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?????? ?? ?????? ???????");
					return 1;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,cashdeposit);
					SBizzInfo[bouse-100][sbTill] -= cashdeposit;
					format(string, sizeof(string), "  ?? ??????? $%d ?? ?????? ?????? ??????????: $%d ", cashdeposit,SBizzInfo[bouse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[bouse][bExitX],BizzInfo[bouse][bExitY],BizzInfo[bouse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?????? ?? ?????? ???????");
					return 1;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,cashdeposit);
					BizzInfo[bouse][bTill] -= cashdeposit;
					format(string, sizeof(string), "  ?? ??????? $%d ?? ?????? ?????? ??????????: $%d ", cashdeposit,BizzInfo[bouse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bizbank", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "? ??? ??? ???????.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (bouse >= 100)
				{
					format(string, sizeof(string), "  ? ??? ??? $%d ? ????? ???????.", SBizzInfo[bouse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  ? ??? ??? $%d ? ????? ???????.", BizzInfo[bouse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /bizbank [amount]");
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /bizbank [amount]");
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if (cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ? ??? ??? ??? ?????");
				return 1;
			}
			if (bouse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[bouse-100][sbEntranceX],SBizzInfo[bouse-100][sbEntranceY],SBizzInfo[bouse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?????? ?? ?????? ???????");
					return 1;
				}
				else
				{
					GivePlayerMoney(playerid,-cashdeposit);
					SBizzInfo[bouse-100][sbTill] += cashdeposit;
					ExtortionSBiz(bouse-100, cashdeposit);
					format(string, sizeof(string), "  ?? ???????? ????? $%d ? ?????? ?? ?????? ??????????: $%d ", cashdeposit,SBizzInfo[bouse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[bouse][bExitX],BizzInfo[bouse][bExitY],BizzInfo[bouse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You are to far from your business");
					return 1;
				}
				else
				{
					GivePlayerMoney(playerid,-cashdeposit);
					BizzInfo[bouse][bTill] += cashdeposit;
					ExtortionBiz(bouse, cashdeposit);
					format(string, sizeof(string), "  You Have Banked $%d to your till Total: $%d ", cashdeposit,BizzInfo[bouse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
		}
		return 1;
	}
//-----------------------------------[HEAL]-------------------------------------------------------------------------
	if(strcmp(cmd, "/heal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new location = PlayerInfo[playerid][pLocal];
			if(!strlen(tmp))
			{
				if(location != 255)
				{
					if(location < 99)
					{
						if(HouseInfo[location][hArm] == 1 && IsACop(playerid))
						{
							format(string, sizeof(string), "* %s ???????? ??????????.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(playerid, 0);
							GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
							Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
							Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
							SetPlayerPos(playerid,1527.5,-12.1,1002.0);
							PlayerInfo[playerid][pLocal] = 255;
							SetPlayerInterior(playerid,99);
							Spectate[playerid] = 257;
						}
						else
						{
							format(string, sizeof(string), "? ???? ???? ??? ???????????? ?????.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
						}
						if(HouseInfo[location][hHel] == 1)
						{
							new Float:tempheal;
							GetPlayerHealth(playerid,tempheal);
							if ( tempheal < 100.0)
							{
								SetPlayerHealth(playerid,100.0);
								PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
								format(string, sizeof(string), "?? ???? ???????? ? 100 ????????.");
								SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
							}
							else
							{
								SendClientMessage(playerid, TEAM_GREEN_COLOR,"?? ??? ???????? ? 100.");
							}
						}
						else
						{
							format(string, sizeof(string), "? ????? ???? ???? ???????????? ???????.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
						}
						return 1;
					}
					else if(location == 101)//Restaurant
					{
					    new Float:tempheal;
						GetPlayerHealth(playerid,tempheal);
						if ( tempheal < 100.0)
						{
							SetPlayerHealth(playerid,100.0);
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "?? ???? ???????? ? 100 ????????.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
						}
						else
						{
							SendClientMessage(playerid, TEAM_GREEN_COLOR,"?? ??? ???????? ? 100.");
						}
					}
					else if(location == 102 && IsACop(playerid))//Police Armoury
					{
					    SetPlayerHealth(playerid,100.0);
					    format(string, sizeof(string), "* %s ???????? ??????????.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						TogglePlayerControllable(playerid, 0);
						GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
						Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
						Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
						SetPlayerPos(playerid,1527.5,-12.1,1002.0);
						PlayerInfo[playerid][pLocal] = 255;
						SetPlayerInterior(playerid,99);
						Spectate[playerid] = 257;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /heal [playerid/PartOfName] [price]");
					return 1;
				}
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /heal [playerid/PartOfName] [price]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 1000) { SendClientMessage(playerid, COLOR_GREY, "   ????????? ???? ?? ???? 1 ? ?? ???? 1000 !"); return 1; }
			if (giveplayerid == playerid)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ?????? ???????? ????!");
				return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new giveambu = GetPlayerVehicleID(giveplayerid);
					new playambu = GetPlayerVehicleID(playerid);
					if(gTeam[playerid] == TEAM_CYAN||PlayerInfo[playerid][pMember]==4||PlayerInfo[playerid][pLeader]==4)//model
					{
						if (IsAnAmbulance(playambu) && playambu == giveambu)
						{
							new Float:tempheal;
							GetPlayerHealth(giveplayerid,tempheal);
							if(tempheal >= 100.0)
							{
								SendClientMessage(playerid, TEAM_GREEN_COLOR,"   ??? ??????? ????????? ???????.");
								return 1;
							}
							format(string, sizeof(string), "~y~You healed ~n~~w~%s~n~~g~$%d", giveplayer,moneys);
							GameTextForPlayer(playerid, string, 5000, 1);
							GivePlayerMoney(playerid,moneys);
							GivePlayerMoney(giveplayerid,-moneys);
							new hp = 0;
						    if(PlayerInfo[playerid][pPainPerk] > 0)
						    {
						        hp = 20 * PlayerInfo[playerid][pPainPerk]; hp += 100;
								SetPlayerHealth(giveplayerid, hp);
						    }
						    else
						    {
						        hp = 100;
						        SetPlayerHealth(giveplayerid, 100);
						    }
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							PlayerPlaySound(giveplayerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "You have been healed to %d health -$%d",hp,moneys);
							SendClientMessage(giveplayerid, TEAM_GREEN_COLOR,string);
							if(STDPlayer[giveplayerid] > 0)
				            {
								STDPlayer[giveplayerid] = 0;
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* ??? ????????!");
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "   ???? ?? ??? ?? ????????? ? ?????????? ?????? / ???????? !");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ??????? !");
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//----------------------------------[ADMINADMIN]-----------------------------------------------
//----------------------------------[mole]-----------------------------------------------
	if(strcmp(cmd, "/mole", true) == 0 && PlayerInfo[playerid][pAdmin] >= 4)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				//SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /mole [mole text]");
				return 1;
			}
			format(string, sizeof(string), "SMS: %s, ???????????: ??? (555)",result);
			if (gTeam[playerid] < 3){SendClientMessage(playerid, COLOR_YELLOW, string);}
			SendEnemyMessage(COLOR_YELLOW, string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(gTeam[i] >= 3 && gPlayerSpawned[i])
					{
						RingTone[i] =20;
					}
				}
			}
			printf("???: %s", result);
		}
		return 1;
	}
//----------------------------------[HQ]-----------------------------------------------
	if(strcmp(cmd, "/hq", true) == 0 && PlayerInfo[playerid][pAdmin] >= 4)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				//SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /hq [hq text]");
				return 1;
			}
			format(string, sizeof(string), "???? - ????????: %s, ??", result);
			if (gTeam[playerid] != 2 ){SendClientMessage(playerid, COLOR_DBLUE, string);}
			SendTeamBeepMessage(2, COLOR_DBLUE, string);
			printf("HQ: %s", result);
		}
		return 1;
	}
//----------------------------------[RECON]-----------------------------------------------
	if(strcmp(cmd, "/bigears", true) == 0 && PlayerInfo[playerid][pAdmin] >= 2)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!BigEar[playerid])
			{
				BigEar[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   ???? ??? ???????");
			}
			else if (BigEar[playerid])
			{
				(BigEar[playerid] = 0);
				SendClientMessage(playerid, COLOR_GRAD2, "   ???? ??? ??????, ?? ??????");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/id", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /id [playerid/PartOfName]");
				return 1;
			}
			new target;
			target = ReturnUser(tmp);
			new sstring[256];
			if(IsPlayerConnected(target))
			{
			    if(target != INVALID_PLAYER_ID)
			    {
					GetPlayerName(target, giveplayer, sizeof(giveplayer));
					format(sstring, sizeof(sstring), "ID: (%d) %s",target,giveplayer);
					SendClientMessage(playerid, COLOR_GRAD1, sstring);
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tv", true) == 0 || strcmp(cmd, "/recon", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pDonateRank] > 0)
	        {
	            if(WatchingTV[playerid] < 1)
			    {
		        	GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
		        }
	        }
            new hkey = PlayerInfo[playerid][pPhousekey];
			new house = PlayerInfo[playerid][pLocal];
			if(Spectate[playerid] == 255 && PlayerInfo[playerid][pLocal] != 255 || Spectate[playerid] == 255 && PlayerInfo[playerid][pAdmin] > 0)
			{
				GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
				Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
				Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
				PlayerInfo[playerid][pLocal] = 255;
				gTeam[playerid] = 0;
			}
			tmp = strtok(cmdtext, idx);
			if(strcmp("off", tmp, true, strlen(tmp)) == 0)
			{
			    if(WatchingTV[playerid] > 0)
			    {
			        WatchingTV[playerid] = 0;
					Spectate[playerid] = 253;
					GameTextForPlayer(playerid, "~w~                TV~n~~r~                Off", 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ???????? ????????? !");
				    return 1;
				}
			}
			if(PlayerInfo[playerid][pAdmin] < 1)
			{
				if(house == 255)
				{
					GameTextForPlayer(playerid, "~r~There is no tv here", 5000, 1);
					return 1;
				}
			}
			if(PlayerInfo[playerid][pAdmin] > 1 || PlayerToPoint(12.0, playerid, HouseInfo[hkey][hExitx], HouseInfo[hkey][hExity],HouseInfo[hkey][hExitz]))
			{
			    if(HouseInfo[hkey][hHealthx] != 1)
			    {
			        GameTextForPlayer(playerid, "~r~This upgrade isn't installed", 5000, 1);
			        return 1;
			    }
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        Spectate[playerid] = giveplayerid;
						new Float:health;
						GetPlayerHealth(Spectate[playerid], health);
						GetPlayerName(Spectate[playerid], giveplayer, sizeof(giveplayer));
						new cash =  GetPlayerMoney(Spectate[playerid]);
						if (PlayerInfo[playerid][pAdmin] >= 1)
						{
							format(string, sizeof(string), "?????????: (%d) %s $%d H:%.0f",Spectate[playerid],giveplayer,cash,health);
						}
						else
						{
							format(string, sizeof(string), "UAV: (%d) %s",Spectate[playerid],giveplayer);
						}
						SendClientMessage(playerid, COLOR_GREEN, string);
						WatchingTV[playerid] = 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREEN, "???? ?? ????????.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "   ?? ?? ?????????? ? ????? ???? !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[UNCON]-----------------------------------------------

	if(strcmp(cmd, "/uncon", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetCamBack(playerid);
		}
		return 1;
	}

//----------------------------------[AdminChat]-----------------------------------------------
	if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/a)dmin [admin chat]");
				return 1;
			}
			format(string, sizeof(string), "*%d ????? %s: %s", PlayerInfo[playerid][pAdmin], sendername, result);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				SendAdminMessage(COLOR_YELLOW, string);
			}
			printf("Admin %s: %s", sendername, result);
		}
		return 1;
	}
//-------------------------------[Logout]--------------------------------------------------------------------------
	if (strcmp(cmd, "/logout", true) ==0 )
	{
        if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				OnPlayerUpdate_GF(playerid);
				gPlayerLogged[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ????? ?? ??????");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ??????? !");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/logoutpl", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /logoutpl [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(giveplayerid)&&giveplayerid != INVALID_PLAYER_ID)
			    {
					OnPlayerUpdate_GF(giveplayerid);
					gPlayerLogged[giveplayerid] = 0;
					SendClientMessage(playerid, COLOR_GRAD1, "   ?? ????????? ?????? ?????????????.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ??????? !");
			}
		}
		return 1;
	}
//-------------------------------[Logoutall]--------------------------------------------------------------------------
	if (strcmp(cmd, "/logoutall", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						OnPlayerUpdate_GF(i);
						gPlayerLogged[i] = 0;
					}
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ????????? ???? ??????? ?????????????");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ??????? !");
			}
		}
		return 1;
	}
//--------------------------------------------------------------------------------------
//----------------------------------[cnn]-----------------------------------------------
	if(strcmp(cmd, "/cnn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /cnn [cnn textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}
				format(string, sizeof(string), "~b~%s: ~w~%s",sendername,result);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						GameTextForPlayer(i, string, 5000, 6);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cnnn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				tmp = strtok(cmdtext, idx);
				new txtid;
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /cnnn <type> ");
					return 1;
				}
				txtid = strval(tmp);
				if(txtid == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "?? ?? ?????? ??????? 2");
					return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /cnnn <type> [cnnc textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}
				format(string, sizeof(string), "~w~%s",result);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i) == 1)
					{
						GameTextForPlayer(i, string, 5000, txtid);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
				return 1;
			}
		}
		return 1;
	}
//[ADMIN]______________________________________________________________________________
//-----------------------------------[JAIL]-------------------------------------------------------------------------
	if(strcmp(cmd, "/prison",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1338)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ???????????? ???????????? ??? ??????? !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /prison [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
		            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* ?? ????????? %s ? ???? ????????.", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					format(string, sizeof(string), "* ?? ???? ????????? ? ???? ????????? ??????? %s.", sendername);
					SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
					GameTextForPlayer(giveplayerid, "~w~Welcome to ~n~~r~Fort DeMorgan", 5000, 3);
					WantedPoints[giveplayerid] = 0;
					WantedLevel[giveplayerid] = 0;
					PlayerInfo[giveplayerid][pJailed] = 2;
					PlayerInfo[giveplayerid][pJailTime] = 3600;
		            SetPlayerPos(giveplayerid, 107.2300,1920.6311,18.5208);
					SetPlayerWorldBounds(giveplayerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
		        }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ???? ????? ???????? ?????????? !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/unprison",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1338)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ???????????? ???????????? ??? ??????? !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /unprison [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
					WantedPoints[giveplayerid] = 0;
					WantedLevel[giveplayerid] = 0;
					PlayerInfo[giveplayerid][pJailed] = 0;
					PlayerInfo[giveplayerid][pJailTime] = 0;
					SetPlayerWorldBounds(playerid,20000.0000,-20000.0000,20000.0000,-20000.0000); //Reset world to player
	    			SetPlayerInterior(playerid, 0);
				    SetPlayerPos(playerid, 90.2101,1920.4854,17.9422);
					SendClientMessage(giveplayerid,COLOR_RED,"?? ???? ???????? ?? ??????");
		        }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ???? ????? ???????? ?????????? !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/jail", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /jail [playerid/PartOfName] [time(minutes)]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* ?? ???????? %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						format(string, sizeof(string), "* ?? ???? ????????? ? ?????? ??????????????? %s.", sendername);
						SendClientMessage(playa, COLOR_LIGHTRED, string);
						ResetPlayerWeapons(playa);
						WantedPoints[playa] = 0;
						PlayerInfo[playa][pJailed] = 1;
						PlayerInfo[playa][pJailTime] = money*60*1000;
						TimerJail[playerid] = SetTimerEx("UnJail",money*60*1000,0,"d",playa);
						SetPlayerInterior(playa, 6);
						SetPlayerPos(playa, 264.6288,77.5742,1001.0391);
						format(string, sizeof(string), "?? ????????? ? ?????? ? ??????? %d ?????. ?????: ???????????", money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "? ??? ?? ???? ??? ???? ???????.");
			}
		}
		return 1;
	}
//----------------------------------[TOD]-----------------------------------------------

	if(strcmp(cmd, "/tod", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /tod [timeofday] (0-23)");
				return 1;
			}
			new hour;
			hour = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
	            SetWorldTime(hour);
				format(string, sizeof(string), "   ?????? %d:00 ?????.", hour);
				BroadCast(COLOR_GRAD1, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ??????? !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/startlotto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
	            format(string, sizeof(string), "??????? ????????: ??????? ????????");
	            OOCOff(COLOR_WHITE, string);
	            new rand = random(80);
	            if(rand < 77) { rand += 3; }
	            Lotto(rand);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ????????????? !");
	            return 1;
	        }
	    }
		return 1;
	}
//-----------------------------------editstat---------------------------------------
	if(strcmp(cmd, "/setstat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /setstat [playerid/PartOfName] [statcode] [amount]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 ??????? |2 ???????? ?? ???????? |3 ????? ?????????????? ?????????? |4 ?????? ");
				SendClientMessage(playerid, COLOR_GRAD3, "|5 ?????? ? ????? |6 ????? ???????? |7 ????????  ");
				SendClientMessage(playerid, COLOR_GRAD2, "|8 HouseKey |9 BizKey |10 ??????, ??????? | VIP");
				SendClientMessage(playerid, COLOR_GRAD2, "|12 Det |13 ??????? |14 ???????? |15 ??????? |16 Jack |17 ????????? |18 ??? |19 ???? |20 ???????");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
	    	{
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /setstat [playerid/PartOfName] [statcode] [amount]");
						SendClientMessage(playerid, COLOR_GRAD4, "|1 ??????? |2 ???????? ?? ???????? |3 ????? ?????????????? ?????????? |4 ?????? ");
						SendClientMessage(playerid, COLOR_GRAD3, "|5 ?????? ? ????? |6 ????? ???????? |7 ???????? ");
						SendClientMessage(playerid, COLOR_GRAD2, "|8 HouseKey |9 BizKey |10 ??????, ??????? | VIP");
						SendClientMessage(playerid, COLOR_GRAD2, "|12 Det |13 ??????? |14 ???????? |15 ??????? |16 Jack |17 ????????? |18 ??? |19 ????");
						return 1;
					}
					new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /setstat [playerid/PartOfName] [statcode] [amount]");
						SendClientMessage(playerid, COLOR_GRAD4, "|1 ??????? |2 ???????? ?? ???????? |3 ????? ?????????????? ?????????? |4 ?????? ");
						SendClientMessage(playerid, COLOR_GRAD3, "|5 ?????? ? ????? |6 ????? ???????? |7 ???????? ");
						SendClientMessage(playerid, COLOR_GRAD2, "|8 HouseKey |9 BizKey |10 ??????, ??????? | VIP");
						SendClientMessage(playerid, COLOR_GRAD2, "|12 Det |13 ??????? |14 ???????? |15 ??????? |16 Jack |17 ????????? |18 ??? |19 ????");
						return 1;
					}
					new amount;
					amount = strval(tmp);
					if (PlayerInfo[playerid][pAdmin] >= 1338)
					{
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayerid][pLevel] = amount;
								format(string, sizeof(string), "   ??????? ?????? ??? ??????? ?? %d", amount);
							}
							case 2:
							{
								PlayerInfo[giveplayerid][pSHealth] = amount;
								format(string, sizeof(string), "   ????? ??? ?????????? ? ???????? ????????? %d ", amount);
							}
							case 3:
							{
								PlayerInfo[giveplayerid][gPupgrade] = amount;
								format(string, sizeof(string), "   ????? ??? ?????????? ? ?????? ???????????? %d", amount);
							}
							case 4:
							{
								PlayerInfo[giveplayerid][pModel] = amount;
								format(string, sizeof(string), "   ????? ????????? ????????????? %d", amount);
							}
							case 5:
							{
								PlayerInfo[giveplayerid][pAccount] = amount;
								format(string, sizeof(string), "   ???? ?????? ??? ?????????? ? $%d", amount);
							}
							case 6:
							{
								PlayerInfo[giveplayerid][pPnumber] = amount;
								format(string, sizeof(string), "   ?????????? ????? ?????? ??? ?????????? ? %d", amount);
							}
							case 7:
							{
								PlayerInfo[giveplayerid][pExp] = amount;
								format(string, sizeof(string), "   ?????? ???????? ?????? ???? ??????????? ? %d", amount);
							}
							case 8:
							{
								PlayerInfo[giveplayerid][pPhousekey] = amount;
								format(string, sizeof(string), "   ?????? ?? ???? ?????? ???? ??????????? ? %d", amount);
							}
							case 9:
							{
								PlayerInfo[giveplayerid][pPbiskey] = amount;
								format(string, sizeof(string), "   ?????? ??????? ?????? ??? ?????????? ? %d", amount);
							}
							case 10:
							{
								PlayerInfo[giveplayerid][pDonateRank] = amount;
								format(string, sizeof(string), "   ????? ?????????? ??? ?????????? ? %d", amount);
							}
							case 11:
							{
								PlayerInfo[giveplayerid][pFMember] = amount;
								format(string, sizeof(string), "   ???? ????? ?????? ??? ?????????? ? %d", amount);
							}
							case 12:
							{
								PlayerInfo[giveplayerid][pDetSkill] = amount;
								format(string, sizeof(string), "   ????? ?????? ????????? ?????? ? %d", amount);
							}
							case 13:
							{
								PlayerInfo[giveplayerid][pLawSkill] = amount;
								format(string, sizeof(string), "   ??????? ?????? ????? ??? ? %d", amount);
							}
							case 14:
							{
								PlayerInfo[giveplayerid][pMechSkill] = amount;
								format(string, sizeof(string), "   ????????????? ????? ?????? ???????? ?????? To %d", amount);
							}
							case 15:
							{
								PlayerInfo[giveplayerid][pNewsSkill] = amount;
								format(string, sizeof(string), "   ????? ?????? ????????? ???????? ?????? To %d", amount);
							}
							case 16:
							{
								PlayerInfo[giveplayerid][pJackSkill] = amount;
								format(string, sizeof(string), "   ????? ????? ???? ??????? ?????? ? %d", amount);
							}
							case 17:
							{
								PlayerInfo[giveplayerid][pDrugsSkill] = amount;
								format(string, sizeof(string), "   ????? ?????? ???????? ??????????? ?????? ? %d", amount);
							}
							case 18:
							{
								PlayerInfo[giveplayerid][pSexSkill] = amount;
								format(string, sizeof(string), "   ????? ?????? ????? ?????? ? %d", amount);
							}
							case 19:
							{
								PlayerInfo[giveplayerid][pBoxSkill] = amount;
								format(string, sizeof(string), "   ????? ?????? ????? ?????? ? %d", amount);
							}
							case 77:
							{
								PlayerInfo[giveplayerid][pJob] = amount;
								format(string, sizeof(string), "   ????? ?????? ?????? ? %d", amount);
							}
							case 88:
							{
								PlayerInfo[giveplayerid][pContractTime] = amount;
								format(string, sizeof(string), "   ????? ??????? ????????? ?????? ?????? ? %d", amount);
							}
							default:
							{
								format(string, sizeof(string), "   ?????? ?????? ???????? ?????", amount);
							}

						}
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
					}
				}//not valid id
			}//not connected
		}
		return 1;
	}
	if(strcmp(cmd, "/setfamily", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /setfamily [Family] [code] [amount]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 ????????");
				return 1;
			}
			new family;
			family = strval(tmp);
			if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "  ????? ????? ?? ????? ???? ???? 1 ? ???? 10 !"); return 1; }
			family -= 1;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /setfamily [Family] [code] [amount]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 ????????");
				return 1;
			}
			new stat;
			stat = strval(tmp);
			if(stat < 1 || stat > 1) { SendClientMessage(playerid, COLOR_GREY, "   ?????? ???? ?? ????? ???? ???? 1 ? ???? 1 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /setfamily [Family] [code] [amount]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 ????????");
				return 1;
			}
			new amount;
			amount = strval(tmp);
			if(amount < 1 || amount > 10) { SendClientMessage(playerid, COLOR_GREY, "   ?????????? ?? ????? ???? ???? 1 ? ???? 10 !"); return 1; }
			switch (stat)
			{
			    case 1:
			    {
					FamilyInfo[family][FamilyMembers] = amount;
					format(string, sizeof(string), "   ????? %s ????? %d ??????????", FamilyInfo[family][FamilyName], amount);
			    }
			    default:
			    {
			    	format(string, sizeof(string), "   ?????? ?????? ???????? ?????");
			    }
			}
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		return 1;
	}
//----------------------------------[SETINT]-----------------------------------------------
	if(strcmp(cmd, "/setint", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /setint [interiorid]");
				return 1;
			}
			new intid;
			intid = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				SetPlayerInterior(playerid,intid);
				PlayerInfo[playerid][pInt] = intid;
				format(string, sizeof(string), "   ???????? id %d.", intid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ??????? !");
			}
		}
		return 1;
	}
//----------------------------------[SKYDIVE]------------------------------------------------
	if(strcmp(cmd, "/skydive", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				GetPlayerPos(playerid, rx, ry, rz);
				if (IsPlayerConnected(playerid))
				{
					GivePlayerWeapon(playerid, 46, 0);
					SetPlayerPos(playerid,rx, ry, rz+1500);
					SendClientMessage(playerid, COLOR_WHITE, "GO!! GO!! GO!!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
//----------------------------------[FOURDIVE]------------------------------------------------
	if(strcmp(cmd, "/fourdive", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /fourdive [playerid1] [playerid2] [playerid3] [playerid4]");
				return 1;
			}
			new para1;
			new para2;
			new para3;
			new para4;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para3 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para4 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
				if (IsPlayerConnected(para1)){ GivePlayerWeapon(para1, 46, 0); SetPlayerPos(para1,1536.0, -1360.0, 1350.0);SetPlayerInterior(para1,0);PlayerInfo[para1][pInt] = 0;SendClientMessage(para1, COLOR_WHITE, "GO!! GO!! GO!!");}
				if ((IsPlayerConnected(para2)) && (para2>0)) { GivePlayerWeapon(para2, 46, 0); SetPlayerPos(para2,1536.0, -1345.0, 1350.0);SetPlayerInterior(para2,0);PlayerInfo[para2][pInt] = 0;SendClientMessage(para2, COLOR_RED, "GO!! GO!! GO!!");}
				if ((IsPlayerConnected(para3)) && (para3>0)) { GivePlayerWeapon(para3, 46, 0); SetPlayerPos(para3,1552.0, -1345.0, 1350.0);SetPlayerInterior(para3,0);PlayerInfo[para3][pInt] = 0;SendClientMessage(para3, COLOR_RED, "GO!! GO!! GO!!");}
				if ((IsPlayerConnected(para4)) && (para4>0)) { GivePlayerWeapon(para4, 46, 0); SetPlayerPos(para4,1552.0, -1360.0, 1350.0);SetPlayerInterior(para4,0);PlayerInfo[para4][pInt] = 0;SendClientMessage(para4, COLOR_RED, "GO!! GO!! GO!!");}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
//----------------------------------[INVITE]------------------------------------------------
	if(strcmp(cmd, "/invite", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /invite [playerid/PartOfName]");
				return 1;
			}
			new para1;
			new ftext[25];
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLeader] >= 1)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (gTeam[para1]==TEAM_GREEN && PlayerInfo[para1][pMember] == 0 && PlayerInfo[para1][pFMember] == 255)
					    {
					        if(PlayerInfo[para1][pJob] > 0)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ?????????? ???, ? ?????? ???? ?????? !");
					            return 1;
					        }
					        if(PlayerInfo[playerid][pLeader] == 7)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ?????? ??????????, ?? ???");
					            return 1;
					        }
					        if(PlayerInfo[playerid][pLeader] == 1) { PlayerInfo[para1][pTeam] = 1; gTeam[para1] = 1; ftext = "Police Force"; ChosenSkin[para1] = 280; SetPlayerSkin(para1, 280); }
					        else if(PlayerInfo[playerid][pLeader] == 2) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "FBI/ATF"; ChosenSkin[para1] = 286; SetPlayerSkin(para1, 286); }
					        else if(PlayerInfo[playerid][pLeader] == 3) { PlayerInfo[para1][pTeam] = 3; gTeam[para1] = 3; ftext = "National Guard"; ChosenSkin[para1] = 287; SetPlayerSkin(para1, 287); }
					        else if(PlayerInfo[playerid][pLeader] == 4) { PlayerInfo[para1][pTeam] = 4; gTeam[para1] = 4; ftext = "Firemen/Ambulance"; ChosenSkin[para1] = 70; SetPlayerSkin(para1, 70); }
					        else if(PlayerInfo[playerid][pLeader] == 5) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "La Cosa Nostra"; ChosenSkin[para1] = 258; SetPlayerSkin(para1, 120); }
					        else if(PlayerInfo[playerid][pLeader] == 6) { PlayerInfo[para1][pTeam] = 6; gTeam[para1] = 6; ftext = "Yakuza"; ChosenSkin[para1] = 120; SetPlayerSkin(para1, 258); }
					        else if(PlayerInfo[playerid][pLeader] == 7) { return 1; }
					        else if(PlayerInfo[playerid][pLeader] == 8) { PlayerInfo[para1][pTeam] = 8; gTeam[para1] = 8; ftext = "Hitman Agency"; ChosenSkin[para1] = 127; SetPlayerSkin(para1, 127); }
					        else if(PlayerInfo[playerid][pLeader] == 9) { PlayerInfo[para1][pTeam] = 9; gTeam[para1] = 9; ftext = "CNN Studio"; ChosenSkin[para1] = 148; SetPlayerSkin(para1, 148); }
					        else if(PlayerInfo[playerid][pLeader] == 10) { PlayerInfo[para1][pTeam] = 10; gTeam[para1] = 10; ftext = "Taxi Cab Company"; ChosenSkin[para1] = 255; SetPlayerSkin(para1, 255); }
					        else if(PlayerInfo[playerid][pLeader] == 11) { PlayerInfo[para1][pTeam] = 11; gTeam[para1] = 11; ftext = "School Instructors"; ChosenSkin[para1] = 59; SetPlayerSkin(para1, 59); }
					        else if(PlayerInfo[playerid][pLeader] == 12) { PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; ftext = "Flaming Cobra Gang"; ChosenSkin[para1] = 100; SetPlayerSkin(para1, 100); }/////
                            else if(PlayerInfo[playerid][pLeader] == 13) { PlayerInfo[para1][pTeam] = 13; gTeam[para1] = 13; ftext = "??????? ?????"; ChosenSkin[para1] = 112; SetPlayerSkin(para1, 112); }
                            else if(PlayerInfo[playerid][pLeader] == 14) { PlayerInfo[para1][pTeam] = 14; gTeam[para1] = 14; ftext = "Grove Street Gang"; ChosenSkin[para1] = 270; SetPlayerSkin(para1, 270); }
                            else if(PlayerInfo[playerid][pLeader] == 15) { PlayerInfo[para1][pTeam] = 15; gTeam[para1] = 15; ftext = "El Coronas Gang"; ChosenSkin[para1] = 114; SetPlayerSkin(para1, 114); }
                            else if(PlayerInfo[playerid][pLeader] == 16) { PlayerInfo[para1][pTeam] = 16; gTeam[para1] = 16; ftext = "The Ballas Gang"; ChosenSkin[para1] = 102; SetPlayerSkin(para1, 102); }
                            else if(PlayerInfo[playerid][pLeader] == 17) { PlayerInfo[para1][pTeam] = 17; gTeam[para1] = 17; ftext = "The Rife Gang"; ChosenSkin[para1] = 173; SetPlayerSkin(para1, 173); }
                            else if(PlayerInfo[playerid][pLeader] == 18) { PlayerInfo[para1][pTeam] = 18; gTeam[para1] = 18; ftext = "Los Santos Vagos Gang"; ChosenSkin[para1] = 108; SetPlayerSkin(para1, 108); }
                            else if(PlayerInfo[playerid][pLeader] == 19) { PlayerInfo[para1][pTeam] = 19; gTeam[para1] = 19; ftext = "Mer"; ChosenSkin[para1] = 147; SetPlayerSkin(para1, 147); }
                            else if(PlayerInfo[playerid][pLeader] == 20) { PlayerInfo[para1][pTeam] = 20; gTeam[para1] = 20; ftext = "Street Racers"; ChosenSkin[para1] = 124; SetPlayerSkin(para1, 124); }
                            else if(PlayerInfo[playerid][pLeader] == 21) { PlayerInfo[para1][pTeam] = 21; gTeam[para1] = 21; ftext = "??????"; ChosenSkin[para1] = 161; SetPlayerSkin(para1, 161); }
							else { return 1; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pMember] = PlayerInfo[playerid][pLeader];
							PlayerInfo[para1][pRank] = 1;
							printf("AdmCmd: %s ????????? %s ?????????????? %s.", sendername, giveplayer, ftext);
							format(string, sizeof(string), "   ?? ?????????????? ? %s, ?? ???? ?????????? ??????? %s", ftext, sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "   ?? ?????????? %s ?????????????? %s.", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							SetPlayerInterior(para1,0);
							new rand = random(sizeof(gInviteSpawns));
							SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
							SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
							SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
							SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
							TogglePlayerControllable(para1, 0);
						    SelectChar[para1] = 255;
						    SelectCharID[para1] = PlayerInfo[para1][pMember];
						    SelectCharPlace[para1] = 1;
						    PlayerInfo[para1][pModel] = ChosenSkin[para1];
					    	PlayerInfo[para1][pChar] = ChosenSkin[para1];
						    SendClientMessage(para1, COLOR_LIGHTRED, "* ??????????? 'next'????? ??????? ???????? ????.");
						    SendClientMessage(para1, COLOR_LIGHTRED, "* ???? ?? ??????? ????, ? ?? ?????? ???????????? ???, ????????????? 'done'.");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "  ???? ????? ????????? ? ????????? ?????, ? ???????/?????? ???????/??? ???? ?????.");
						    return 1;
						}
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ??????? (??????? ??????!");
			}
		}
		return 1;
	}
//----------------------------------[UNINVITE]------------------------------------------------
	if(strcmp(cmd, "/uninvite", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /uninvite [playerid/PartOfName]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if(PlayerInfo[para1][pMember] == PlayerInfo[playerid][pLeader])
			{
				if(PlayerInfo[playerid][pLeader] >= 1)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
						    if(PlayerInfo[para1][pMember] > 0)
						    {
								GetPlayerName(para1, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								printf("AdmCmd: %s ????? ???????? %s.", sendername, giveplayer);
								format(string, sizeof(string), "* ??? ???????? ?? ????? / ???????, ??????? %s.", sendername);
								SendClientMessage(para1, COLOR_LIGHTBLUE, string);
								SendClientMessage(para1, COLOR_LIGHTBLUE, "* ?? - ?????? ????? ??????????? ????.");
				                gTeam[para1] = 3;
								PlayerInfo[para1][pTeam] = 3;
								PlayerInfo[para1][pMember] = 0;
								PlayerInfo[para1][pRank] = 0;
								PlayerInfo[para1][pChar] = 0;
								new rand = random(sizeof(CIV));
								SetSpawnInfo(para1, gTeam[para1], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
								PlayerInfo[para1][pModel] = CIV[rand];
								MedicBill[para1] = 0;
								SpawnPlayer(para1);
								format(string, sizeof(string), "   ?? ????????  %s ?? ???? ????? / ???????.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							}
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ??????? (??????? ??????)!");
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY," ???? ????? ?? ? ????? ???????");
			}
		}
		return 1;
	}
//----------------------------------[MAKEADMIN]------------------------------------------------
	if(strcmp(cmd, "/makeadmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /makeadmin [playerid/PartOfName] [level(1-3)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 1338 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pAdmin] = level;
						printf("AdmCmd: %s ????????? %s ?? ??????? %d admin.", sendername, giveplayer, level);
						format(string, sizeof(string), "   ?? ???? ?????????? ?? ??????? %d admin %s", level, sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "?? ????????? %s ??????? ?????? %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
//----------------------------------[MAKEIRCADMIN]----------------------------------------------
    if(strcmp(cmd, "/makeircadmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /makeircadmin [playerid/PartOfName] [ChannelNr]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /makeircadmin [playerid/PartOfName] [ChannelNr]");
				return 1;
			}
			new channel = strval(tmp);
			if(channel > 10 || channel < 0) { SendClientMessage(playerid, COLOR_GREY, "   ?? ??????????? ????? 0, ??? ???? ????? 10!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* ?? ??????? %s IRC Admin ?? ?????? %d.", giveplayer, channel);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s ?????? ??? IRC Admin ?? ?????? %d.", sendername, channel);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s", giveplayer);
						switch(channel)
						{
						    case 1:
						    {
						        strmid(IRCInfo[0][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[0][iNeedPass] = 0; IRCInfo[0][iLock] = 0;
						    }
						    case 2:
						    {
						        strmid(IRCInfo[1][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[1][iNeedPass] = 0; IRCInfo[1][iLock] = 0;
						    }
						    case 3:
						    {
						        strmid(IRCInfo[2][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[2][iNeedPass] = 0; IRCInfo[2][iLock] = 0;
						    }
						    case 4:
						    {
						        strmid(IRCInfo[3][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[3][iNeedPass] = 0; IRCInfo[3][iLock] = 0;
						    }
						    case 5:
						    {
						        strmid(IRCInfo[4][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[4][iNeedPass] = 0; IRCInfo[4][iLock] = 0;
						    }
						    case 6:
						    {
						        strmid(IRCInfo[5][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[5][iNeedPass] = 0; IRCInfo[5][iLock] = 0;
						    }
						    case 7:
						    {
						        strmid(IRCInfo[6][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[6][iNeedPass] = 0; IRCInfo[6][iLock] = 0;
						    }
						    case 8:
						    {
						        strmid(IRCInfo[7][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[7][iNeedPass] = 0; IRCInfo[7][iLock] = 0;
						    }
						    case 9:
						    {
						        strmid(IRCInfo[8][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[8][iNeedPass] = 0; IRCInfo[8][iLock] = 0;
						    }
						    case 10:
						    {
						        strmid(IRCInfo[9][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[9][iNeedPass] = 0; IRCInfo[9][iLock] = 0;
						    }
						}
						SaveIRC();
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ???????????? ??????? ??? !");
			    return 1;
			}
		}
		return 1;
	}
//----------------------------------[MAKELEADER]------------------------------------------------
	if(strcmp(cmd, "/makeleader", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /makeleader [playerid/PartOfName] [Number(1-18)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 21 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? 0, ? ?? ???? 22!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
			            if(PlayerInfo[para1][pMember] > 0 || PlayerInfo[para1][pFMember] < 255)
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   ???? ????? ????????? ?? ??????? / ????? !");
			                return 1;
			            }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pLeader] = level;
						format(string, sizeof(string), "   ?? ????  ????????? ??????? ???????, ??????????????? %s", sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "   ?? ????????? ??????????????? %s ????????? ???????? ????? %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						if(level == 0) { PlayerInfo[para1][pChar] = 0; }
						else if(level == 1) { PlayerInfo[para1][pChar] = 288; } //Police Force
						else if(level == 2) { PlayerInfo[para1][pChar] = 286; } //FBI/ATF
						else if(level == 3) { PlayerInfo[para1][pChar] = 287; } //National Guard
						else if(level == 4) { PlayerInfo[para1][pChar] = 228; } //Fire/Ambulance
						else if(level == 5) { PlayerInfo[para1][pChar] = 113; } //La Cosa Nostra
						else if(level == 6) { PlayerInfo[para1][pChar] = 120; } //Yakuza
						else if(level == 7) { PlayerInfo[para1][pChar] = 147; } //Mayor
						else if(level == 8) { PlayerInfo[para1][pChar] = 294; } //Hitmans
						else if(level == 9) { PlayerInfo[para1][pChar] = 227; } //News Reporters
						else if(level == 10) { PlayerInfo[para1][pChar] = 61; } //Taxi Cab Company
						else if(level == 11) { PlayerInfo[para1][pChar] = 171; } //Driving/Flying School
						else if(level == 12) { PlayerInfo[para1][pChar] = 100; }
						else if(level == 13) { PlayerInfo[para1][pChar] = 46; }
						else if(level == 14) { PlayerInfo[para1][pChar] = 270; }
						else if(level == 15) { PlayerInfo[para1][pChar] = 115; }//Coronos
						else if(level == 16) { PlayerInfo[para1][pChar] = 102; }
						else if(level == 17) { PlayerInfo[para1][pChar] = 173; }
						else if(level == 18) { PlayerInfo[para1][pChar] = 108; }
						else if(level == 19) { PlayerInfo[para1][pChar] = 187; }
						else if(level == 20) { PlayerInfo[para1][pChar] = 112; }//SR
						else if(level == 21) { PlayerInfo[para1][pChar] = 161; }
					    gTeam[para1] = 21;
					    PlayerInfo[para1][pTeam] = 21;
					    SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/forceskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /forceskin [playerid/PartOfName]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[para1][pMember] < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????????? ? ????? / ???? !");
				            return 1;
				        }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* ????? %s ???????? ??? ??????? ????", sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ?? ???????? %s ???????? ??? ????", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						if(PlayerInfo[para1][pMember] == 1) { PlayerInfo[para1][pTeam] = 5; ChosenSkin[para1] = 59; }
				        else if(PlayerInfo[para1][pMember] == 2) { PlayerInfo[para1][pTeam] = 6; ChosenSkin[para1] = 121; }
				        else if(PlayerInfo[para1][pMember] == 3) { PlayerInfo[para1][pTeam] = 7; ChosenSkin[para1] = 98; }
				        else if(PlayerInfo[para1][pMember] == 4) { PlayerInfo[para1][pTeam] = 8; ChosenSkin[para1] = 46; }
				        else if(PlayerInfo[para1][pMember] == 5) { PlayerInfo[para1][pTeam] = 9; ChosenSkin[para1] = 174; }
				        else if(PlayerInfo[para1][pMember] == 6) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 280; }
				        else if(PlayerInfo[para1][pMember] == 7) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 164; }
				        else if(PlayerInfo[para1][pMember] == 8) { PlayerInfo[para1][pTeam] = 10; ChosenSkin[para1] = 186; }
				        else { return 1; }
                        SetPlayerInterior(para1,0);
						new rand = random(sizeof(gInviteSpawns));
						SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
						SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
						SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						TogglePlayerControllable(para1, 0);
					    SelectChar[para1] = 255;
					    SelectCharID[para1] = PlayerInfo[para1][pMember];
					    SelectCharPlace[para1] = 1;
					    PlayerInfo[para1][pModel] = ChosenSkin[para1];
				    	PlayerInfo[para1][pChar] = ChosenSkin[para1];
					    SendClientMessage(para1, COLOR_LIGHTRED, "* ??????????? 'next', ????? ??????? ????, ????? ?? ?????? ????????????.");
					    SendClientMessage(para1, COLOR_LIGHTRED, "* ????? ??????? ?????? ????, ???????? 'done'");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
//----------------------------------[GIVERANK]------------------------------------------------
	if(strcmp(cmd, "/giverank", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "*???????????: /giverank [id ??????/????? ????] [Number(1-20)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 20 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "   ?????????? ???????? ????? 0, ??? ????? 20!"); return 1; }
			if (PlayerInfo[playerid][pLeader] >= 1)
			{
			    if(PlayerInfo[para1][pMember] == PlayerInfo[playerid][pLeader] || PlayerInfo[para1][pLeader] == PlayerInfo[playerid][pLeader])
			    {
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pRank] = level;
							format(string, sizeof(string), "   ?? ???? ???????? ? ?????  ??????? %s", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "   ?? ???? %s ???? %d.", giveplayer,level);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[para1][pRank] = level;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid,COLOR_GRAD1," ???? ????? ?? ?? ????? ???????");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ??? ???? ?? ????????????? ???????(?????? ??? ???????)!");
			}
		}
		return 1;
	}
//----------------------------------[setteam]------------------------------------------------
	if(strcmp(cmd, "/setteam", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /setteam [playerid/PartOfName] [team 1(civ) - 2(cop)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pTeam] = level;
						gTeam[para1] = level;
						SetPlayerWeapons(para1);
						SetPlayerSpawn(para1);
						ClearCrime(para1);
						printf("AdmCmd: %s ?????????? %s, ????? ???????????? ? ??????? %d.", sendername, giveplayer, level);
						format(string, sizeof(string), "   ?? ???? ???????????, ????? ?????????? %d ? ??????? %s", level, sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "   ?? ??????????? %s, ????? ???????????? ? ??????? %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
//----------------------------------[GOTO]-----------------------------------------------
	if(strcmp(cmd, "/gotols", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1529.6,-1691.2,13.3);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1529.6,-1691.2,13.3);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ???? ??????????????? !");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ??????? !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotolv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ???? ???????????????");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotosf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1417.0,-295.8,14.1);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, -1417.0,-295.8,14.1);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ???? ???????????????");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/entercar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /entercar [carid]");
				return 1;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				PutPlayerInVehicle(playerid, testcar, 1);
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ???? ???????????????");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotocar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /gotocar [carid]");
				return 1;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
				new Float:cwx2,Float:cwy2,Float:cwz2;
				GetVehiclePos(testcar, cwx2, cwy2, cwz2);
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, cwx2, cwy2, cwz2);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, cwx2, cwy2, cwz2);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ???? ???????????????");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/mark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				SendClientMessage(playerid, COLOR_GRAD1, "   ?????????????? teleporter ???????????");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotomark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ???? ???????????????");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotoin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1416.107000,0.268620,1000.926000);
				}
				else
				{
					SetPlayerPos(playerid, 1416.107000,0.268620,1000.926000);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ???? ???????????????");
				SetPlayerInterior(playerid,1);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotostad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1435.75, -652.664, 1054.94);
				}
				else
				{
					SetPlayerPos(playerid, -1435.75, -652.664, 1054.94);
				}
				SetPlayerInterior(playerid,4);
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ???? ???????????????");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotojet", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34);
				}
				else
				{
					SetPlayerPos(playerid, 1.71875, 30.4062, 1200.34);
				}
				SetPlayerInterior(playerid,1);
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ???? ???????????????");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/goto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /goto [playerid/PartOfName]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 5)
					{
						if(Spectate[playerid] != 255)
						{
							Spectate[playerid] = 256;
						}
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(PlayerInfo[plo][pInt] > 0)
						{
							SetPlayerInterior(playerid,PlayerInfo[plo][pInt]);
							PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
							PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(playerid,0);
						}
						if(plocz > 530.0 && PlayerInfo[plo][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(playerid,1);
							PlayerInfo[playerid][pInt] = 1;
						}
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid,plocx,plocy+2, plocz);
						}
						SendClientMessage(playerid, COLOR_GRAD1, "   ?? ???? ???????????????");
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", plo);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//----------------------------------[GETHERE]-----------------------------------------------
	if(strcmp(cmd, "/gethere", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /gethere [playerid/PartOfName]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[plo][pAdmin] > 5)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "???????? ?????? ????? ?? ?? ? ???.");
						return 1;
					}
					if (PlayerInfo[playerid][pAdmin] >= 3)
					{
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(PlayerInfo[playerid][pInt] > 0)
						{
							SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
							PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
							PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(plo,1);
							PlayerInfo[plo][pInt] = 1;
						}
						if (GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
						}
						else
						{
							SetPlayerPos(plo,plocx,plocy+2, plocz);
						}
						SendClientMessage(plo, COLOR_GRAD1, "   ?? ???? ???????????????");
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", plo);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/getcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /getcar [carid]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(plo,plocx,plocy+4, plocz);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/oldcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    format(string, sizeof(string), "??? ?????? ?????????? ???: %d",gLastCar[playerid]);
		    SendClientMessage(playerid, COLOR_GREY, string);
	    }
	    return 1;
	}
	if(strcmp(cmd, "/fuelcars", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1338)
	        {
	            for(new c=0;c<CAR_AMOUNT;c++)
				{
					Gas[c] = GasMax;
				}
				SendClientMessage(playerid, COLOR_GREY, "   ??? ?????????? ??????????? ???????? ! ");
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ????????????? ! ");
	            return 1;
	        }
	    }
	    return 1;
	}
//----------------------------------[GiveGun]------------------------------------------------
	if(strcmp(cmd, "/givegun", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /givegun [playerid/PartOfName] [?????? id (eg. 46 = ???????)] [??????????]");
				return 1;
			}
			new playa;
			new gun;
			new ammo;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /givegun [playerid/PartOfName] [weaponid] [ammo]");
				SendClientMessage(playerid, COLOR_GRAD4, "3(????) 4 (???) 5 (??????? ????) 6 (?????) 7 (???????) 8 (Katana) 10-13 (?????) 14 (?????) 16 (???????) 18 (Molotovs) 22 (????????) 23 (SPistol)");
				SendClientMessage(playerid, COLOR_GRAD3, "24 (????) 25 (????????) 29 (MP5) 30 (AK47) 31 (M4) 33 (????????) 34 (???????) 37 (???????) 41 (??????) 42 (???-????) 43 (??????) 46(???????)");
				return 1;
			}
			if(gun < 1||gun > 46||gun==27||gun==1||gun==2||gun==9||gun==17||gun==19||gun==20||gun==21||gun==36||gun==38||gun==39||gun==40||gun==44||gun==45)
			{ SendClientMessage(playerid, COLOR_GRAD1, "   ???????????? ?????? ID!"); return 1; }
			tmp = strtok(cmdtext, idx);
			ammo = strval(tmp);
			if(ammo <1||ammo > 999)
			{ SendClientMessage(playerid, COLOR_GRAD1, "   ?? ???? 1 ? ?? ???? 999 ????!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						GivePlayerWeapon(playa, gun, ammo);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
//----------------------------------[sethp]------------------------------------------------
	if(strcmp(cmd, "/sethp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /sethp [playerid/PartOfName] [health]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerHealth(playa, health);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setarmor", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /setarmor [playerid/PartOfName] [armor]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2001)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerArmour(playa, health);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/veh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] < 1338)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ???????!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /veh [carid] [color1] [color2]");
				return 1;
			}
			new car;
			car = strval(tmp);
			if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "   ????? ????????????? ???????? ?? ????? ???? ???? 400 ??? ???? 611 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /veh [carid] [color1] [color2]");
				return 1;
			}
			new color1;
			color1 = strval(tmp);
			if(color1 < 0 || color1 > 126) { SendClientMessage(playerid, COLOR_GREY, "   ??????? ????? ?? ????? ???? ???? 0 ??? ???? 126 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /veh [carid] [color1] [color2]");
				return 1;
			}
			new color2;
			color2 = strval(tmp);
			if(color2 < 0 || color2 > 126) { SendClientMessage(playerid, COLOR_GREY, "   ??????? ????? ?? ????? ???? ???? 0 ??? ???? 126 !"); return 1; }
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			new carid = CreateVehicle(car, X,Y,Z, 0.0, color1, color2, 60000);
			CreatedCars[CreatedCar] = carid;
			CreatedCar ++;
			format(string, sizeof(string), "   ???????????? ???????? %d ???????????.", carid);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/fixveh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ????? )).");
			    return 1;
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
			    SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
			    SendClientMessage(playerid, COLOR_GREY, " ????????? ??????? !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/destroycars", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ???????!");
			    return 1;
			}
			for(new i = 0; i < sizeof(CreatedCars); i++)
			{
				if(i != 0)
				{
			    	DestroyVehicle(i);
				}
			}
			SendClientMessage(playerid, COLOR_GREY, "????????? ????????? ???????????? ???????? !");
		}
		return 1;
	}
	if(strcmp(cmd, "/weather", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ???????!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /weather [weatherid]");
			    return 1;
			}
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   ???????? ????????????? ???????? ?? ????? ???? ???? 0 ??? ???? 45 !"); return 1; }
			SetPlayerWeather(playerid, weather);
			SendClientMessage(playerid, COLOR_GREY, "   ???????? ????? !");
		}
		return 1;
	}
	if(strcmp(cmd, "/weatherall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ???????!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /weatherall [weatherid]");
			    return 1;
			}
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "???????? ????????????? ???????? ?? ????? ???? ???? 0 ??? ???? 45 !"); return 1; }
			SetWeather(weather);
			SendClientMessage(playerid, COLOR_GREY, "???????? ????? ???? !");
		}
		return 1;
	}
//----------------------------------[Money]------------------------------------------------
	if(strcmp(cmd, "/money", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /money [playerid/PartOfName] [money]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						ResetPlayerMoney(playa);
						ConsumingMoney[playa] = 1;
						GivePlayerMoney(playa, money);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
//----------------------------------[GiveMoney]------------------------------------------------
	if(strcmp(cmd, "/givemoney", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /givemoney [playerid/PartOfName] [money]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            ConsumingMoney[playa] = 1;
						GivePlayerMoney(playa, money);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
//-----------------------------------[Slap]-----------------------------------------------
	if(strcmp(cmd, "/slap", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /slap [playerid/PartOfName]");
				return 1;
			}
			new playa;
			new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1338)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerHealth(playa, shealth);
						SetPlayerHealth(playa, shealth-5);
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+5);
						PlayerPlaySound(playa, 1130, slx, sly, slz+5);
						printf("AdmCmd: %s slapped %s",sendername,  giveplayer);
						format(string, sizeof(string), "AdmCmd: %s ??? ???? %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/mute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /mute [playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playa][pMuted] == 0)
						{
							PlayerInfo[playa][pMuted] = 1;
							printf("AdmCmd: %s silenced %s",sendername,  giveplayer);
							format(string, sizeof(string), "AdmCmd: %s ??? ??????? %s",giveplayer ,sendername);
							ABroadCast(COLOR_LIGHTRED,string,1);
						}
						else
						{
							PlayerInfo[playa][pMuted] = 0;
							printf("AdmCmd: %s unsilenced %s",sendername,  giveplayer);
							format(string, sizeof(string), "AdmCmd: %s ????? ???????? %s",giveplayer ,sendername);
							ABroadCast(COLOR_LIGHTRED,string,1);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}

//----------------------------------[Kick]------------------------------------------------
    if(strcmp(cmd, "/kick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /kick [playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /kick [playerid/PartOfName] [reason]");
							return 1;
						}
						new year, month,day;
						getdate(year, month, day);
						format(string, sizeof(string), " %s - ??????? ??????????????? %s, ???????: %s (%d-%d-%d)", giveplayer, sendername, (result),month,day,year);
						format(string, sizeof(string), " %s  - ?????? ??????????????? %s, ???????:  %s", giveplayer, sendername, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						KickLog(string);
						Kick(giveplayerid);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/sync", true) == 0)
	{
		SetPlayerInterior(playerid,GetPlayerInterior(playerid));
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	
	if(strcmp(cmd, "/givevip", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /givevip [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[playerid][pAdmin] < 1337) return SendClientMessage(playerid,COLOR_RED," ?? ?? ?????");
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pDonateRank] == 0)
			        {
						SendClientMessage(giveplayerid,COLOR_LIGHTRED, " ??? ???????? VIP ???????");
						PlayerInfo[giveplayerid][pDonateRank] = 1;
						return 1;
					}
					else if(PlayerInfo[giveplayerid][pDonateRank] == 1)
					{
					    SendClientMessage(giveplayerid,COLOR_LIGHTRED, " ? ??? ???????? VIP ???????");
						PlayerInfo[giveplayerid][pDonateRank] = 0;
					    return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/payday", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] < 1339) return SendClientMessage(playerid,COLOR_RED," ?? ?? ?????");
			if(IsPlayerConnected(giveplayerid))
			{
				PayDay();
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/skick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /skick [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        Kick(giveplayerid);
				    }
				}
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/kickres", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] < 1)
			{
				return 1;
			}
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /kickres [level] [ammount]");
				return 1;
			}
			new level = strval(tmp);
			if(level < 0 || level > 5) { SendClientMessage(playerid, COLOR_GREY, "????? ?????? ??????????? ????? ????? ?? ?????? 0 ?? 5 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /kickres [level] [ammount]");
				return 1;
			}
			new ammount = strval(tmp);
			if(ammount < 1 || ammount > 10) { SendClientMessage(playerid, COLOR_GREY, "????? ?????? ??????????? ????? ????? ????????? 10 ??????? !"); return 1; }
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(PlayerInfo[i][pLevel] == level && PlayerInfo[i][pAdmin] < 1 && PlayerInfo[i][pDonateRank] < 1 && ammount > 0)
			        {
			            ammount -= 1;
						Kick(i);
			        }
			    }
			}
 		}
		return 1;
	}
	if(strcmp(cmd, "/warn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /warn [playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /warn [playerid/PartOfName] [reason]");
							return 1;
						}
						PlayerInfo[giveplayerid][pWarns] += 1;
						if(PlayerInfo[giveplayerid][pWarns] >= 3)
						{
						    new year, month,day;
							getdate(year, month, day);
							format(string, sizeof(string), "AdmCmd: %s ??? ??????? %s, ????????: %s (%d-%d-%d)", giveplayer, sendername, (result),month,day,year);
							BanLog(string);
							format(string, sizeof(string), "AdmCmd: %s ??? ??????? %s (??????? 3 ??????????????), ???????: %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
							PlayerInfo[giveplayerid][pAdmin] = PlayerInfo[giveplayerid][pLevel];
							PlayerInfo[giveplayerid][pLevel] = -999;
							Ban(giveplayerid);
							return 1;
						}
						format(string, sizeof(string), "?? ???????? ?????????????? %s, ????????: %s", giveplayer, (result));
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						format(string, sizeof(string), "?? ???????? ?????????????? %s, ????????: %s", sendername, (result));
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /sban [playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /sban [playerid/PartOfName] [reason]");
							return 1;
						}
						new year, month,day;
						getdate(year, month, day);
						format(string, sizeof(string), "AdmCmd: %s ??? ??????? %s, ????????: %s (%d-%d-%d)", giveplayer, sendername, (result),month,day,year);
						BanLog(string);
						PlayerInfo[giveplayerid][pAdmin] = PlayerInfo[giveplayerid][pLevel];
						PlayerInfo[giveplayerid][pLevel] = -999;
						Ban(giveplayerid);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /ban [playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /ban [playerid/PartOfName] [reason]");
							return 1;
						}
						new year, month,day;
						getdate(year, month, day);
						format(string, sizeof(string), "AdmCmd: %s ??? ??????? %s, ????????: %s (%d-%d-%d)", giveplayer, sendername, (result),month,day,year);
						BanLog(string);
						format(string, sizeof(string), "AdmCmd: %s ??? ??????? %s, ????????: %s", giveplayer, sendername, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						Ban(giveplayerid);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	//----------------------/unbanip--------------
  	if(strcmp(cmd,"/unbanip",true)==0)
  	{
   		if(PlayerInfo[playerid][pAdmin] >= 1337)
   		{
       	tmp = strtok(cmdtext,idx);
       	if(!strlen(tmp))
       	{
        	SendClientMessage(playerid,COLOR_GRAD1,"USAGE: /unbanip [players ip]");
           	return 1;
       	}

	    format(string,sizeof(string),"unbanip %s",tmp);
	    SendRconCommand(string);
       	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    format(string, 256, "Admcmd: %s ???????? IP %s", sendername,tmp);
	    ABroadCast(COLOR_LIGHTRED,string,1);
  	 	}
   		return 1;
  	}
//----------------------------------[Freeze]------------------------------------------------
	if(strcmp(cmd, "/freeze", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /freeze [playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if(PlayerInfo[playa][pAdmin] > 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "????? ?? ????? ???? ?????????");
				return 1;
			}
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 0);
						format(string, sizeof(string), "AdmCmd: %s ????????? ??????? %s",sendername,  giveplayer);
						printf("%s",string);
						format(string, sizeof(string), "AdmCmd: %s ??? ?????????? ??????? %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}

//----------------------------------[unfreeze]------------------------------------------------
	if(strcmp(cmd, "/unfreeze", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /unfreeze [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 1);
						format(string, sizeof(string), "AdmCmd: %s ????????? ??????? %s",sendername,  giveplayer);
						printf("%s",string);
						format(string, sizeof(string), "AdmCmd: %s ??? ?????????? ??????? %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
//----------------------------------[EndRound]-----------------------------------------------

	if(strcmp(cmd, "/restart", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	  		if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				GameModeInitExitFunc();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ??????? !");
			}
		}
		return 1;
	}
//----------------------------------[EndRound]-----------------------------------------------

//----------------------------------[GMX]-----------------------------------------------

	if(strcmp(cmd, "/gmx", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
				GameModeExit();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ???????????? ???????????? ??? ??????? !");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/cam", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /cam [1/2/3/4]");
				return 1;
			}
			Unspec[playerid][sCam] = strval(tmp);
			format(string, sizeof(string), "???????????? ? ?????? %d",Unspec[playerid][sCam]);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
		return 1;
	}
	if (strcmp(cmd, "/admins", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "?????????????:");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAdmin] < 1338)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "?????????????: %s", sendername);
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/licensers", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
		SendClientMessage(playerid, COLOR_GRAD1, "________________????????? ??????_________________");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		if(IsPlayerConnected(i))
		{
		if(PlayerInfo[i][pMember] == 11 || PlayerInfo[i][pLeader] == 11)
		{
		GetPlayerName(i, sendername, sizeof(sendername));
		format(string, 256, " ????????: %s", sendername);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		}
		}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/minet", true) == 0)
	{
		tmp = strtok(cmdtext,idx);
		new otherplayer = strval(tmp);
		if(GetDistanceBetweenPlayers(playerid, otherplayer) < 1)
		{
		    TurnPlayerFaceToPlayer(playerid, otherplayer);
		    TurnPlayerFaceToPlayer(otherplayer, playerid);
			ApplyAnimation(otherplayer,"BLOWJOBZ","BJ_COUCH_END_P",4.1,0,1,1,1,5);
			ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_W",4.1,0,1,1,1,5);
		}
		else
		{
			SendClientMessage(playerid,0xFF0000AA," ?? ??????? ??????!");
		}
		return 1;
	}
	
	if (strcmp(cmd, "/leaders", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_WHITE, "__________________?????? ??????___________________");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pLeader] > 0)
					{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						if(PlayerInfo[i][pLeader] == 1)
						{
						format(string, 256, " ???????: %s",giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 2)
						{
						format(string, 256, " ???: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 3)
						{
						format(string, 256, " ?????: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 4)
						{
						format(string, 256, " ???????????? ??????????????: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 5)
						{
						format(string, 256, " La Cosa Nostra: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 6)
						{
						format(string, 256, " Yakuza: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 7)
						{
						format(string, 256, " ?????: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 8)
						{
						format(string, 256, " ???????: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 9)
						{
						format(string, 256, " ?????????: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 10)
						{
						format(string, 256, " ????????: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 11)
						{
						format(string, 256, " ?????????: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 12)
						{
						format(string, 256, " Flaming Cobra Gang: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 13)
						{
						format(string, 256, " ??????? ?????: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 14)
						{
						format(string, 256, " Groove Street Gang: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 15)
						{
						format(string, 256, " El Coronos Gang: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 16)
						{
						format(string, 256, " The Ballas Gang: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 17)
						{
						format(string, 256, " The Rifa Gang: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 18)
						{
						format(string, 256, " Los Santos Vagos Gang: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 19)
						{
						format(string, 256, " ?????????: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 20)
						{
						format(string, 256, " Street Dogs: %s", giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
						else if(PlayerInfo[i][pLeader] == 21)
						{
						format(string, 256, " ?????? '??????????': %s",giveplayer);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						}
					}
				}
			}
		}
		return 1;
	}
	
	
	
//----------------------------------[HELP]-----------------------------------------------
	if(strcmp(cmd, "/help", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            format(string,sizeof(string),"???????\n????????\n???\n????\n??????\n???????\n??????\n?????\n???????\n???\n??????\n??????\n?????");
      		ShowPlayerDialog(playerid,1000,DIALOG_STYLE_LIST,"GPS",string,"??","??????");
		}
		return 1;
	}

//----------------------------------[HELP]-----------------------------------------------
	if(strcmp(cmd, "/cellphonehelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
			if (PlayerInfo[playerid][pPnumber] > 0)
			{
				SendClientMessage(playerid, COLOR_WHITE,"*** ?????? *** type a command for more help");
				SendClientMessage(playerid, COLOR_GRAD3,"*** ??????? *** /call /call 911 /sms (/p)ickup (/h)angup /number");
				SendClientMessage(playerid, COLOR_GRAD4,"*** ?????? ?????? *** /help /househelp /renthelp /businesshelp /leaderhelp /fishhelp /cookhelp /irchelp");
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE,"?? ?????? ?????? ?????????? ????? ? ???????? 24-7");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/househelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
			SendClientMessage(playerid, COLOR_WHITE,"*** ??????? ???? ***");
			SendClientMessage(playerid, COLOR_GRAD3,"*** ??? *** /enter /exit /open /home /heal /houseupgrade (/hu) /setrentable /tv (off/player)");
			SendClientMessage(playerid, COLOR_GRAD3,"*** ??? *** /carupgrade /carcolor /evictall /towcar /fixcar /modcar /modst /modlr /setrent /evict /housewithdraw");
			SendClientMessage(playerid, COLOR_GRAD4,"*** ?????? ?????? *** /cellphonehelp /help /renthelp /businesshelp /leaderhelp /fishhelp /cookhelp /irchelp");
		}
		return 1;
	}
	if(strcmp(cmd, "/renthelp", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
			SendClientMessage(playerid, COLOR_WHITE,"*** ?????? ?? ?????? ***");
			SendClientMessage(playerid, COLOR_GRAD3,"*** ?????? *** /unrent /enter /exit /lock /home");
			SendClientMessage(playerid, COLOR_GRAD4,"*** ?????? ?????? *** /cellphonehelp /househelp /help /businesshelp /leaderhelp /fishhelp /cookhelp /irchelp");
		}
		return 1;
	}
	if(strcmp(cmd, "/businesshelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
			SendClientMessage(playerid, COLOR_WHITE,"***??????? ???????***");
			SendClientMessage(playerid, COLOR_GRAD3,"*** ???????? *** /bizinfo (????) /bizfee /bizname /prodprice /extortion");
			SendClientMessage(playerid, COLOR_GRAD4,"*** ???????? *** /enter /exit /open /sellbiz (??????? ??????) /bizbank /bizwithdraw");
			SendClientMessage(playerid, COLOR_GRAD4,"*** ?????? ?????? *** /cellphonehelp /househelp /renthelp /help");
		}
		return 1;
	}
	if(strcmp(cmd, "/leaderhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pLeader] >= 1)
		    {
				SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
				SendClientMessage(playerid, COLOR_WHITE,"*** ??????? ?????? ***");
				SendClientMessage(playerid, COLOR_GRAD3,"*** ???????? *** /invite (??????) /uninvite (???????) /giverank (?????????, ????????? ?????) ");
				if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6)
				{
				    SendClientMessage(playerid, COLOR_GRAD3,"*** ?????? *** /allowcreation /deletecreation");
				}
				if(PlayerInfo[playerid][pLeader] == 7)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"*** ?????? *** /settax /givetax ");
				}
				SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/irchelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	        SendClientMessage(playerid, COLOR_WHITE,"*** IRC ?????? *** ");
	        SendClientMessage(playerid, COLOR_WHITE,"*** IRC *** (/irc join [channelnr] or /irc join [channelnr] [password])  (/irc leave)");
			SendClientMessage(playerid, COLOR_WHITE,"*** IRC *** (/irc Password [channelnr])  (/irc NeedPass [channelnr])  (/irc Lock [channelnr])");
			SendClientMessage(playerid, COLOR_WHITE,"*** IRC *** (/irc Admins)  (/irc MOTD [motdtext])  (/irc status [channelnr])  (/i [text])");
	    }
	    return 1;
	}
	if(strcmp(cmd, "/fishhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
			SendClientMessage(playerid, COLOR_WHITE,"*** ?????? ?? ???????????***");
			SendClientMessage(playerid, COLOR_GRAD3,"*** ??????? *** /fish /fishes");
			SendClientMessage(playerid, COLOR_GRAD3,"*** ??????? *** /throwback /throwbackall");
			SendClientMessage(playerid, COLOR_GRAD3,"*** ??????? *** /releasefish");
		}
		return 1;
	}
	if(strcmp(cmd, "/cookhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
			SendClientMessage(playerid, COLOR_WHITE,"***????????????? ???***");
			SendClientMessage(playerid, COLOR_GRAD3,"*** ?????? *** /cook /cooked ");
			SendClientMessage(playerid, COLOR_GRAD3,"*** ?????? *** /eat ");
		}
		return 1;
	}
	if(strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0)
    {
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "*1* ????????? *** /ao /checkweapons /name /check  /mute /kick /warn /ban /goto /cnn /a(dmin)chat");
			}
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				SendClientMessage(playerid, COLOR_GRAD2,"*2* ????????? *** /sban /skick /warn /skydive /setteam /bigears /cnn /freeze /unfreeze ");
			}
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				SendClientMessage(playerid, COLOR_GRAD3,"*3* ?????????***  /setskin  /crash /noooc  /gotols /jail /setjob");
				SendClientMessage(playerid, COLOR_GRAD4,"*3* ????????? *** /mark /gotomark /gotolv /gotosf /gethere /oldcar /gotocar /getcar");
			}
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD4,"*4* ????????? *** /explode /mole /logout /fuelcars /unbanip");
			    SendClientMessage(playerid, COLOR_GRAD4,"*4* ????????? *** /veh /fixveh /destroycars /forceskin ");
			    }
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
			    SendClientMessage(playerid, COLOR_GRAD4,"*5* ????????? *** /goto /gethere");
			    SendClientMessage(playerid, COLOR_GRAD4,"*5* ????????? *** /agivelicense ");
			}
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				SendClientMessage(playerid, COLOR_GRAD5,"*** 1337+ *** /weather /weatherall /startlotto /setname /payday /givevip");
			}
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
				SendClientMessage(playerid, COLOR_GRAD6,"***1338 *** ");
			}
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		}
		return 1;
	}
//----------------------------- Gravity -------------------------------------------
	/*if(strcmp(cmd,"/gravity",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 5000)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not an Admin !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
	            SendClientMessage(playerid, COLOR_WHITE, " ???????????: /gravity [value Default: 0.008]");
	            return 1;
			}
			new Float:gravity;
			floatstr(tmp);
			SetGravity(gravity);
			format(string, sizeof(string), "* Gravity changed to %f.",gravity);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		return 1;
	}*/
//------------------------------ Mission Making -----------------------------------
    if(strcmp(cmd,"/mk",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? Admin !");
	            return 1;
	        }
	        new x_mk[256];
			x_mk = strtok(cmdtext, idx);
			if(!strlen(x_mk)) {
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /mk [name]");
				SendClientMessage(playerid, COLOR_GREY, "????????? ????????: (/mk text [number] [text]) (/mk game [number] [text]) (/mk cp [number])");
				SendClientMessage(playerid, COLOR_GREY, "????????? ????????: (/mk title [text]) (/mk reward [price]) (/mk usecp)");
				return 1;
			}
	        if(strcmp(x_mk,"text",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(x_mk))
				{
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /mk text [number] [text]");
					return 1;
				}
				new number = strval(tmp);
				if(number < 1 || number > 18) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?? ????? ???? ???? 1 ??? ???? 18 !"); return 1; }
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/mk text [number] [text]");
					return 1;
				}
				switch(number)
				{
				    case 1:
				    {
						strmid(MissionInfo[mText1], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 1-?? ????????? ????? ??????.");
				    }
				    case 2:
				    {
				        strmid(MissionInfo[mText2], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 2-?? ????????? ????? ??????.");
				    }
				    case 3:
				    {
				        strmid(MissionInfo[mText3], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 3-?? ????????? ????? ??????.");
				    }
				    case 4:
				    {
				        strmid(MissionInfo[mText4], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 4-?? ????????? ????? ??????.");
				    }
				    case 5:
				    {
				        strmid(MissionInfo[mText5], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 5-?? ????????? ????? ??????.");
				    }
				    case 6:
				    {
				        strmid(MissionInfo[mText6], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 6-?? ????????? ????? ??????.");
				    }
				    case 7:
				    {
				        strmid(MissionInfo[mText7], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 7-?? ????????? ????? ??????.");
				    }
				    case 8:
				    {
				        strmid(MissionInfo[mText8], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 8-?? ????????? ????? ??????.");
				    }
				    case 9:
				    {
				        strmid(MissionInfo[mText9], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 9-?? ????????? ????? ??????.");
				    }
				    case 10:
				    {
				        strmid(MissionInfo[mText10], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 10-?? ????????? ????? ??????.");
				    }
				    case 11:
				    {
				        strmid(MissionInfo[mText11], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 11-?? ????????? ????? ??????.");
				    }
				    case 12:
				    {
				        strmid(MissionInfo[mText12], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 12-?? ????????? ????? ??????.");
				    }
				    case 13:
				    {
				        strmid(MissionInfo[mText13], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 13-?? ????????? ????? ??????.");
				    }
				    case 14:
				    {
				        strmid(MissionInfo[mText14], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 14-?? ????????? ????? ??????.");
				    }
				    case 15:
				    {
				        strmid(MissionInfo[mText15], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 15-?? ????????? ????? ??????.");
				    }
				    case 16:
				    {
				        strmid(MissionInfo[mText16], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 16-?? ????????? ????? ??????.");
				    }
				    case 17:
				    {
				        strmid(MissionInfo[mText17], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 17-?? ????????? ????? ??????.");
				    }
				    case 18:
				    {
				        strmid(MissionInfo[mText18], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 18-?? ????????? ????? ??????.");
				    }
				}
			}
			else if(strcmp(x_mk,"game",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(x_mk))
				{
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /mk game [number] [text]");
					return 1;
				}
				new number = strval(tmp);
				if(number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?? ????? ???? ???? 1 ??? ???? 6 !"); return 1; }
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/mk game [number] [text]");
					return 1;
				}
				switch(number)
				{
				    case 1:
				    {
				        strmid(MissionInfo[mGText1], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 1-?? ????????? ????? ???? ??????.");
				    }
				    case 2:
				    {
				        strmid(MissionInfo[mGText2], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 2-?? ????????? ????? ???? ??????.");
				    }
				    case 3:
				    {
				        strmid(MissionInfo[mGText3], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 3-?? ????????? ????? ???? ??????.");
				    }
				    case 4:
				    {
				        strmid(MissionInfo[mGText4], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 4-?? ????????? ????? ???? ??????.");
				    }
				    case 5:
				    {
				        strmid(MissionInfo[mGText5], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 5-?? ????????? ????? ???? ??????.");
				    }
				    case 6:
				    {
				        strmid(MissionInfo[mGText6], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 6-?? ????????? ????? ???? ??????.");
				    }
				}
			}
			else if(strcmp(x_mk,"cp",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(x_mk))
				{
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /mk cp [number]");
					return 1;
				}
			    new number = strval(tmp);
				if(number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?? ????? ???? ???? 1 ??? ???? 6 !"); return 1; }
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(playerid, X,Y,Z);
                switch(number)
				{
				    case 1:
				    {
				        MissionInfo[mCP1][0] = X; MissionInfo[mCP1][1] = Y; MissionInfo[mCP1][2] = Z;
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 1-?? ????? ??????????-??????????? ?????? ??????.");
				    }
				    case 2:
				    {
				        MissionInfo[mCP2][0] = X; MissionInfo[mCP2][1] = Y; MissionInfo[mCP2][2] = Z;
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 2-?? ????? ??????????-??????????? ?????? ??????.");
				    }
				    case 3:
				    {
				        MissionInfo[mCP3][0] = X; MissionInfo[mCP3][1] = Y; MissionInfo[mCP3][2] = Z;
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 3-?? ????? ??????????-??????????? ?????? ??????.");
				    }
				    case 4:
				    {
				        MissionInfo[mCP4][0] = X; MissionInfo[mCP4][1] = Y; MissionInfo[mCP4][2] = Z;
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 4-?? ????? ??????????-??????????? ?????? ??????.");
				    }
				    case 5:
				    {
				        MissionInfo[mCP5][0] = X; MissionInfo[mCP5][1] = Y; MissionInfo[mCP5][2] = Z;
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 5-?? ????? ??????????-??????????? ?????? ??????.");
				    }
				    case 6:
				    {
				        MissionInfo[mCP6][0] = X; MissionInfo[mCP6][1] = Y; MissionInfo[mCP6][2] = Z;
				        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? 6-?? ????? ??????????-??????????? ?????? ??????.");
				    }
				}
			}
			else if(strcmp(x_mk,"usecp",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(x_mk))
				{
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /mk usecp [0/1]");
					return 1;
				}
			    new toggle = strval(tmp);
				if(toggle == 0 || toggle == 1) { }
				else { SendClientMessage(playerid, COLOR_GREY, "   ????? ????????????? ??????????-??????????? ?????? ?????? ???? 0 (OFF) or 1 (ON) !"); return 1; }
				MissionInfo[mToggle] = toggle;
				if(toggle == 0) { SendClientMessage(playerid, COLOR_WHITE, "?? ?????????? ????????????? ??????????-?????????? ??????? ? 0 (OFF)."); }
				else if(toggle == 1) { SendClientMessage(playerid, COLOR_WHITE, "?? ?????????? ????????????? ??????????-?????????? ??????? ? 1 (ON)."); }
			}
			else if(strcmp(x_mk,"title",true) == 0)
			{
			    new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/mk title [text]");
					return 1;
				}
				strmid(MissionInfo[mTitle], result, 0, strlen(result), 255);
		        SendClientMessage(playerid, COLOR_WHITE, "?? ??????? ???????? ??????.");
			}
			else if(strcmp(x_mk,"reward",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(x_mk))
				{
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /mk reward [price]");
					return 1;
				}
			    new price = strval(tmp);
				if(price < 1 || price > 50000) { SendClientMessage(playerid, COLOR_GREY, "   ???? ?? ??????? ?? ????? ???? ???? 1 ??? ???? 50000 !"); return 1; }
				MissionInfo[mReward] = price;
				SendClientMessage(playerid, COLOR_WHITE, "?? ??????? ???? ?? ??????? ?? ??????.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   ???????????????? ???????? ???????? ?????? !");
				return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/savemission", true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /savemission [missionname]");
					return 1;
				}
				SaveMission(playerid,tmp);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ?????? ????? ??? ???????.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/loadmission", true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /loadmission [missionname]");
					return 1;
				}
				LoadMission(playerid,tmp);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ?????? ????? ??? ???????, ??????? ?? ???.");
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/stopani",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        ClearAnimations(playerid);
	    }
	    return 1;
	}
	if(strcmp(cmd,"/skill",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Skill Info __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "|         ???????????: /skill [number]           |");
		  		SendClientMessage(playerid, COLOR_GREY,  "| 1: ????????         |   6: ????????            |");
		  		SendClientMessage(playerid, COLOR_GREY,  "| 2: ???????          |   7: ????????            |");
		  		SendClientMessage(playerid, COLOR_GREY,  "| 3: ?????		    |   8: ??????????? ?????   |");
		  		SendClientMessage(playerid, COLOR_GREY,  "| 4: ?????????????    |   9: ??????              |");
		  		SendClientMessage(playerid, COLOR_GREY,  "| 5: ??????? ?????    |   10: ?????              |");
		  		SendClientMessage(playerid, COLOR_GREY,  "|                     |   11: ???                |");
				SendClientMessage(playerid, COLOR_WHITE, "|_____________________|__________________________|");
				return 1;
			}
		    if(strcmp(x_nr,"1",true) == 0)//Detective
			{
			    new level = PlayerInfo[playerid][pDetSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????????? ??????? ???????????? = 1."); format(string, sizeof(string), "??? ???????? ????? %d ??????? ????? ???????? ????????????", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????????? ??????? ???????????? = 2."); format(string, sizeof(string), "??? ???????? ????? %d ??????? ????? ???????? ????????????", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????????? ??????? ???????????? = 3."); format(string, sizeof(string), "??? ???????? ????? %d ??????? ????? ???????? ????????????", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????????? ??????? ???????????? = 4."); format(string, sizeof(string), "??? ???????? ????? %d ??????? ????? ???????? ????????????", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????????? ??????? ???????????? = 5."); }
			}
			else if(strcmp(x_nr,"2",true) == 0)//Lawyer
			{
			    new level = PlayerInfo[playerid][pLawSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ????? ?????? = 1."); format(string, sizeof(string), "??? ???????? ?????????? %d ??????? ????? ???????? ????????????", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ????? ?????? = 2."); format(string, sizeof(string), "??? ???????? ?????????? %d ??????? ????? ???????? ????????????", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ????? ?????? = 3."); format(string, sizeof(string), "??? ???????? ?????????? %d ??????? ????? ???????? ????????????", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ????? ?????? = 4."); format(string, sizeof(string), "??? ???????? ?????????? %d ??????? ????? ???????? ????????????", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ????? ?????? = 5."); }
			}
			else if(strcmp(x_nr,"3",true) == 0)//Whore
			{
			    new level = PlayerInfo[playerid][pSexSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ????? = 1."); format(string, sizeof(string), "??? ???????? ????????? ??? %d ??????? ????? ???????? ????????????", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ????? = 2."); format(string, sizeof(string), "??? ???????? ????????? ??? %d ??????? ????? ???????? ????????????", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ????? = 3."); format(string, sizeof(string), "??? ???????? ????????? ??? %d ??????? ????? ???????? ????????????", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ????? = 4."); format(string, sizeof(string), "??? ???????? ????????? ??? %d ??????? ????? ???????? ????????????", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ????? = 5."); }
			}
			else if(strcmp(x_nr,"4",true) == 0)//Drugs Dealer
			{
			    new level = PlayerInfo[playerid][pDrugsSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ???????? ??????????? = 1."); format(string, sizeof(string), "??? ???????? ??????? ??? %d ????? ????? ????? ???????? ????????????", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ???????? ??????????? = 2."); format(string, sizeof(string), "??? ???????? ??????? ??? %d ????? ????? ????? ???????? ????????????", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ???????? ??????????? = 3."); format(string, sizeof(string), "??? ???????? ??????? ??? %d ????? ????? ????? ???????? ????????????", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ???????? ??????????? = 4."); format(string, sizeof(string), "??? ???????? ??????? ??? %d ????? ????? ????? ???????? ????????????", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ???????? ??????????? = 5."); }
			}
			else if(strcmp(x_nr,"5",true) == 0)//Car Jacker
			{
			    new level = PlayerInfo[playerid][pJackSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??? ?????? ????? ?????? = 1."); format(string, sizeof(string), "??? ???????? ?????? ??? %d ????? ????? ???????? ????????????", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??? ?????? ????? ?????? = 2."); format(string, sizeof(string), "??? ???????? ?????? ??? %d ????? ????? ???????? ????????????", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??? ?????? ????? ?????? = 3."); format(string, sizeof(string), "??? ???????? ?????? ??? %d ????? ????? ???????? ????????????", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??? ?????? ????? ?????? = 4."); format(string, sizeof(string), "??? ???????? ?????? ??? %d ????? ????? ???????? ????????????", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??? ?????? ????? ?????? = 5."); }
			}
			else if(strcmp(x_nr,"6",true) == 0)//News Reporter
			{
			    new level = PlayerInfo[playerid][pNewsSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????? ??????? ???????????? ????????? = 1."); format(string, sizeof(string), "??? ???????? ????????? %d ???????? ????? ???????? ????????????", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????? ??????? ???????????? ????????? = 2."); format(string, sizeof(string), "??? ???????? ????????? %d ???????? ????? ???????? ????????????", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????? ??????? ???????????? ????????? = 3."); format(string, sizeof(string), "??? ???????? ????????? %d ???????? ????? ???????? ????????????", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????? ??????? ???????????? ????????? = 4."); format(string, sizeof(string), "??? ???????? ????????? %d ???????? ????? ???????? ????????????", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????? ??????? ???????????? ????????? = 5."); }
			}
			else if(strcmp(x_nr,"7",true) == 0)//Car Mechanic
			{
			    new level = PlayerInfo[playerid][pMechSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????????????? ??????? ???????????? ???????? = 1."); format(string, sizeof(string), "??? ???????? ???????????????/????????? ??? %d ????? ????? ???????? ????????????", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????????????? ??????? ???????????? ???????? = 2."); format(string, sizeof(string), "??? ???????? ???????????????/????????? ??? %d ????? ????? ???????? ????????????", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????????????? ??????? ???????????? ???????? = 3."); format(string, sizeof(string), "??? ???????? ???????????????/????????? ??? %d ????? ????? ???????? ????????????", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????????????? ??????? ???????????? ???????? = 4."); format(string, sizeof(string), "??? ???????? ???????????????/????????? ??? %d ????? ????? ???????? ????????????", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????????????? ??????? ???????????? ???????? = 5."); }
			}
			else if(strcmp(x_nr,"8",true) == 0)//Car Dealer
			{
			    new level = PlayerInfo[playerid][pCarSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ?????? ?? ??????? ???????? ??????????? = 1."); format(string, sizeof(string), "??? ???????? ??????? %d ????? ????? ???????? ????????????", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ?????? ?? ??????? ???????? ??????????? = 2."); format(string, sizeof(string), "??? ???????? ??????? %d ????? ????? ???????? ????????????", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ?????? ?? ??????? ???????? ??????????? = 3."); format(string, sizeof(string), "??? ???????? ??????? %d ????? ????? ???????? ????????????", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ?????? ?? ??????? ???????? ??????????? = 4."); format(string, sizeof(string), "??? ???????? ??????? %d ????? ????? ???????? ????????????", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ?????? ?? ??????? ???????? ??????????? = 5."); }
			}
			else if(strcmp(x_nr,"9",true) == 0)//Boxer
			{
			    new level = PlayerInfo[playerid][pBoxSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ????? = 1."); format(string, sizeof(string), "??? ???????? ?????? ??? %d ??????? ????? ???????? ????????????", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ????? = 2."); format(string, sizeof(string), "??? ???????? ?????? ??? %d ??????? ????? ???????? ????????????", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ????? = 3."); format(string, sizeof(string), "??? ???????? ?????? ??? %d ??????? ????? ???????? ????????????", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ????? = 4."); format(string, sizeof(string), "??? ???????? ?????? ??? %d ??????? ????? ???????? ????????????", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "??? ??????? ???????????? ????? = 5."); }
			}
			else if(strcmp(x_nr,"10",true) == 0)//Fishing
			{
			    new level = PlayerInfo[playerid][pFishSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "??? ???????? ??????? ???????????? = 1."); format(string, sizeof(string), "??? ???????? ??????? %d ??? ????? ???????? ????????????", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW, "??? ???????? ??????? ???????????? = 2."); format(string, sizeof(string), "??? ???????? ??????? %d ??? ????? ???????? ????????????", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "??? ???????? ??????? ???????????? = 3."); format(string, sizeof(string), "??? ???????? ??????? %d ??? ????? ???????? ????????????", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "??? ???????? ??????? ???????????? = 4."); format(string, sizeof(string), "??? ???????? ??????? %d ??? ????? ???????? ????????????", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW, "??? ???????? ??????? ???????????? = 5."); }
			}
			else if(strcmp(x_nr,"11",true) == 0)//Vor
			{
			    new level = PlayerInfo[playerid][pVorSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????? ???? ????? = 1."); format(string, sizeof(string), "??? ???????? ????????? ??? %d ????? ????? ???????? ????????????", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????? ???? ????? = 2."); format(string, sizeof(string), "??? ???????? ????????? ??? %d ????? ????? ???????? ????????????", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????? ???? ????? = 3."); format(string, sizeof(string), "??? ???????? ????????? ??? %d ????? ????? ???????? ????????????", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????? ????? = 4."); format(string, sizeof(string), "??? ???????? ????????? ??? %d ????? ????? ???????? ????????????", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "??? ????? ???? ????? = 5."); }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, " ???????????? ?????!");
			    return 1;
			}
	    }
	    return 1;
	}
	/*if(strcmp(cmd,"/agreementbroken",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_YELLOW, "Agreement Violation Security has been activated.");
	        Security = 1;
	        SaveStuff();
	        GameModeExit();
	    }
	    return 1;
	}*/
	if(strcmp(cmd, "/cks", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ????? !");
	            return 1;
	        }
	        new ck;
	        new number = 0;
	        new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
			    for(new i = 0; i < sizeof(CKInfo); i++)
			    {
					number ++;
					if(CKInfo[i][cUsed] != 0)
					{
				        format(string, sizeof(string), "%d| %s ????? ? ?????????, ??????? %s.",number,CKInfo[i][cSendername],CKInfo[i][cGiveplayer]);
				        SendClientMessage(playerid, COLOR_WHITE, string);
			        }
			    }
				return 1;
			}
		    if(strcmp(x_nr,"accept",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /cks accept [cknumber]");
					return 1;
				}
				ck = strval(tmp);
				if(ck < 1 || ck > 10) { SendClientMessage(playerid, COLOR_GREY, "   ????? CK ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
				ck -= 1;
				new found1 = 255;
				new found2 = 255;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(found1 != 255 && found2 != 255)
				        {
							new wstring[MAX_PLAYER_NAME];
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "%s", giveplayer);
							strmid(wstring, string, 0, strlen(string), 255);
							if(strcmp(CKInfo[ck][cSendername] ,wstring, true ) == 0 )
							{
							    found1 = i;
							}
							else if(strcmp(CKInfo[ck][cGiveplayer] ,wstring, true ) == 0 )
							{
							    found2 = i;
							}
						}
					}
				}
				if(found1 != 255 && found2 != 255)
    			{
    			    GetPlayerName(found2, giveplayer, sizeof(giveplayer));
    			    format(string, sizeof(string), "* Admin ???????, ??? ??? ???????? ???????, ?? ?????? ?????? ????????? ???? ???????? ?? %s.", giveplayer);
    			    SendClientMessage(found1, COLOR_LIGHTBLUE, string);
    			    OnCK[found1] = found2;
    			    GettingCK[found2] = found1;
    			    return 1;
    			}
    			else
    			{
    			    SendClientMessage(playerid, COLOR_YELLOW2, "????, ?????? ??? Dieer ?? ??????.");
    			    return 1;
    			}
			}
			else if(strcmp(x_nr,"delete",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /cks delete [cknumber]");
					return 1;
				}
				ck = strval(tmp);
				if(ck < 1 || ck > 10) { SendClientMessage(playerid, COLOR_GREY, "   ????? CK ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
				ck -= 1;
				ClearCK(ck);
				ck += 1;
				format(string, sizeof(string), "* ?? ??????????, ???????? ??????? ?????: %d", ck);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ???????????????? CK ????????? ????????? !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/ck", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLevel] < 5)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ???? ??????? 5, ????? ???????, ????? ???????? ???? !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /ck [playerid/PartOfName]");
				return 1;
			}
	        giveplayerid = ReturnUser(tmp);
	        if(IsPlayerConnected(giveplayerid))
	        {
	            if(giveplayerid != INVALID_PLAYER_ID)
	            {
	                if(PlayerInfo[giveplayerid][pAdmin] >= 1)
	                {
	                    SendClientMessage(playerid, COLOR_GREY, "   ?? ????? ????????? ???????? ??????? ?? Admins !");
	                    return 1;
	                }
	                else if(PlayerInfo[giveplayerid][pLevel] < 5)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ???????, ???????? ?? ?????? ? ???????? ?????????, ?????? ???? ??????? 5 !");
			            return 1;
			        }
					ABroadCast(COLOR_YELLOW, "* ????? ???????? ??????? ??????, ?????, ???????????? /cks.", 3);
					new found = 0;
					for(new i = 0; i < sizeof(CKInfo); i++)
			    	{
			    	    if(found != 1)
			    	    {
							if(CKInfo[i][cUsed] != 1)
							{
							    found = 1;
							    GetPlayerName(playerid, sendername, sizeof(sendername));
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							    format(string, sizeof(string), "%s", sendername);
							    strmid(CKInfo[i][cSendername], string, 0, strlen(string), 255);
							    format(string, sizeof(string), "%s", giveplayer);
								strmid(CKInfo[i][cGiveplayer], string, 0, strlen(string), 255);
								CKInfo[i][cUsed] = 1;
								SaveCK();
							}
						}
			    	}
			    	if(found != 1)
			    	{
			    	    SendClientMessage(playerid, COLOR_YELLOW2, "????, ???? ???????? ??????? ????, ????????????, ?????????? ??? ??? ?????.");
			    	}
			    	else
			    	{
			    	    SendClientMessage(playerid, COLOR_YELLOW2, "??? ???????? ??????? ??????, ??? ???????? ? ??????, ?? ????? ???????? ???????? ?? Admin.");
			    	}
			    	return 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/givelicense", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAnInstructor(playerid))
         {
	            if(PlayerInfo[playerid][pRank] < 3 || PlayerInfo[playerid][pLeader] == 11)
         	   {
	                SendClientMessage(playerid, COLOR_GREY, "   ?????? ?????? 3 ??? ???? ????? ?????? ???????? !");
	                return 1;
	            }
	            new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
				    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /givelicense [name] [playerid/PartOfName]");
				    SendClientMessage(playerid, COLOR_WHITE, "????????? ????????: Driving, Flying, Sailing, Fishing, Weapon.");
					return 1;
				}
			    if(strcmp(x_nr,"driving",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /givelicense driverslicense [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* ?? ???? ???????? ?? ????? %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ????????????? %s ??? ??? ????????? ?????.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pCarLic] = 1;
					        return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"flying",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /givelicense flyinglicense [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* ?? ???? ???????? ?? ?????? %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ????????????? %s ??? ??? ???????? ?? ??????.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFlyLic] = 1;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"sailing",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /givelicense sailinglicense [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* ?? ???? ???????? ?? ????? %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ???????? %s ??? ???????? ?? ?????.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pBoatLic] = 1;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"fishing",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /givelicense fishinglicense [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* ?? ?????? ???????? ?? ??????????? %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ????????????? %s ??? ??? ???????? ?? ???????????.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFishLic] = 1;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"weapon",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /givelicense weaponlicense [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* ?? ???? ??? ???????? ?????? %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ????????????? %s ??? ??? ???????? ??????.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pGunLic] = 1;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, " ?? ?? ????????.");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/takelicense", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAnInstructor(playerid))
         	{
	            if(PlayerInfo[playerid][pRank] < 3 || PlayerInfo[playerid][pLeader] == 11)
         	   {
	                SendClientMessage(playerid, COLOR_GREY, "   ?????? ?????? 3 ??? ???? ????? ?????? ???????? !");
	                return 1;
	            }
	            new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
				    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /takelicense [name] [playerid/PartOfName]");
				    SendClientMessage(playerid, COLOR_WHITE, "????????? ????????: Driving, Flying, Sailing, Fishing, Weapon.");
					return 1;
				}
			    if(strcmp(x_nr,"driving",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /takelicense driving [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* ?? ??????? ???????? ?? ????? %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ????????????? %s ?????? ? ??? ???????????? ?????.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pCarLic] = 0;
					        return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"flying",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /takelicense flying [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* ?? ??????? ???????? ?? ?????? %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ????????????? %s ?????? ? ??? ???????? ?? ??????.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFlyLic] = 0;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"sailing",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /takelicense sailing [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* ?? ??????? ???????? ?? ????? %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ???????? %s ?????? ? ??? ???????? ?? ?????.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pBoatLic] = 0;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"fishing",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /takelicense fishing [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* ?? ??????? ???????? ?? ??????????? %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ????????????? %s ?????? ? ??? ???????? ?? ???????????.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFishLic] = 0;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"weapon",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /takelicense weapon [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* ?? ??????? ???????? ?????? %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ????????????? %s ?????? ? ??? ???????? ??????.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pGunLic] = 0;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, " ?? ?? ????????.");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/startlesson", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAnInstructor(playerid))
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /startlesson [playerid/PartOfName]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* ?? ?????? ? %s's ????.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* ????????????? %s ????? ??? ????.",sendername);
				        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        TakingLesson[giveplayerid] = 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "???? ??? ?? ? ????.");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "?? ?? ????????.");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/stoplesson", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAnInstructor(playerid))
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /stoplesson [playerid/PartOfName]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(TakingLesson[giveplayerid] != 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "???? ??? ?? ?????.");
				            return 1;
				        }
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* ?? ?????????? ? %s's ????.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* ???????? %s ????????? ????.",sendername);
				        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        TakingLesson[giveplayerid] = 0;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "???? ??? ??? ????.");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "?? ?? ????????.");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/families", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    new number = 0;
		        for(new i = 0; i < sizeof(FamilyInfo); i++)
		        {
		            number ++;
		            format(string, sizeof(string), "????? %d | ????????: %s | ?????: %s | ?????????: %d.",number,FamilyInfo[i][FamilyName],FamilyInfo[i][FamilyLeader],FamilyInfo[i][FamilyMembers]);
		            SendClientMessage(playerid, COLOR_WHITE, string);
		        }
		        return 1;
	        }
	        new family = strval(tmp);
	        if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "   ????? ????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
			family -= 1;
			if(FamilyInfo[family][FamilyTaken] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ????? ????? ??? ?? ???? ????? !");
			    return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(PlayerInfo[i][pFMember] == family)
			        {
			            GetPlayerName(i, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "* ????? %d: %s | ??????: %d.",family,giveplayer,PlayerInfo[i][pRank]);
			            SendClientMessage(playerid, COLOR_GREY, string);
			        }
			    }
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/adjust", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pFMember] == 255)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????????? ? ????? !");
	            return 1;
	        }
	        new family = PlayerInfo[playerid][pFMember];
	        new wstring[128];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s", sendername);
			strmid(wstring, string, 0, strlen(string), 255);
	        if(strcmp(FamilyInfo[family][FamilyLeader],wstring, true ) == 0 )
			{
			    new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /adjust [name]");
					SendClientMessage(playerid, COLOR_WHITE, "????????? ????????: Name, MOTD, Color, Spawn, Invite, Uninvite, Rank");
					return 1;
				}
			    if(strcmp(x_nr,"name",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /adjust Name [Family Name]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyName], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, "?? ???????????? ??? ????? ?????.");
				}
				else if(strcmp(x_nr,"motd",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /adjust MOTD [Family MOTD Text]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyMOTD], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, "?? ???????????? MOTD ????? ?????.");
				}
				else if(strcmp(x_nr,"color",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /adjust color [Family Color Sample: 0xFFFFFFAA]");
						return 1;
					}
					if(offset < 10)
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??????????? ??????? ?????, ???????? ?? ??????? ! (0xFFFFFFAA)");
					    return 1;
					}
					strmid(FamilyInfo[family][FamilyMOTD], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, "?? ???????????? ???? ????? ?????.");
				}
				else if(strcmp(x_nr,"spawn",true) == 0)
				{
				    GetPlayerPos(playerid, FamilyInfo[family][FamilySpawn][0],FamilyInfo[family][FamilySpawn][1],FamilyInfo[family][FamilySpawn][2]);
				    GetPlayerFacingAngle(playerid, FamilyInfo[family][FamilySpawn][3]);
				    FamilyInfo[family][FamilyInterior] = GetPlayerInterior(playerid);
				    SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, "?? ???????????? Spawnplace ????? ?????.");
				}
				else if(strcmp(x_nr,"invite",true) == 0)
				{
				    if(FamilyInfo[family][FamilyMembers] >= 10)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ???? ????? ???????? ????????? 10 ?????? ?????, ?? ????? ?????????? ?????? !");
				        return 1;
				    }
					tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /adjust invite [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pFMember] != 255)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ??? ????????? ? ????? !");
					            return 1;
					        }
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(string, sizeof(string), "* ?? ?????????? %s ?????????????? '%s'.",giveplayer, FamilyInfo[family][FamilyName]);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* %s ????????? ??? ?????????????? ? '%s', ?? - ?????? ???? ???.",sendername, FamilyInfo[family][FamilyName]);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFMember] = family;
					        PlayerInfo[giveplayerid][pRank] = 1;
					        FamilyInfo[family][FamilyMembers] ++;
					        SaveFamilies();
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"uninvite",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /adjust uninvite [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pFMember] != family)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????????? ? ????? ????? !");
					            return 1;
					        }
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(string, sizeof(string), "* ?? ??????? %s ?? ????? ?????.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ???????? ????? %s ???? ??? ?? ?????.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFMember] = 255;
					        PlayerInfo[giveplayerid][pRank] = 0;
					        FamilyInfo[family][FamilyMembers] --;
					        SaveFamilies();
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"rank",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /adjust rank [RankNr] [playerid/PartOfName]");
					    return 1;
					}
					new rank = strval(tmp);
					if(rank < 1 || rank > 6) { SendClientMessage(playerid, COLOR_GREY, "   ?????? ????? ?? ????? ???? ???? 1 ??? ???? 6 !"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /adjust rank [RankNr] [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pFMember] != family)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????????? ? ????? ????? !");
					            return 1;
					        }
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(string, sizeof(string), "* ?? ???? ?????? %s %d.",giveplayer,rank);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ???????? ????? %s ??? ??? ?????? %d.",sendername,rank);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pRank] = rank;
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "????? ???? ??? ? ????.");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ??????? ?????????? ???????? !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ????? ????? ????? !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/allowcreation", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /allowcreation [FamilyNr] [playerid/PartOfName]");
					return 1;
				}
				new family = strval(tmp);
				if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "   ????? ????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
				if(PlayerInfo[playerid][pLeader] == 5 && family > 5) { SendClientMessage(playerid, COLOR_GREY, "   La ????? ???? ?????? ????? ?????? ????? ????? ????? 1 ?? 5 !"); return 1; }
				else if(PlayerInfo[playerid][pLeader] == 6 && family < 6) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? ????? ?????? ????? ????? ????? 6 ?? 10 !"); return 1; }
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /allowcreation [FamilyNr] [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        family -= 1;
				        if(FamilyInfo[family][FamilyTaken] == 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   ?? ????? ????? ??? ????? !" );
				            return 1;
				        }
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* ?? ??????? %s ??????? ????? ????? %d.",giveplayer,family);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        if(PlayerInfo[playerid][pLeader] == 5)
				        {
				            format(string, sizeof(string), "* La ????? ???? ?????? %s ?????? ??? ???????? ??????? ????? ????? %d.",sendername,family);
				        	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        }
				        else if(PlayerInfo[playerid][pLeader] == 6)
				        {
				            format(string, sizeof(string), "* ????? ?????? %s ?????? ??? ???????? ??????? ????? ????? %d.",sendername,family);
				        	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        }
				        format(string, sizeof(string), "%s",giveplayer);
				        strmid(FamilyInfo[family][FamilyLeader], string, 0, strlen(string), 255);
				        FamilyInfo[family][FamilyMembers] ++;
				        FamilyInfo[family][FamilyTaken] = 1;
				        PlayerInfo[giveplayerid][pFMember] = family;
				        SaveFamilies();
				    }
				}
				else
				{
                    SendClientMessage(playerid, COLOR_GREY, " ??? ??? ??? ?? ???????? id.");
                    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ????? ????? ?? ??????????? !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/deletecreation", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /deletecreation [FamilyNr]");
					return 1;
				}
				new family = strval(tmp);
				if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "   ????? ????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
				if(PlayerInfo[playerid][pLeader] == 5 && family > 5) { SendClientMessage(playerid, COLOR_GREY, "   La ????? ???? ?????? ????? ?????? ????? ????? ????? 1 ?? 5 !"); return 1; }
				else if(PlayerInfo[playerid][pLeader] == 6 && family < 6) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? ????? ?????? ????? ????? ????? 6 ?? 10 !"); return 1; }
				family -= 1;
				if(FamilyInfo[family][FamilyTaken] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ????? ????? ?? ????? !");
				    return 1;
				}
				ClearFamily(family);
				SaveFamilies();
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ????? ????? ?? ??????????? !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/ram", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(gTeam[playerid] == 2 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 10)
            {
                for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
					    SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						GameTextForPlayer(playerid, "~r~Breached the door", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
					}
				}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??? / ?????? !");
			    return 1;
            }
		}
		return 1;
	}
	if(strcmp(cmd, "/camera", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(IsACop(playerid))
            {
                if(!PlayerToPoint(8.0,playerid,211.6222,1811.9565,21.8594))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ? ?????? ???????????? Area51 !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /camera [number 1 - 6]  (6 = OFF)");
					return 1;
				}
				new number = strval(tmp);
				if(number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? ?? ????? ???? ???? 1 ??? ???? 6 !"); return 1; }
				TogglePlayerControllable(playerid, 0);
				GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
				if(number == 1) { SetPlayerCameraPos(playerid, 118.1011,1931.3221,22.5527); SetPlayerCameraLookAt(playerid, 98.9656,1920.9819,18.2180); }
				else if(number == 2) { SetPlayerCameraPos(playerid, 213.5340,1875.3075,17.6406); SetPlayerCameraLookAt(playerid, 213.8679,1884.1714,13.8945); }
				else if(number == 3) { SetPlayerCameraPos(playerid, 266.0640,1894.8856,38.6459); SetPlayerCameraLookAt(playerid, 224.0039,1887.1532,17.6406); }
				else if(number == 4) { SetPlayerCameraPos(playerid, 260.8112,1808.0175,38.6303); SetPlayerCameraLookAt(playerid, 227.5645,1818.4778,17.6406); }
				else if(number == 5) { SetPlayerCameraPos(playerid, 114.5196,1814.3483,38.6029); SetPlayerCameraLookAt(playerid, 123.6176,1846.4792,17.6549); }
				else if(number == 6)
				{
				    MedicBill[playerid] = 0;
					TogglePlayerControllable(playerid, 1);
					SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(playerid);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "?? ?? ????? / ?????? !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/divorce",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMarried] < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????? !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /divorce [Playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ?????????? ??? ???????????????!"); return 1; }
					    new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s", giveplayer);
						strmid(wstring, string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
						strmid(dstring, string, 0, strlen(string), 255);
						if(strcmp(dstring ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "* ?? ??????? ?????? ??????? ? %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s ?????? ????????? ??? ??? ?????? ??????? (??? /accept divorce) ????? ???????.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        DivorceOffer[giveplayerid] = playerid;
					        return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ?? ??? !");
						    return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ??? !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, " ???? ??? ?? ?? ?????.");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/propose",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(GetPlayerMoney(playerid) < 100000)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ???? & ????? ????? 100000$ !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMarried] > 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ??? ?????? !");
				return 1;
	        }
	        if(PlayerInfo[playerid][pPhousekey] == 255)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ????, ????? ????????? ????? ???? / ???, ???? ???-?????? !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /propose [Playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pMarried] > 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ??? ????? !");
			            return 1;
			        }
			        if(PlayerInfo[giveplayerid][pPhousekey] != 255)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ? ???? ?????? ???? ???, ?? ????? ???? ??????? !");
			            return 1;
			        }
			        if(PlayerInfo[giveplayerid][pPbiskey] != 255)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ? ???? ?????? ???? ??????, ?? ????? ???? ??????? !");
			            return 1;
			        }
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ?????????? ??? ???????????????!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* ?? ?????????? %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s ?????? ???????????? ??? (??? /accept marriage) ????? ???????.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        ProposeOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ??? !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd,"/witness",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /witness [Playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ?????????? ??? ???????????????!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* ?? ??????? %s ???? ????? ?????????? ?????.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s ?????? ????????? ??, ????? ???? ??? ?????????? ????? (??? /accept witness) ????? ???????.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        MarryWitnessOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ??? !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd,"/irc",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: (/irc join [channelnr] or /irc join [channelnr] [password])  (/irc Leave)  (/irc Admins)");
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /irc [name] [channelnr]");
				SendClientMessage(playerid, COLOR_WHITE, "????????? ????????: MOTD, Password, NeedPass, Lock, Kick, Status");
				return 1;
			}
		    if(strcmp(x_nr,"join",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /irc join [channelnr] or /irc join [channelnr] [password]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
				channel -= 1;
			    if(IRCInfo[channel][iLock] == 0)
			    {
			        if(IRCInfo[channel][iNeedPass] == 0)
			        {
			            JoinChannelNr(playerid, channel);
				    }
				    else
				    {
				        tmp = strtok(cmdtext, idx);
				        if(!strlen(tmp))
						{
						    SendClientMessage(playerid, COLOR_WHITE, "???? ??????, ????????? ?????????????? ? ????? ??????.");
							SendClientMessage(playerid, COLOR_WHITE, " ???????????: /irc join [channelnr] [password]");
							return 1;
						}
						JoinChannel(playerid,channel,tmp);
				    }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ??????, ?????????? ???????? ????????? !");
				    return 1;
			    }
			}
			else if(strcmp(x_nr,"status",true) == 0)
			{
			    for(new i = 0; i < sizeof(IRCInfo); i++)
			    {
			        format(string, sizeof(string), "????? %d: ????????? ?????? %d.",i + 1, IRCInfo[i][iPlayers]);
				    SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"password",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /irc password [channelnr] [password]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
				channel -= 1;
				new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /irc password [channelnr] [password]");
					    return 1;
					}
					strmid(IRCInfo[channel][iPassword], tmp, 0, strlen(tmp), 255);
					format(string, sizeof(string), "?? ???????? ?????? ?????? IRC ??: %s.",IRCInfo[channel][iPassword]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? Admin ???? ?????? !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"needpass",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /irc needpass [channelnr]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
				channel -= 1;
				new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    if(IRCInfo[channel][iNeedPass] != 0)
				    {
				        IRCInfo[channel][iNeedPass] = 0;
				        SendClientMessage(playerid, COLOR_YELLOW, "?????? ?? ?????? ????? ??????????? ? ??????, ????? ?????????????? ? ?????? IRC ??????.");
				    }
					else
					{
					    IRCInfo[channel][iNeedPass] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "?????? ?????? ??????????? ? ??????, ????? ?????????????? ? ?????? IRC ??????.");
					}
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? Admin ???? ?????? !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"lock",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /irc lock [channelnr]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
				channel -= 1;
				new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    if(IRCInfo[channel][iLock] != 0)
				    {
				        IRCInfo[channel][iLock] = 0;
				        SendClientMessage(playerid, COLOR_YELLOW, "?? ??????? ????? IRC.");
				    }
					else
					{
					    IRCInfo[channel][iLock] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "?? ????????? ????? IRC.");
					}
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? Admin ???? ?????? !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"motd",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /irc motd [channelnr] [motdtext]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
				channel -= 1;
				new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /irc motd [motdtext]");
						return 1;
					}
					strmid(IRCInfo[channel][iMOTD], result, 0, strlen(result), 255);
					SendClientMessage(playerid, COLOR_YELLOW, "?? ???????????? ????? ?????? IRC MOTD.");
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? Admin ???? ?????? !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"leave",true) == 0)
			{
			    if(PlayersChannel[playerid] < 999)
			    {
			        GetPlayerName(playerid, sendername, sizeof(sendername));
			        format(string, sizeof(string), "* %s ??????? ?????.", sendername);
			        SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
			        IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
			        PlayersChannel[playerid] = 999;
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????????? ? ?????? IRC !");
			        return 1;
			    }
			}
			else if(strcmp(x_nr,"admins",true) == 0)
			{
				for(new i = 0; i < sizeof(IRCInfo); i++)
			    {
				    format(string, sizeof(string), "????? %d: %s.", i + 1, IRCInfo[i][iAdmin]);
				    SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"kick",true) == 0)
			{
			    if(PlayersChannel[playerid] == 999)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????????? ? ?????? IRC !");
			        return 1;
			    }
			    new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[PlayersChannel[playerid]][iAdmin],wstring, true ) == 0 )
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /irc kick [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayersChannel[giveplayerid] == PlayersChannel[playerid])
					        {
					            GetPlayerName(playerid, sendername, sizeof(sendername));
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "* ?? ??????? %s ?? ?????? ?????? IRC.",giveplayer);
					            SendClientMessage(playerid, COLOR_YELLOW, string);
					            format(string, sizeof(string), "* ?? ???? ????????? ?????? IRC ??????? Admin: %s.",sendername);
					            SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					            format(string, sizeof(string), "* %s ????? ????? (??????).", sendername);
						        SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
					            IRCInfo[PlayersChannel[giveplayerid]][iPlayers] -= 1;
					            PlayersChannel[giveplayerid] = 999;
					        }
					        else
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????????? ? ????? ?????? IRC !");
							    return 1;
					        }
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? !");
					    return 1;
					}
                }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? Admin ?????? !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ???????????????? ????? ?????? IRC ! ");
			    return 1;
			}
		}
		return 1;
 	}
 	if(strcmp(cmd,"/i",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayersChannel[playerid] == 999)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????????? ? ?????? IRC !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "?? ?? ?????? ????????, ?? ???? ?????????? ?????????");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /i [irc chat]");
				return 1;
			}
			format(string, sizeof(string), "** IRC %s: %s. **", sendername, result);
			SendIRCMessage(PlayersChannel[playerid], COLOR_YELLOW2, string);
	    }
	    return 1;
	}
	if(strcmp(cmd,"/mission",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
			if(!PlayerToPoint(3.0,playerid,1381.0413,-1088.8511,27.3906))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ? ?????? ????? !");
			    return 1;
			}
			if(MissionPlayable == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ??????? ?????? ?? ???? ?????????????? !");
			    return 1;
			}
			if(PlayerInfo[playerid][pMissionNr] == MissionPlayable)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ??? ????????? ???????? ?????? !");
			    return 1;
			}
			RingTone[playerid] = 20;
			PlayerOnMission[playerid] = PlayMission[kNumber];
			MissionCheckpoint[playerid] = 1;
			format(string, sizeof(string), "~w~Mission started: ~n~~r~%s", PlayMission[kTitle]);
			GameTextForPlayer(playerid, string, 5000, 3);
			format(string, sizeof(string), "%s", PlayMission[kText1]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			format(string, sizeof(string), "%s", PlayMission[kText2]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			format(string, sizeof(string), "%s", PlayMission[kText3]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			if(PlayMission[kToggle] == 1)
			{
				SetPlayerCheckpoint(playerid, PlayMission[kCP1][0], PlayMission[kCP1][1], PlayMission[kCP1][2], 8);
			}
        }
        return 1;
    }
	if(strcmp(cmd,"/settax",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, " ?? ?? ???!");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /settax [ammount]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 5000) { SendClientMessage(playerid, COLOR_GREY, "   ?????, ????????, ?? ???? 1 ??? ?? ???? 5000 !"); return 1; }
			Tax = moneys;
			SaveStuff();
			format(string, sizeof(string), "* ????? - $%d ?? ??????, ? ????? ???????.", Tax);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    }
	    return 1;
	}
	if(strcmp(cmd,"/givetax",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??? !");
				return 1;
	        }
	        if(Tax < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ??? ??????? ?????, ??????????? ? ?????????!");
				return 1;
			}
			new Cops = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(gTeam[i] == 2 && PlayerInfo[i][pMember] == 1)
			        {
			            Cops += 1;
			        }
			    }
			}
			if(Cops >= 1)
			{
			    new value = Tax / 2;
			    new price = value / Cops;
			    for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(gTeam[i] == 2 && PlayerInfo[i][pMember] == 1)
				        {
				            format(string, sizeof(string), "* ?? ???????? $%d ?? ????.",price);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
							GivePlayerMoney(i, price);
							Tax -= price;
				        }
				    }
				}
				SaveStuff();
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "?????? ? ????????? ????? ??? ??????????? !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/read",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /read [name]");
				SendClientMessage(playerid, COLOR_GREY, "????????? ????????: Paper, TestPaper");
				return 1;
			}
	        if(strcmp(x_job,"paper",true) == 0)
			{
			    if(GotPaper[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "|_______________ ?????????? ?? ????? - ???????? ????: ?????? _______________|");
			        format(string, sizeof(string), "| %s  |  ?????????? ????????: %s.",Paper[playerid][pTitle],Paper[playerid][pMaker]);
			        SendClientMessage(playerid, COLOR_GREEN, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine1]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine2]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine3]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine4]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine5]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine6]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine7]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________________________|");
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, " ?? ?? ?????????.");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"testpaper",true) == 0)
			{
			    if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			    {
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, " ???????????: /read testpaper [papernr]");
						return 1;
					}
					new paper = strval(tmp);
					if(paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   ???????? ????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
					paper -= 1;
					if(PaperInfo[paper][PaperUsed] == 0)
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ??????? ??????, ?????????? ?? ??? ????? !");
					    return 1;
					}
			        SendClientMessage(playerid, COLOR_WHITE, "|_______________ ??????? _______________|");
			        format(string, sizeof(string), "| %s  |  ?????????? ????????: %s.",PaperInfo[paper][PaperTitle],PaperInfo[paper][PaperMaker]);
			        SendClientMessage(playerid, COLOR_GREEN, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText1]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText2]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText3]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText4]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText5]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText6]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText7]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________________________|");
			        return 1;
				}
				else
				{
        			SendClientMessage(playerid, COLOR_GREY, "?? ?? ????????.");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /read testpaper [papernr]");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/deliver", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] == 15 || gTeam[playerid] == 2 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 10)
	        {
	            if(gTeam[playerid] == 2 || IsACop(playerid))
	            {
	                if(!PlayerToPoint(8.0,playerid,96.9123,1920.5088,18.1473))
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ? ??????? 51 ?????? ???????? !");
					    return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /deliver [playerid/PartOfName]");
						return 1;
					}
			        giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Can't throw yourself into Fort DeMorgan !"); return 1; }
					        if(WantedLevel[giveplayerid] < 1) { SendClientMessage(playerid, COLOR_GREY, "   The player needs at least Wanted Level 1 to be thrown into Fort DeMorgan !"); return 1; }
					        if(gTeam[giveplayerid] == 2 || PlayerInfo[giveplayerid][pLeader] == 6 || PlayerInfo[giveplayerid][pLeader] == 10) { return 1; }
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* You've brought %s to Fort DeMorgan.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s brought you to Fort DeMorgan.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~w~Welcome to ~n~~r~Fort DeMorgan", 5000, 3);
								WantedPoints[giveplayerid] = 0;
								WantedLevel[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pJailed] = 2;
								PlayerInfo[giveplayerid][pJailTime] = 7200;
								SetPlayerPos(giveplayerid, 107.2300,1920.6311,18.5208);
								SetPlayerWorldBounds(giveplayerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ????? ?? ????? ??? !");
					    	return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? !");
					    return 1;
					}

	            }
	            else if(PlayerInfo[playerid][pJob] == 15)
	            {
			        if(BringingPaper[playerid] != 1)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??????? ?????? ?? ?????????? ???????? ???, ???????? !");
			            return 1;
			        }
			        tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /deliver [playerid/PartOfName]");
						return 1;
					}
			        giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* You offerd one of your Newspapers to %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* ????????? ????? %s ????? ???? ??? ?????? (????????????? /accept paper, ????? ???????).", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PaperOffer[giveplayerid] = playerid;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ????? ?? ????? ??? !");
					    	return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "???? ??? ??? ????.");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ????????? ????? !");
	            return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bring", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 15)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ????????? ????? !");
	            return 1;
	        }
			if(PlayerToPoint(3.0,playerid,-2050.8962,460.0262,35.1719))
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /bring [papernr]");
					return 1;
				}
		        new paper = strval(tmp);
		        if(paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   ???????? ????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
				paper -= 1;
				if(PaperInfo[paper][PaperUsed] == 0)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ??? ????? ??? ??????? ?????????? ?????? !");
				    return 1;
				}
		        GetPlayerName(playerid, sendername, sizeof(sendername));
		        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		        format(string, sizeof(string), "* ?? ?????? ?????? ????????? ?????? ?????, ??????: %s,: %s.",PaperInfo[paper][PaperTitle],PaperInfo[paper][PaperMaker]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperTitle]);
				strmid(Paper[playerid][pTitle], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperMaker]);
				strmid(Paper[playerid][pMaker], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText1]);
				strmid(Paper[playerid][pLine1], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText2]);
				strmid(Paper[playerid][pLine2], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText3]);
				strmid(Paper[playerid][pLine3], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText4]);
				strmid(Paper[playerid][pLine4], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText5]);
				strmid(Paper[playerid][pLine5], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText6]);
				strmid(Paper[playerid][pLine6], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText7]);
				strmid(Paper[playerid][pLine7], string, 0, strlen(string), 255);
				BringingPaper[playerid] = 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ? ?????? ????????? ???????? !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/papers", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pJob] == 15)
	        {
				if(PlayerToPoint(3.0,playerid,-2050.8962,460.0262,35.1719))
				{
				    new number = 0;
				    for(new i = 0; i < sizeof(PaperInfo); i++)
				    {
				        number ++;
				        if(PaperInfo[i][PaperUsed] == 1)
				    	{
				        	format(string, sizeof(string), "|%d| Newspaper: %s, By: %s",number,PaperInfo[i][PaperTitle],PaperInfo[i][PaperMaker]);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ? ?????? ????????? ???????? !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ????????? ????? / ???????? ???????? !");
	            return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/paper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
	        {
	            if(!PlayerToPoint(3.0,playerid,-2050.8962,460.0262,35.1719))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ? ?????? ????????? ???????? !");
				    return 1;
				}
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /paper write [papernr] or /paper delete [papernr]");
				    return 1;
				}
			    if(strcmp(x_nr,"write",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /paper write [papernr]");
					    return 1;
					}
					new paper = strval(tmp);
					if(paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   ???????? ????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
					paper -= 1;
					if(PaperInfo[paper][PaperUsed] == 1)
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ?? ??? ????? ??? ???? ?????? !");
					    return 1;
					}
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ??????.");
					SendClientMessage(playerid, COLOR_LIGHTRED, "* ???, ??? ?? ????????? ??????, ????? ????????? ? ??????, ?? ?????? 7 ????? ? ???????.");
					SendClientMessage(playerid, COLOR_LIGHTRED, "* ?????????? ??????????? ? ???????? ????? ??????.");
					WritingPaper[playerid] = 1;
					WritingPaperNumber[playerid] = paper;
					WritingLine[playerid] = 1;
				}
				else if(strcmp(x_nr,"delete",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 4)
				    {
				        tmp = strtok(cmdtext, idx);
					    if(!strlen(tmp))
						{
						    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /paper delete [papernr]");
						    return 1;
						}
						new paper = strval(tmp);
						if(paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   ???????? ????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
						paper -= 1;
						ClearPaper(paper);
						new number = paper; number += 1;
						format(string, sizeof(string), "?? ??????? ?????? %d.",number);
						SendClientMessage(playerid, COLOR_YELLOW, string);
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ?? ?????????? ? ??????? 4, ????? ??????? ?????? !");
				        return 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, " ???????????: /paper write [papernr] or /paper delete [papernr]");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ???????? ???????? !");
	            return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/spawnchange", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pPhousekey] != 255)
	        {
	            if(Spectate[playerid] != 255 && PlayerInfo[playerid][pAdmin] < 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ?? - Spectating, ?? ????? ???????? ????? ????? ?????? !");
	                return 1;
	            }
	            if(SpawnChange[playerid])
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ?????? ????????? ? ????? ?????????? ????? !");
	                SpawnChange[playerid] = 0;
	                if(IsAnInstructor(playerid))
		            {
		                if(SchoolSpawn[playerid] == 0)
		                {
		                    SchoolSpawn[playerid] = 1;
		                    SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ?????? ????????? ? ???????? ????? !");
		                }
		                else if(SchoolSpawn[playerid] == 1)
		                {
		                    SchoolSpawn[playerid] = 0;
		                    SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ?????? ????????? ? ????????? !");
		                }
		            }
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ?????? ????????? ? ????? ??????????? / ???????????? ??? !");
	                SpawnChange[playerid] = 1;
	            }
	        }
	        else
	        {
	            if(IsAnInstructor(playerid))
	            {
	                if(SchoolSpawn[playerid] == 0)
	                {
	                    SchoolSpawn[playerid] = 1;
	                    SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ?????? ????????? ? ???????? ????? !");
	                }
	                else if(SchoolSpawn[playerid] == 1)
	                {
	                    SchoolSpawn[playerid] = 0;
	                    SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ?????? ????????? ? ????????? !");
	                }
	            }
	            else
	            {
		            SendClientMessage(playerid, COLOR_GREY, "   ??? ?? ??????????? / ???????? ??? !");
		            return 1;
	            }
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/report", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /report [text]");
				return 1;
			}
			format(string, sizeof(string), "?????? ?? ?????? %s: %s", sendername, (result));
			ABroadCast(COLOR_YELLOW,string,1);
			SendClientMessage(playerid, COLOR_YELLOW, "???? ?????? ??? ??????? ???????????????.");
	    }
	    return 1;
	}
    if(strcmp(cmd, "/clothes", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] >= 1)
			{
				if(IsAtClothShop(playerid))
				{
				if(PlayerInfo[playerid][pMember] == 1) { ChosenSkin[playerid] = 280; SetPlayerSkin(playerid, 280); }
				else if(PlayerInfo[playerid][pMember] == 2) { ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }
				else if(PlayerInfo[playerid][pMember] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }
				else if(PlayerInfo[playerid][pMember] == 4) { ChosenSkin[playerid] = 70; SetPlayerSkin(playerid, 70); }
				else if(PlayerInfo[playerid][pMember] == 5) { ChosenSkin[playerid] = 258; SetPlayerSkin(playerid, 120); }
				else if(PlayerInfo[playerid][pMember] == 6) { ChosenSkin[playerid] = 120; SetPlayerSkin(playerid, 258); }
				else if(PlayerInfo[playerid][pMember] == 8) { ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }
				else if(PlayerInfo[playerid][pMember] == 9) { ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }
				else if(PlayerInfo[playerid][pMember] == 10) { ChosenSkin[playerid] = 255; SetPlayerSkin(playerid, 255); }
				else if(PlayerInfo[playerid][pMember] == 11) { ChosenSkin[playerid] = 59; SetPlayerSkin(playerid, 59); }
				else { return 1; }
				GetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
				ChangePos2[playerid][0] = GetPlayerInterior(playerid);
				ChangePos2[playerid][1] = 1;
				SetPlayerInterior(playerid,0);
				new rand = random(sizeof(gInviteSpawns));
				SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
				SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
				SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
				SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
				TogglePlayerControllable(playerid, 0);
				SelectChar[playerid] = 255;
				SelectCharID[playerid] = PlayerInfo[playerid][pMember];
				SelectCharPlace[playerid] = 1;
				PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
				PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
				SendClientMessage(playerid, COLOR_LIGHTRED, "* .??????????? 'next' , ????? ??????? ????, ??????? ?? ?????? ????????????.");
				SendClientMessage(playerid, COLOR_LIGHTRED, "* .???? ?? ????? ????, ?? ?????? ?? ?????, ?????????? 'done'.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, " .?? ?? ?????????? ? Clothing Shop !");
					return 1;
				}
				}
				else
				{
					SendClientMessage(playerid,COLOR_GREY, " .?? ?? ?????????? ? Force / Organisation !");
					return 1;
				}
			}
		return 1;
	}
	if(strcmp(cmd, "/lotto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLottoNr] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ???? ?????????? ????? !");
	            return 1;
	        }
	        if(GetPlayerMoney(playerid) < 1500)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?????????? ? 1500$ ??? ??????????? ?????? !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE," ???????????: /lotto [number]");
				return 1;
			}
			new lottonr = strval(tmp);
			if(lottonr < 1 || lottonr > 80) { SendClientMessage(playerid, COLOR_GREY, "   ?????????? ????? ?? ???? 1 ??? ???? 80 !"); return 1; }
			format(string, sizeof(string), "* ?? ?????? ?????????? ????? ? ??????: %d.", lottonr);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerMoney(playerid, - 1500);
			PlayerInfo[playerid][pLottoNr] = lottonr;
	    }
	    return 1;
	}

	if(strcmp(cmd, "/take", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gTeam[playerid] == 2 || IsACop(playerid) || IsPlayerAdmin(playerid))
	        {
	            if(PlayerInfo[playerid][pRank] < 2)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ???? ???????? 2 ??? ???? ??? ????? ???????? !");
	                return 1;
	            }
	            new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________??????? ????????!)__________________|");
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /take [licensename] [playerid/PartOfName]");
			  		SendClientMessage(playerid, COLOR_GREY, "????????? ????????: Driverslicense, Flyinglicense, Boatlicense, Gunlicense, Weapons, Drugs, Materials");
					SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________________|");
					return 1;
				}
			    if(strcmp(x_nr,"driverslicense",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, " ???????????: /take driverslicense [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        format(string, sizeof(string), "* ?? ??????? ? %s's ???????????? ?????.", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* ?????? %s ?????? ???? ???????????? ?????.", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pCarLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ????? ?? ????? ??? !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"flyinglicense",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, " ???????????: /take flyinglicense [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        format(string, sizeof(string), "* ?? ??????? ???????? ?????? %s's.", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* ?????? %s ?????? ? ??? ???????? ?? ??????.", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pFlyLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ????? ?? ????? ??? !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"gunlicense",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, " ???????????: /take driverslicense [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        format(string, sizeof(string), "* ?? ??????? %s's ???????? ??????.", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* ?????? %s ?????? ???? ???????? ??????.", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pGunLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ????? ?? ????? ??? !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "???? ??? ??? ????.");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"boatlicense",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, " ???????????: /take boatlicense [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        format(string, sizeof(string), "* ?? ??????? %s's ???????? ?????.", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* ?????? %s ?????? ???? ???????? ?????.", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pBoatLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ????? ?? ????? ??? !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"weapons",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, " ???????????: /take weapons [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        format(string, sizeof(string), "* ?? ???????? ? %s's ??????.", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* ?????? %s ?????? ? ??? ??????.", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        ResetPlayerWeapons(giveplayerid);
						        PlayerInfo[giveplayerid][pGun1] = 0; PlayerInfo[giveplayerid][pAmmo1] = 0;
						        PlayerInfo[giveplayerid][pGun2] = 0; PlayerInfo[giveplayerid][pAmmo2] = 0;
						        PlayerInfo[giveplayerid][pGun3] = 0; PlayerInfo[giveplayerid][pAmmo3] = 0;
						        PlayerInfo[giveplayerid][pGun4] = 0; PlayerInfo[giveplayerid][pAmmo4] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ??? !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"drugs",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, " ???????????: /take drugs [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    format(string, sizeof(string), "* ?? ??????? ? %s's ???????.", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* ?????? %s ?????? ? ??? ???????.", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pDrugs] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, " ???? ????? ?? ????????? ????? ? ????!");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "????? ?????? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"materials",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, " ???????????: /take materials [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    format(string, sizeof(string), "* ?? ?????? %s's ?????????.", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* ?????? %s ?????? ???? ?????????.", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pMats] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ??? !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "????? ?????? !");
					    return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "??????????? ???????? !");
					return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "?? ?? ???.");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/drink", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAtBar(playerid))
	        {
	            if(PlayerDrunk[playerid] < 10)
	            {
                    ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"???:","???? 6$\n????? 10$\n????? 10$\n???? 2$\n???? 2$\n???????? 10$","??","??????");
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, " ?? ?? ?????? ???? ??????, ?? ???????!");
	                return 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, " ?? ?? ? ???? !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/setchamp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /setchamp [playerid/PartOfName]");
					return 1;
				}
				//giveplayerid = strval(tmp);
		        giveplayerid = ReturnUser(tmp);
		        if(IsPlayerConnected(giveplayerid))
		        {
		            if(giveplayerid != INVALID_PLAYER_ID)
		            {
		                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		                new nstring[MAX_PLAYER_NAME];
						format(nstring, sizeof(nstring), "%s", giveplayer);
						strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
						Titel[TitelWins] = PlayerInfo[giveplayerid][pWins];
						Titel[TitelLoses] = PlayerInfo[giveplayerid][pLoses];
						SaveBoxer();
						format(string, sizeof(string), "* ?? ??????? %s ????? ????????? ?????.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            }
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? !");
		            return 1;
		        }
	        }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ???????????? ???????????? ??? ???????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/boxstats", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 12)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????? !");
	            return 1;
	        }
	        new ttext[20];//Title
	        new clevel = PlayerInfo[playerid][pBoxSkill];
			if(clevel >= 0 && clevel <= 50) { ttext = "Beginner"; }
			else if(clevel >= 51 && clevel <= 200) { ttext = "Amateur"; }
			else if(clevel >= 201 && clevel <= 400) { ttext = "Professional"; }
	        new ntext[20];//NickName
	        new level = PlayerInfo[playerid][pWins];
	        if(level > 0 && PlayerInfo[playerid][pLoses] == 0)
	        {
	            ntext = "Undefeated";
	        }
	        else
	        {
	            if(level >= 0 && level <= 10) { ntext = "Newcomer"; }
	            else if(level >= 11 && level <= 20) { ntext = "Touchy Fist"; }
	            else if(level >= 21 && level <= 30) { ntext = "Nut Cracker"; }
	            else if(level >= 31 && level <= 40) { ntext = "Tommygun"; }
	            else if(level >= 41 && level <= 50) { ntext = "Skull Breaker"; }
	            else if(level >= 51 && level <= 60) { ntext = "Light Speed"; }
	            else if(level >= 61 && level <= 70) { ntext = "Unbroken Warrior"; }
	            else if(level >= 71) { ntext = "Itallion Stallion"; }
	        }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ ????? ?? ????? __________________|");
	        format(string, sizeof(string), "| ??????? ???????: %s, ? [%d] ????????? ? [%d] ????????.", Titel[TitelName],Titel[TitelWins],Titel[TitelLoses]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| ??????? ????????: %s.", ttext);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| ????? ??? ????: %s.", ntext);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| ?????? ??????: %d.", PlayerInfo[playerid][pWins]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| ????? ????? ???????: %d.", PlayerInfo[playerid][pLoses]);
			SendClientMessage(playerid, COLOR_GREY, string);
	        SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________|");
		}
		return 1;
	}
	if(strcmp(cmd, "/fight", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 12)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????? !");
	            return 1;
	        }
	        if(InRing > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ??? ???? ?????????????? ??????, ????? ?????, ????? ??????????? !");
	            return 1;
	        }
	        if(GetPVarInt(playerid, "PlayerBoxing") > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ??? ???????? !");
	            return 1;
	        }
	        if(!PlayerToPoint(20.0,playerid,765.9343,0.2761,1000.7173))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?? ???? ????? !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /fight [Playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ??????????? ? ???? ???????????????!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* ?? offerd ??????????? ????? %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ?????? %s ????? ???????? ? ???? (??? /accept boxing) ????? ???????.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        BoxOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ??? !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/music", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pCDPlayer])
	        {
		        new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________??????.__________________|");
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /music [name]");
			  		SendClientMessage(playerid, COLOR_GREY, "????????? ????????: On, Off, Next");
					SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________|");
					return 1;
				}
			    if(strcmp(x_nr,"on",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~CD Player On", 5000, 5);
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
	            else if(strcmp(x_nr,"off",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~CD Player Off", 5000, 5);
				    PlayerFixRadio(playerid);
				}
				else if(strcmp(x_nr,"next",true) == 0)
				{
				    if(Music[playerid] == 0) { Music[playerid] = 1; }
				    else if(Music[playerid] == 1) { Music[playerid] = 2; }
				    else if(Music[playerid] == 2) { Music[playerid] = 3; }
				    else if(Music[playerid] == 3) { Music[playerid] = 4; }
				    else if(Music[playerid] == 4) { Music[playerid] = 5; }
				    else if(Music[playerid] == 5) { Music[playerid] = 6; }
				    else if(Music[playerid] == 6) { Music[playerid] = 0; }
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ??????????? ??????? ?????? !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? CD-??????? !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/service", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Service Names __________________|");
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /service [name]");
		  		SendClientMessage(playerid, COLOR_GREY, "????????? ????????: Taxi, Bus, Medic, Mechanic");
				SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
				return 1;
			}
		    if(strcmp(x_nr,"taxi",true) == 0)
			{
			    if(TaxiDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   ??? ??????? ????????? ??? ?????????? ????????? ???????????? ? ????????? ?????, ?????????? ??? ??? ????? !");
		            return 1;
		        }
		        if(GetPVarInt(playerid, "TransportDuty") > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????? ???????? ? ????? ?????? !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s ????????? ? ??????????? ????????. (??????????? /accept taxi ????? ??????? ?????)", sendername);
		    	SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????? ????????, ????? ??????.");
		    	TaxiCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"bus",true) == 0)
			{
			    if(BusDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   ??? ??????? ?????????? ????????? ??? ?????????? ????????? ???????????? ? ????????? ?????, ?????????? ??? ??? ????? !");
		            return 1;
		        }
		        if(GetPVarInt(playerid, "TransportDuty") > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????? ???????? ? ???????? ?????? !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s ????????? ? ??????????? ??????????? ????????. (??????????? /accept bus ????? ??????? ?????)", sendername);
		    	SendJobMessage(14, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????? ??????????? ????????, ????? ??????.");
		    	BusCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"medic",true) == 0)
			{
			    if(Medics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   ??? ??????? ????????? ??? ?????????? ????????? ???????????? ? ????????? ?????, ??????????? ??? ??? ????? !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s ????????? ? ??????????? ????????. (??????????? /accept medic ????? ??????? ?????)", sendername);
		    	SendRadioMessage(4, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????? ????????, ????? ??????.");
		    	MedicCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"mechanic",true) == 0)
			{
			    if(Mechanics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   ??? ???????? ???????? ??????? ???????? ? ????????? ?????, ?????????? ??? ??? ????? !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s ????????? ? ??????????? ?????????????? ????????. (??????????? /accept mechanic ????? ??????? ?????)", sendername);
		    	SendJobMessage(7, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????? ?????????????? ????????, ????? ??????.");
		    	MechanicCall = playerid;
		    	return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ??????????? ???????? ???????????? !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tie", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsAMember(playerid) || PlayerInfo[playerid][pFMember] < 255)
			{
			    if(PlayerInfo[playerid][pRank] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ?? ?????????? ? ??????? 3 ??? ???? ??????? ????? !");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /tie [Playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    if(PlayerTied[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   ?????, ??? ??????????? !");
					        return 1;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ??????? ????!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* ?? ???? ??????? %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* ?? ??????? %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s ????????? %s.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Tied", 2500, 3);
								TogglePlayerControllable(giveplayerid, 0);
								PlayerTied[giveplayerid] = 1;
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   ????? ?? ? ????? ??????????, ??? ?? ?? ???????? !");
						        return 1;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ??? !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ???????? ?????????? !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ???? ????? / ????? !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/untie", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsAMember(playerid) || PlayerInfo[playerid][pFMember] < 255)
			{
			    if(PlayerInfo[playerid][pRank] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ?? ?????????? ? ??????? 3 ??? ???? ??????????? ????? !");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /untie [Playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ????????? ????!"); return 1; }
							if(PlayerTied[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* ?? ???? ????????? %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* ?? ?????????? %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Untied", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ?????? !");
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ??? !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ???? ????? / ????? !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/sell", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Selling __________________|");
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /sell [name]");
		  		SendClientMessage(playerid, COLOR_GREY, "????????? ????????: Fish, Cooked");
				SendClientMessage(playerid, COLOR_WHITE, "|_____________________________________________|");
				return 1;
			}
		    if(strcmp(x_nr,"fish",true) == 0)
			{
			    if (!PlayerToPoint(100, playerid,-30.875, -88.9609, 1004.53))//centerpoint 24-7
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ?? ?? ?????????? ? 24-7 !");
					return 1;
				}
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /sell fish [fish]");
					return 1;
				}
				new price;
				new fishid = strval(tmp);
				if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   ????? ????? ???? ???? ???? 1 ??? ???? 5 !"); return 1; }
				else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ?????(1) !"); return 1; }
				else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ?????(2) !"); return 1; }
				else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ?????(3) !"); return 1; }
				else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ?????(4) !"); return 1; }
				else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ?????(5) !"); return 1; }
				ConsumingMoney[playerid] = 1;
				switch (fishid)
				{
				    case 1:
				    {
				        if(Fishes[playerid][pWeight1] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "?? ?????? ???????????? ??????, ???????????? 20 ?????? ??? ??????.");
				            return 1;
				        }
                        price = FishCost(playerid, Fishes[playerid][pFid1]);
                        price = price * Fishes[playerid][pWeight1];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* ?? ??????? ???? %s ??? ???? %d, ??? $%d.", Fishes[playerid][pFish1],Fishes[playerid][pWeight1],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, price);
						ClearFishID(playerid, 1);
				    }
				    case 2:
				    {
				        if(Fishes[playerid][pWeight2] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "?? ?????? ???????????? ??????, ???????????? 20 ?????? ??? ??????.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid2]);
                        price = price * Fishes[playerid][pWeight2];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* ?? ??????? ???? %s ??? ???? %d, ??? $%d.", Fishes[playerid][pFish2],Fishes[playerid][pWeight2],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, price);
						ClearFishID(playerid, 2);
				    }
				    case 3:
				    {
				        if(Fishes[playerid][pWeight3] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "?? ?????? ???????????? ??????, ???????????? 20 ?????? ??? ??????.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid3]);
                        price = price * Fishes[playerid][pWeight3];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* ?? ??????? ???? %s ??? ???? %d, ??? $%d.", Fishes[playerid][pFish3],Fishes[playerid][pWeight3],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, price);
						ClearFishID(playerid, 3);
				    }
				    case 4:
				    {
				        if(Fishes[playerid][pWeight4] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "?? ?????? ???????????? ??????, ???????????? 20 ?????? ??? ??????.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid4]);
                        price = price * Fishes[playerid][pWeight4];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* ?? ??????? ???? %s ??? ???? %d, ??? $%d.", Fishes[playerid][pFish4],Fishes[playerid][pWeight4],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, price);
						ClearFishID(playerid, 4);
				    }
				    case 5:
				    {
				        if(Fishes[playerid][pWeight5] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "?? ?????? ???????????? ??????, ???????????? 20 ?????? ??? ??????.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid5]);
                        price = price * Fishes[playerid][pWeight5];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* ?? ??????? ???? %s ??? ???? %d, ??? $%d.", Fishes[playerid][pFish5],Fishes[playerid][pWeight5],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, price);
						ClearFishID(playerid, 5);
				    }
				}
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
				return 1;
			}
			else if(strcmp(x_nr,"cooked",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /sell cooked [cooknumber] [playerid/PartOfName]");
					return 1;
				}
				new cookid = strval(tmp);
				if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   ????? ????? ?????? ???? ???? 1 ??? ???? 5 !"); return 1; }
				else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ???????? ???-??? ? ??? ?????(1) !"); return 1; }
				else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ???????? ???-??? ? ??? ?????(2) !"); return 1; }
				else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ???????? ???-??? ? ??? ?????(3) !"); return 1; }
				else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ???????? ???-??? ? ??? ?????(4) !"); return 1; }
				else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ???????? ???-??? ? ??? ?????(5) !"); return 1; }
				tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /sell cooked [cooknumber] [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
				        switch(cookid)
				        {
							case 1:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ????? ? ?????? ? ????? ?????? ????????? !");
							        return 1;
							    }
							}
							case 2:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ????? ? ?????? ? ????? ?????? ????????? !");
							        return 1;
							    }
							}
							case 3:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ????? ? ?????? ? ????? ?????? ????????? !");
							        return 1;
							    }
							}
							case 4:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ????? ? ?????? ? ????? ?????? ????????? !");
							        return 1;
							    }
							}
							case 5:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s ??? ??? %s, ??????????? %d (????????????? /cooked ?????? ???).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* ?? ???? %s, ??????????? %d ? %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ????? ????? ? ?????? ? ????? ?????? ????????? !");
							        return 1;
							    }
							}
				        }//switch
				        ClearCookingID(playerid, cookid);
				    }//invalid giveplayerid
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ??????????? ??????? ???????? !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/fare",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 10||PlayerInfo[playerid][pLeader] == 10|| PlayerInfo[playerid][pJob] == 14)
			{
				if(GetPVarInt(playerid, "TransportDuty") > 0)
				{
				    if(GetPVarInt(playerid, "TransportDuty") == 1)
				    {
				        TaxiDrivers -= 1;
				    }
				    else if(GetPVarInt(playerid, "TransportDuty") == 2)
				    {
				        BusDrivers -= 1;
				    }
				    SetPVarInt(playerid, "TransportDuty", 0);
					format(string, sizeof(string), "* ?? ?????? ?? ?? ????????? ? ?????????? $%d.", GetPVarInt(playerid,"TransportMoney"));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerMoney(playerid, GetPVarInt(playerid,"TransportMoney"));
					ConsumingMoney[playerid] = 1; SetPVarInt(playerid,"TransportValue",0); SetPVarInt(playerid,"TransportMoney",0);
					return 1;
				}
				new Veh = GetPlayerVehicleID(playerid);
				if(Veh==82||Veh==84||Veh==85||Veh==94||Veh==143||Veh==144||Veh==145||Veh==146||Veh==147||Veh==148)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, " ???????????: /fare [price]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 999) { SendClientMessage(playerid, COLOR_GREY, "???? ????? ?????????? ?? 1$ ?? 999$ !"); return 1; }
					    TaxiDrivers += 1; SetPVarInt(playerid, "TransportDuty", 1); SetPVarInt(playerid,"TransportValue",moneys);
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), "??????? %s ??? ?????????? ????????? ????????????, ????? ?? ??????: $%d.", sendername, GetPVarInt(playerid,"TransportValue"));
	    				OOCNews(TEAM_GROVE_COLOR,string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ???????? !");
					    return 1;
					}
				}
				else if(Veh == 64 || Veh == 65)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, " ???????????: /fare [price]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 99999) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?? ?????? ?? ?????? $1 ? ?? ???? $99999 !"); return 1; }
					    BusDrivers += 1; SetPVarInt(playerid, "TransportDuty", 2); SetPVarInt(playerid,"TransportValue",moneys);
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), "?????????? ???????? %s ??? ?????????? ????????? ????????????, ????? ?? ??????: $%d.", sendername, GetPVarInt(playerid,"TransportValue"));
	    				OOCNews(TEAM_GROVE_COLOR,string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ???????? !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not in a Taxi / Bus !");
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"   ?? ?? ????? / ?????????? ???????? !");
			    return 1;
			}
	    }
	    return 1;
 	}
 	if(strcmp(cmd,"/eat",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(GetPVarInt(playerid, "PlayerBoxing") > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ????? ??? ????, ? ?? ????? ??? ?? ???????? !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /eat [cook number]");
				return 1;
			}
			new cookid = strval(tmp);
			if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   ????? ????? ?????? ???? ???? 1 ??? ???? 5 !"); return 1; }
			else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ???????? ???-??? ? ??? ?????(1) !"); return 1; }
			else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ???????? ???-??? ? ??? ?????(2) !"); return 1; }
			else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ???????? ???-??? ? ??? ?????(3) !"); return 1; }
			else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ???????? ???-??? ? ??? ?????(4) !"); return 1; }
			else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ???????? ???-??? ? ??? ?????(5) !"); return 1; }
            GetPlayerName(playerid, sendername, sizeof(sendername));
			new Float:health;
			if(GetPlayerHealth(playerid, health) < 40)
			{
			    new hp = 0;
			    switch (cookid)
			    {
					case 1:
					{
					    if(Cooking[playerid][pCookID1] == 16 || Cooking[playerid][pCookID1] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "Consuming endangered Species");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight1] / 3));
					    hp = Cooking[playerid][pCWeight1];
					    format(string, sizeof(string), "* %s ???? %s.", sendername, Cooking[playerid][pCook1]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* ?? ????? %s, ??????????? %d, ? ?? ??? ???????? ? ?????? ????????.",Cooking[playerid][pCook1], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 2:
					{
					    if(Cooking[playerid][pCookID2] == 16 || Cooking[playerid][pCookID2] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "Consuming endangered Species");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight2] / 3));
					    hp = Cooking[playerid][pCWeight2];
					    format(string, sizeof(string), "* %s ???? %s.", sendername, Cooking[playerid][pCook2]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* ?? ????? %s, ??????????? %d, ? ?? ??? ???????? ? ?????? ????????.",Cooking[playerid][pCook2], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 3:
					{
					    if(Cooking[playerid][pCookID3] == 16 || Cooking[playerid][pCookID3] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "Consuming endangered Species");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight3] / 3));
					    hp = Cooking[playerid][pCWeight3];
					    format(string, sizeof(string), "* %s ???? %s.", sendername, Cooking[playerid][pCook3]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* ?? ????? %s, ??????????? %d, ? ?? ??? ???????? ? ?????? ????????.",Cooking[playerid][pCook3], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 4:
					{
					    if(Cooking[playerid][pCookID4] == 16 || Cooking[playerid][pCookID4] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "Consuming endangered Species");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight4] / 3));
					    hp = Cooking[playerid][pCWeight4];
					    format(string, sizeof(string), "* %s ???? %s.", sendername, Cooking[playerid][pCook4]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* ?? ????? %s, ??????????? %d, ? ?? ??? ???????? ? ?????? ????????.",Cooking[playerid][pCook4], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 5:
					{
					    if(Cooking[playerid][pCookID5] == 16 || Cooking[playerid][pCookID5] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "Consuming endangered Species");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight5] / 3));
					    hp = Cooking[playerid][pCWeight5];
					    format(string, sizeof(string), "* %s ???? %s.", sendername, Cooking[playerid][pCook5]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* ?? ????? %s, ??????????? %d, ? ?? ??? ???????? ? ?????? ????????.",Cooking[playerid][pCook5], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
			    }
				ClearCookingID(playerid, cookid);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ???? ???????? ?????????? ??????, ????? ?????? ?????? ? 40 ???????? !");
			    return 1;
			}
	    }
	    return 1;
	}
 	if(strcmp(cmd,"/cook",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(IsAtCookPlace(playerid))
	        {
	            new x_nr[256];
	            x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /cook [name]");
					SendClientMessage(playerid, COLOR_WHITE, "????????? ????????: Lastfish, Fish, Chicken, Hamburger, Pizza.");
					return 1;
				}
				if(strcmp(x_nr,"lastfish",true) == 0)
				{
				    if(Fishes[playerid][pLastFish] > 0)
	        		{
					    new found = 0;
					    if(Cooking[playerid][pCWeight1] == 0)
					    {
						    format(string, sizeof(string), "?????????????? %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight2] == 0)
					    {
						    format(string, sizeof(string), "?????????????? %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight3] == 0)
					    {
						    format(string, sizeof(string), "?????????????? %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight3] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID3] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight4] == 0)
					    {
						    format(string, sizeof(string), "?????????????? %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight4] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID4] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight5] == 0)
					    {
						    format(string, sizeof(string), "?????????????? %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight5] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID5] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ???????? ????? ? ????? ?????? ????????? !");
					        return 1;
					    }
					    if(found)
					    {
					        ClearFishID(playerid, Fishes[playerid][pLastFish]);
				            Fishes[playerid][pLastFish] = 0;
				            Fishes[playerid][pFishID] = 0;
					    }
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ??? ???? catched ???? !");
				        return 1;
				    }
				}
				else if(strcmp(x_nr,"fish",true) == 0)
				{
				    new found = 0;
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, " ???????????: /cook fish [fishnumber]");
						return 1;
					}
					new fishid = strval(tmp);
					if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   ????? ????? ???? ???? ???? 1 ??? ???? 5 !"); return 1; }
					else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ?????(1) !"); return 1; }
					else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ?????(2) !"); return 1; }
					else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ?????(3) !"); return 1; }
					else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ?????(4) !"); return 1; }
					else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ?????(5) !"); return 1; }
					if(Cooking[playerid][pCWeight1] == 0)
					{
					    if(fishid == 1)
					    {
						    format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish1]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight1];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid1];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
					    	SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
					    }
						else if(fishid == 2)
					 	{
						    format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish2]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight2];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid2];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 3)
						{
						    format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish3]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight3];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid3];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 4)
						{
						    format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish4]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight4];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid4];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 5)
						{
						    format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish5]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight5];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid5];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						found = 1;
		    		}
					else if(Cooking[playerid][pCWeight2] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID2] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
						    format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish2]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight2];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid2];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 3)
						{
						    format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish3]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight3];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid3];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 4)
						{
						    format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish4]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight4];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid4];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 5)
						{
						    format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish5]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight5];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid5];
						    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						found = 1;
		    		}
					else if(Cooking[playerid][pCWeight3] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
    					}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						found = 1;
   					}
					else if(Cooking[playerid][pCWeight4] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
    					}
						found = 1;
		    		}
					else if(Cooking[playerid][pCWeight5] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "?????????????? %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						found = 1;
   					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ???????? ????? ? ????? ?????? ????????? !");
					    return 1;
		    		}
					if(found)
					{
					    ClearFishID(playerid, fishid);
						Fishes[playerid][pLastFish] = 0;
			   			Fishes[playerid][pFishID] = 0;
					}
				}
				else if(strcmp(x_nr,"chicken",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
				    {//Cluckin Bell
				        if(Groceries[playerid][pChicken] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "?????????????? ????????");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "?????????????? ????????");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "?????????????? ????????");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "?????????????? ????????");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "?????????????? ????????");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ???????? ????? ? ????? ?????? ????????? !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ??????? ?????? ? ???? !");
				            return 1;
				        }
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ???? ? ?????? Cluckin, ????? ??????????? ??? !");
					    return 1;
				    }
				}
				else if(strcmp(x_nr,"hamburger",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078))
					{//Burgershot
					    if(Groceries[playerid][pHamburger] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "????????? Baken");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "????????? Baken");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "????????? Baken");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "????????? Baken");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "????????? Baken");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ???????? ????? ? ????? ?????? ????????? !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ??????? ??????????? ? ???? !");
				            return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ???? ? ???????? ??????? ? ????????, ????? ??????????? ??? !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"pizza",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
					{//Well Stacked Pizza
					    if(Groceries[playerid][pPizza] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "????? Baken");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "????? Baken");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "????? Baken");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "????? Baken");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "????? Baken");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* ?? ??????? %s, ???????? %d ?????.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ???????? ????? ? ????? ?????? ????????? !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ??????? ???? ? ???? !");
				            return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ???? ?? ?????, ????? ??????????? ??? !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ???????????????? ???????? ????????? !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ? ????? ?? ???? ????????? (Cluckin Bell / Burger Shot / Well Stacked Pizza).");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd,"/cooked",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ ????????????? __________________|");
	        format(string, sizeof(string), "** (1) ?????????: %s. ???: %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (2) ?????????: %s. ???: %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (3) ?????????: %s. ???: %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (4) ?????????: %s. ???: %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (5) ?????????: %s. ???: %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		}
	    return 1;
 	}
	if(strcmp(cmd,"/fish",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pFishes] > 5)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "? ??? ??????? ????? ????!");
	            return 1;
	        }
	        if(Fishes[playerid][pWeight1] > 0 && Fishes[playerid][pWeight2] > 0 && Fishes[playerid][pWeight3] > 0 && Fishes[playerid][pWeight4] > 0 && Fishes[playerid][pWeight5] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ??? ??????? 5 ???, ???????, ???????? ??? ????????? ??!");
	            return 1;
	        }
	        new Veh = GetPlayerVehicleID(playerid);
	        if((IsAtFishPlace(playerid)) || IsABoat(Veh))
	        {
	            new Caught;
	            new rand;
	            new fstring[MAX_PLAYER_NAME];
	            new Level = PlayerInfo[playerid][pFishSkill];
	            if(Level >= 0 && Level <= 50) { Caught = random(20)-7; }
	            else if(Level >= 51 && Level <= 100) { Caught = random(50)-20; }
	            else if(Level >= 101 && Level <= 200) { Caught = random(100)-50; }
	            else if(Level >= 201 && Level <= 400) { Caught = random(160)-60; }
	            else if(Level >= 401) { Caught = random(180)-70; }
	            rand = random(FishNamesNumber);
	            if(Caught <= 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ????? ???????????????? !");
	                return 1;
	            }
	            else if(rand == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ?? ??????? ????? ? ????????? ??? !");
	                return 1;
	            }
	            else if(rand == 4)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ?? ??????? ????? ? ????????? ??? !");
	                return 1;
	            }
	            else if(rand == 7)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ?? ??????? ??????? ? ????????? ??? !");
	                return 1;
	            }
	            else if(rand == 10)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ?? ??????? ???? ??????? ? ????????? ??? !");
	                return 1;
	            }
	            else if(rand == 13)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ?? ??????? ????????? ????? ? ????????? ??? !");
	                return 1;
	            }
	            else if(rand == 20)
	            {
	                new mrand = random(500);
	                format(string, sizeof(string), "* ?? ??????? ????? ?  ????????, $%d.", mrand);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	                GivePlayerMoney(playerid, mrand);
	                return 1;
	            }
		        if(PlayerInfo[playerid][pFishLic] < 1)
		        {
	            	WantedPoints[playerid] += 1;
					SetPlayerCriminal(playerid,255, "Illegal Fishing");
				}
		        if(Fishes[playerid][pWeight1] == 0)
		        {
		        	PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight1] = Caught;
					format(string, sizeof(string), "* ?? ??????? %s, ??????? ????? %d ??????.", Fishes[playerid][pFish1], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 1;
					Fishes[playerid][pFid1] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* ??? ?????? ????? %d ?????? ????????, ???? ????? ?????? ???????: ????? %d.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
     			}
		        else if(Fishes[playerid][pWeight2] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish2], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight2] = Caught;
					format(string, sizeof(string), "* ?? ??????? %s, ??????? ????? %d ??????.", Fishes[playerid][pFish2], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 2;
					Fishes[playerid][pFid2] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* ??? ?????? ????? %d ?????? ????????, ???? ????? ?????? ???????: ????? %d.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight3] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish3], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight3] = Caught;
					format(string, sizeof(string), "* ?? ??????? %s, ??????? ???? %d ?????.", Fishes[playerid][pFish3], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 3;
					Fishes[playerid][pFid3] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* ??? ?????? ????? %d ?????? ????????, ???? ????? ?????? ???????: ????? %d.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight4] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish4], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight4] = Caught;
					format(string, sizeof(string), "* ?? ??????? %s, ??????? ???? %d ?????.", Fishes[playerid][pFish4], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 4;
					Fishes[playerid][pFid4] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* ??? ?????? ????? %d ?????? ????????, ???? ????? ?????? ???????: ????? %d.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight5] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish5], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight5] = Caught;
					format(string, sizeof(string), "* ?? ??????? %s, ??????? ???? %d ?????.", Fishes[playerid][pFish5], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 5;
					Fishes[playerid][pFid5] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* ??? ?????? ????? %d ?????? ????????, ???? ????? ?????? ???????: ????? %d.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ????? ??? ????? ???? !");
		            return 1;
		        }
	            if(PlayerInfo[playerid][pFishSkill] == 50)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ???????? ????? - ?????? ??????? 2, ?? ?????? ?????? ??????? ????? ??????? ???."); }
				else if(PlayerInfo[playerid][pFishSkill] == 250)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ???????? ????? - ?????? ??????? 3, ?? ?????? ?????? ??????? ????? ??????? ???."); }
				else if(PlayerInfo[playerid][pFishSkill] == 500)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ???????? ????? - ?????? ??????? 4, ?? ?????? ?????? ??????? ????? ??????? ???."); }
				else if(PlayerInfo[playerid][pFishSkill] == 1000)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ???????? ????? - ?????? ??????? 5, ?? ?????? ?????? ??????? ????? ??????? ???."); }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ? ???????? ?????, ??? ?? ???????? ????? !");
	            return 1;
	        }
	    }
	    return 1;
 	}
	if(strcmp(cmd,"/fishes",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ ???? __________________|");
	        format(string, sizeof(string), "** (1) ????: %s. ???: %d.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (2) ????: %s. ???: %d.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (3) ????: %s. ???: %d.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (4) ????: %s. ???: %d.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (5) ????: %s. ???: %d.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5]);
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/releasefish",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /releasefish [fish]");
				return 1;
			}
			new fishid = strval(tmp);
			if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   ????? ????? ???? ???? ???? 1 ??? ???? 5 !"); return 1; }
			else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ????? (1) !"); return 1; }
			else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ????? (2) !"); return 1; }
			else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ????? (3) !"); return 1; }
			else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ????? (4) !"); return 1; }
			else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ?? ???? ?? ?????? ???? ? ??? ????? (5) !"); return 1; }
			ClearFishID(playerid, fishid);
			Fishes[playerid][pLastFish] = 0;
   			Fishes[playerid][pFishID] = 0;
		}
		return 1;
	}
 	if(strcmp(cmd,"/throwback",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(Fishes[playerid][pLastFish] > 0)
	        {
	            ClearFishID(playerid, Fishes[playerid][pLastFish]);
	            Fishes[playerid][pLastFish] = 0;
	            Fishes[playerid][pFishID] = 0;
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ??? ???? ???? !");
	            return 1;
	        }
	    }
	    return 1;
 	}
 	if(strcmp(cmd,"/throwbackall",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(Fishes[playerid][pWeight1] > 0 || Fishes[playerid][pWeight2] > 0 || Fishes[playerid][pWeight3] > 0 || Fishes[playerid][pWeight4] > 0 || Fishes[playerid][pWeight5] > 0)
	        {
	            ClearFishes(playerid);
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ??? ???? ???? !");
	            return 1;
	        }
	    }
	    return 1;
 	}
	if(strcmp(cmd,"/licenses",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new text1[20];
	        new text2[20];
	        new text3[20];
	        new text4[20];
	        new text5[20];
	        if(PlayerInfo[playerid][pCarLic]) { text1 = "????"; } else { text1 = "?? ????"; }
            if(PlayerInfo[playerid][pFlyLic]) { text4 = "????"; } else { text4 = "?? ????"; }
			if(PlayerInfo[playerid][pBoatLic]) { text2 = "????"; } else { text2 = "?? ????"; }
	        if(PlayerInfo[playerid][pFishLic]) { text3 = "????"; } else { text3 = "?? ????"; }
	        if(PlayerInfo[playerid][pGunLic]) { text5 = "????"; } else { text5 = "?? ????"; }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Licenses __________________|");
	        format(string, sizeof(string), "** ???????????? ?????: %s.", text1);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** ???????? ?? ??????: %s.", text4);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** ??????? ?? ?????????? ??????: %s.", text2);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** ???????? ?? ???????????: %s.", text3);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** ???????? ?? ??????: %s.", text5);
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "|______________________________________________|");
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/showlicenses",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /showlicenses [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ???????? ???????? ???? /licenses!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    new text1[20];
				        new text2[20];
				        new text3[20];
				        new text4[20];
				        new text5[20];
						if(PlayerInfo[playerid][pCarLic]) { text1 = "????"; } else { text1 = "?? ????"; }
                        if(PlayerInfo[playerid][pFlyLic]) { text4 = "????"; } else { text4 = "?? ????"; }

						if(PlayerInfo[playerid][pBoatLic]) { text2 = "????"; } else { text2 = "?? ????"; }
				        if(PlayerInfo[playerid][pFishLic]) { text3 = "????"; } else { text3 = "?? ????"; }
				        if(PlayerInfo[playerid][pGunLic]) { text5 = "????"; } else { text5 = "?? ????"; }
				        format(string, sizeof(string), "|__________ ???????? %s __________|", sendername);
				        SendClientMessage(giveplayerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "** ???????????? ?????: %s.", text1);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** ???????? ?? ??????: %s.", text4);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** ??????? ?? ?????????? ??????: %s.", text2);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** ???????? ?? ???????????: %s.", text3);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** ???????? ?? ??????: %s.", text5);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s ??????? ??? ???? ????????.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ?? ???????? ???? ???????? %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ???? ????? ?? ????? ??? !");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ???? ????? ???????? ?????????? !");
	            return 1;
	        }
		}
	    return 1;
 	}
//---- Passport test
	if(strcmp(cmd,"/pass",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_WHITE, " ???????????: /pass [playerid/PartOfName]");
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if(IsPlayerConnected(giveplayerid))
		{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));

		new attext[20];
		new jtext[20]; // JOB's
		new ttext[20]; // ???????

		{
		if(PlayerInfo[playerid][pSex] == 1) { attext = "???????"; }
		else if(PlayerInfo[playerid][pSex] == 2) { attext = "???????"; }
		}

		{
		if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) { ttext = "?????????"; }
		else if(gTeam[playerid] == 3 || gTeam[playerid] == 4) { ttext = "?????????"; }
		else if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) { ttext = "???????"; }
		else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) { ttext = "???"; }
		else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) { ttext = "?????"; }
		else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) { ttext = "??????????????"; }
		else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) { ttext = "LCN"; }
		else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) { ttext = "Yakuza"; }
		else if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) { ttext = "Hitmen"; }
		else if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) { ttext = "News Reporter"; }

		}

		{
		if(PlayerInfo[playerid][pJob] == 1) { jtext = "????????"; }
		else if(PlayerInfo[playerid][pJob] == 2) { jtext = "???????"; }
		else if(PlayerInfo[playerid][pJob] == 3) { jtext = "???????????"; }
		else if(PlayerInfo[playerid][pJob] == 4) { jtext = "???????????"; }
		else if(PlayerInfo[playerid][pJob] == 5) { jtext = "????????????"; }
		else if(PlayerInfo[playerid][pJob] == 6) { jtext = "????????"; }
		else if(PlayerInfo[playerid][pJob] == 7) { jtext = "???????????"; }
		else if(PlayerInfo[playerid][pJob] == 8) { jtext = "?????????????"; }
		else if(PlayerInfo[playerid][pJob] == 9) { jtext = "?????????"; }
		else if(PlayerInfo[playerid][pJob] == 10) { jtext = "??????????"; }
		else if(PlayerInfo[playerid][pJob] == 12) { jtext = "??????"; }
		else if(PlayerInfo[playerid][pJob] == 14) { jtext = "???????? ????????"; }
		else if(PlayerInfo[playerid][pJob] == 15) { jtext = "????????? ?????"; }
		else if(PlayerInfo[playerid][pJob] == 16) { jtext = "????????????"; }
		else if(PlayerInfo[playerid][pJob] == 17) { jtext = "???"; }
		else { jtext = "???"; }
		}

		format(string, sizeof(string), "|__________ ??????? %s __________|", sendername);
		SendClientMessage(giveplayerid, COLOR_GREEN, string);
		format(string, sizeof(string), "** ???????: %d.", PlayerInfo[playerid][pAge]);
		SendClientMessage(giveplayerid, COLOR_YELLOW2, string);
		format(string, sizeof(string), "** ???: %s.", attext);
		SendClientMessage(giveplayerid, COLOR_YELLOW2, string);
		format(string, sizeof(string), "** ???????: %s.", ttext);
		SendClientMessage(giveplayerid, COLOR_YELLOW2, string);
		format(string, sizeof(string), "** ??????: %s.", jtext);
		SendClientMessage(giveplayerid, COLOR_YELLOW2, string);
		format(string, sizeof(string), "** ????? ??????: %d", PlayerInfo[playerid][pPenalty]);
		SendClientMessage(giveplayerid, COLOR_YELLOW2, string);
		format(string, sizeof(string), "|__________ ??????? %s __________|", sendername);
		SendClientMessage(giveplayerid, COLOR_GREEN, string);

		if(playerid != giveplayerid)
		{
		format(string, sizeof(string), "* %s ??????? ???? ??????? %s", sendername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		printf("%s", string);
		}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, " ???? ????? ?? ????? ? ????!");
			return 1;
		}
		}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, " ??? ?????? ?????? !");
			return 1;
		}
		}
		return 1;
	}
	if(strcmp(cmd,"/frisk",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /frisk [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ???????? ????!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    new text1[20], text2[20], text3[20], text4[20], text5[20];
					    if(PlayerInfo[giveplayerid][pDrugs] > 0) { text1 = "| ?????????."; } else { text1 = "| ?????? ??????."; }
					    if(PlayerInfo[giveplayerid][pMats] > 0) { text2 = "| ?????????."; } else { text2 = "| ?????? ??????."; }
					    if(Fishes[giveplayerid][pWeight1] > 0 || Fishes[giveplayerid][pWeight2] > 0 || Fishes[giveplayerid][pWeight3] > 0 || Fishes[giveplayerid][pWeight4] > 0 || Fishes[giveplayerid][pWeight5] > 0) { text3 = "| ????."; } else { text3 = "| ?????? ??????."; }
					    if(PlayerInfo[giveplayerid][pPhoneBook] > 0) { text4 = "| ?????????? ?????."; } else { text4 = "| ?????? ??????."; }
					    if(PlayerInfo[giveplayerid][pCDPlayer] > 0) { text5 = "| CD-??????."; } else { text5 = "| ?????? ??????."; }
					    format(string, sizeof(string), "|__________ ?????? ? %s __________|", giveplayer);
				        SendClientMessage(playerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "%s.", text1);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text2);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text3);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text4);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text5);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s ??????? %s ", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ???? ????? ?? ????? ??? !");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ???? ????? ???????? ?????????? !");
	            return 1;
	        }
		}
	    return 1;
 	}
	if(strcmp(cmd,"/sellcar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 10)
			{
			    SendClientMessage(playerid,COLOR_GREY,"   ?? ?? ????? ?? ??????? ???????? ??????????? !");
			    return 1;
			}
			if(!IsPlayerInAnyVehicle(playerid))
			{
			    SendClientMessage(playerid,COLOR_GREY,"   ?? ?? ?????????? ? ?????????? !");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /sellcar [playerid/PartOfName] [price]");
				return 1;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /sellcar [playerid/PartOfName] [price]");
				return 1;
			}
			new money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   ???? ?? ???? 1$ ? ?? ???? 99999$ !"); return 1; }
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ?? ?? ?????? ??????? ???? ??????????!");
					        return 1;
					    }
					    if(CarCalls[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   ???? ????? ??? ????? ??????????, ?? ?????? ???????????? /callcar ??????? !");
					        return 1;
					    }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* ?? ??????????? ????????? %s ?????? ?????? ?? $%d .", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ????? ?? ??????? ???????? ??????????? %s ????? ??????? ??? ???? ?????????? ?? $%d, (??? /accept car) ???????.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						CarOffer[giveplayerid] = playerid;
						CarPrice[giveplayerid] = money;
						CarID[giveplayerid] = GetPlayerVehicleID(playerid);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "???? ????? ?? ????? ??? !");
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ???????????????? ????????????? ????????/???????? !");
			    return 1;
			}
	    }
		return 1;
	}
	if(strcmp(cmd,"/portable",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
		    {
			    if(ConnectedToPC[playerid] == 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ? ??? ???? ??? ???????, ? ?? ?????????? ? ????? ??????????.");
			        ConnectedToPC[playerid] = 0;
			        return 1;
			    }
			    GetPlayerName(playerid, sendername, sizeof(sendername));
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ????????? ???? ???????, ? ????????? ? ????? ??????????.");
			    SendClientMessage(playerid, COLOR_WHITE, "|___ Hitman Agency ___|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - News");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Contracts");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Givehit");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Order");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Ranks");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Logout");
				SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
				ConnectedToPC[playerid] = 255;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ???? ????????? ??????? ????? !");
		        return 1;
		    }
		}
	    return 1;
	}
	if(strcmp(cmd,"/materials",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pJob] != 9)
			{
			    SendClientMessage(playerid,COLOR_GREY,"   ?? ?? ????? ?????? !");
			    return 1;
			}
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /materials [name]");
				SendClientMessage(playerid, COLOR_WHITE, "????????? ????????: Get, Deliver.");
				return 1;
			}
			if(strcmp(x_nr,"get",true) == 0)
			{
			    if(PlayerToPoint(3.0,playerid,597.1277,-1248.6479,18.2734))
			    {
			        if(MatsHolding[playerid] >= 10)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????? ??????? ?????? ?????? ?????????? !");
				        return 1;
			        }
			        tmp = strtok(cmdtext, idx);
			        if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, " ???????????: /materials get [ammount]");
						return 1;
					}
					moneys = strval(tmp);
					if(moneys < 1 || moneys > 10) { SendClientMessage(playerid, COLOR_GREY, "   ????? ?????? ?? ????? ???? ???? 1 ??? ???? 10 !"); return 1; }
					new price = moneys * 100;
					if(GetPlayerMoney(playerid) > price)
					{
					    format(string, sizeof(string), "* ?? ?????? %d ?????? ?????????? ?? $%d.", moneys, price);
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					    GivePlayerMoney(playerid, - price);
					    MatsHolding[playerid] = moneys;
					}
					else
					{
					    format(string, sizeof(string), "   ?? ?? ?????? ???????????? $%d !", price);
					    SendClientMessage(playerid, COLOR_GREY, string);
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ? ?????? ??????? ?????????? ? ??? ??????? !");
			        return 1;
			    }
			}
			else if(strcmp(x_nr,"deliver",true) == 0)
			{
			    if(PlayerToPoint(3.0,playerid,-2115.7246,-78.0859,35.3203))
			    {
			        if(MatsHolding[playerid] > 0)
			        {
						new payout = (50)*(MatsHolding[playerid]);
				        format(string, sizeof(string), "* ??????? ???? ??? %d ????????? ??? ????? %d ??????? ??????????.", payout, MatsHolding[playerid]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        PlayerInfo[playerid][pMats] += payout;
				        MatsHolding[playerid] = 0;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ??????? ??????? ?????????? !");
				        return 1;
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?? ??????? ?????????? ? ??? ?????? !");
			        return 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ???????????????? ???????? ?????????? !");
			    return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd,"/sellgun",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pJob] != 9)
			{
			    SendClientMessage(playerid,COLOR_GREY,"   ?? ?? ????? ?????? !");
			    return 1;
			}
			new x_weapon[256],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /sellgun [playerid/PartOfName] [weaponname]");
				SendClientMessage(playerid, COLOR_GREY, "??????: flowers(25) sdpistol(100) eagle(150) mp5(200) shotgun(200)");
				SendClientMessage(playerid, COLOR_GREY, "??????: ak47(600) m4(600) rifle (600)");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					x_weapon = strtok(cmdtext, idx);
					if(!strlen(x_weapon))
					{
						SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
						SendClientMessage(playerid, COLOR_WHITE, "*** ??????? ?????? ***");
						SendClientMessage(playerid, COLOR_GREY, " ???????????: /sellgun [playerid/PartOfName] [weaponname]");
						SendClientMessage(playerid, COLOR_GREY, "??????: flowers(25) sdpistol(100) eagle(200) mp5(200) shotgun(200)");
						SendClientMessage(playerid, COLOR_GREY, "??????: ak47(600) m4(600) rifle(600)");
						SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
						return 1;
					}
				}
				//if(strcmp(x_weapon,"knife",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 4; price[playerid] = 100; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 4; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				if(strcmp(x_weapon,"sdpistol",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 23; price[playerid] = 100; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 23; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   ???????????? ?????????? ??? ????? ??????!"); return 1; } }
				else if(strcmp(x_weapon,"flowers",true) == 0) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 14; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"   ???????????? ?????????? ??? ????? ??????!"); return 1; } }
				else if(strcmp(x_weapon,"eagle",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 24; price[playerid] = 150; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 24; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   ???????????? ?????????? ??? ????? ??????!"); return 1; } }
				else if(strcmp(x_weapon,"mp5",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 29; price[playerid] = 200; ammo[playerid] = 200; PlayerInfo[giveplayerid][pGun2] = 29; PlayerInfo[giveplayerid][pAmmo2] = 200; } else { SendClientMessage(playerid,COLOR_GREY,"   ???????????? ?????????? ??? ????? ??????!"); return 1; } }
				else if(strcmp(x_weapon,"shotgun",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 25; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   ???????????? ?????????? ??? ????? ??????!"); return 1; } }
				//else if(strcmp(x_weapon,"spas12",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 27; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 27; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 30; price[playerid] = 600; ammo[playerid] = 250; PlayerInfo[giveplayerid][pGun2] = 30; PlayerInfo[giveplayerid][pAmmo2] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   ???????????? ?????????? ??? ????? ??????!"); return 1; } }
				else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 31; price[playerid] = 600; ammo[playerid] = 250; PlayerInfo[giveplayerid][pGun2] = 31; PlayerInfo[giveplayerid][pAmmo2] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   ???????????? ?????????? ??? ????? ??????!"); return 1; } }
				else if(strcmp(x_weapon,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 33; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 33; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   ???????????? ?????????? ??? ????? ??????!"); return 1; } }
				else { SendClientMessage(playerid,COLOR_GREY,"   ???????????????? ???????? ??????!"); return 1; }
				if (ProxDetectorS(5.0, playerid, giveplayerid))
				{
				    if(giveplayerid == playerid)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   ?? ?? ?????? ??????? ?????? ??? ???????????????!");
						return 1;
					}
					if(PlayerInfo[playerid][pMiserPerk] > 0)
					{
					    new skill = 2 * PlayerInfo[playerid][pMiserPerk];
					    new mats = price[playerid] / 100;
					    price[playerid] -= (mats)*(skill);
					}
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "   ?? ???? %s, %s ? %d ????????????, ??? %d ??????????.", giveplayer,x_weapon, ammo[playerid], price[playerid]);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "   ?? ???????? %s ? %d ???????????? ?? %s.", x_weapon, ammo[playerid], sendername);
					SendClientMessage(giveplayerid, COLOR_GRAD1, string);
					PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "* %s ?????? ?????? ?? ??????????, ? ??????? ? ???? %s.", sendername ,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   ?? ??????? ??????.");
					return 1;
				}
			}
			else
			{
				format(string, sizeof(string), "   %d ?? ???????? ?????.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/get",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[256];
			x_job = strtok(cmdtext, idx);

			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ ???????? __________________|");
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /get [name]");
		  		SendClientMessage(playerid, COLOR_GREY, "????????? ????????: Drugs, Fuel");
				SendClientMessage(playerid, COLOR_GREEN, "|_________________________________________|");
				return 1;
			}

		    if(strcmp(x_job,"drugs",true) == 0)
			{
		        if(PlayerInfo[playerid][pDrugs] > 15)
		        {
		            format(string, sizeof(string), "  ?? ??? ??? ?????? %d ?????? ? ????, ???????? ?? ??????? !", PlayerInfo[playerid][pDrugs]);
					SendClientMessage(playerid, COLOR_GREY, string);
		            return 1;
		        }
		        new tel;
			    new price;
			    new ammount;
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /get drugs [ammount]");
					return 1;
				}
				new level = PlayerInfo[playerid][pDrugsSkill];
				ammount = strval(tmp);
				if(level >= 0 && level <= 50)
				{ tel = 200; if(ammount < 1 || ammount > 6) { SendClientMessage(playerid, COLOR_GREY, "?? ?????? ? ????? ?????? ?? 1 ?? 6 ??????? ??????????"); return 1; } }
				else if(level >= 51 && level <= 100)
				{ tel = 150; if(ammount < 1 || ammount > 12) { SendClientMessage(playerid, COLOR_GREY, " ?? ?????? ? ????? ?????? ?? 1 ?? 12 ??????? ??????????!"); return 1; } }
				else if(level >= 101 && level <= 200)
				{ tel = 100; if(ammount < 1 || ammount > 20) { SendClientMessage(playerid, COLOR_GREY, " ?? ?????? ? ????? ?????? ?? 1 ?? 20 ??????? ??????????"); return 1; } }
				else if(level >= 201 && level <= 400)
				{ tel = 50; if(ammount < 1 || ammount > 30) { SendClientMessage(playerid, COLOR_GREY, "?? ?????? ? ????? ?????? ?? 1 ?? 30 ??????? ??????????"); return 1; } }
				else if(level >= 401)
				{ tel = 10; if(ammount < 1 || ammount > 99) { SendClientMessage(playerid, COLOR_GREY, "?? ?????? ? ????? ?????? ?? 1 ?? 99 ??????? ??????????"); return 1; } }
			    if (PlayerInfo[playerid][pJob] == 4 && PlayerToPoint(2.0, playerid, 323.0342,1118.5804,1083.8828))
				{
				    price = ammount * tel;
				    if(GetPlayerMoney(playerid) > price)
				    {
				        format(string, sizeof(string), "* ?? ?????? %d ????? ?? $%d.", ammount, price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        GivePlayerMoney(playerid, -price);
						PlayerInfo[playerid][pDrugs] = ammount;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, " ? ??? ????????? ?????");
				        return 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ??  ??????????, ??? ?? ? ??????? !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"fuel",true) == 0)
			{
			    if(IsAtGasStation(playerid))
				{
				    new price = 20 * SBizzInfo[3][sbEntranceCost];
				    format(string, sizeof(string), "* ?? ???????????, ??? ??? ????? ? 20% ???????? ??? $%d",price);
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				    PlayerInfo[playerid][pFuel] = 20;
					GivePlayerMoney(playerid, - price);
					return 1;
				}
				else
				{
					SendClientMessage(playerid,COLOR_GREY," ?? ?? ????? ????????????!");
					return 1;
				}
			}
			else { return 1; }
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/join", true) == 0 || strcmp(cmd, "/go", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pJob] == 0)
			{
			    if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,359.5408,206.7693,1008.3828))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ??????????, ? ???????? 5-??????? ???????? .");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ??????????, ??????????? /accept job.");
				    GettingJob[playerid] = 1;
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,347.7374,193.7241,1014.1875))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ?????????, ? ???????? 5-??????? ????????.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ?????????, ??????????? /accept job.");
				    GettingJob[playerid] = 2;
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1215.1304,-11.8431,1000.9219))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ??????, ? ???????? 5-??????? ????????.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ??????, ??????????? /accept job.");
				    GettingJob[playerid] = 3;
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2166.3772,-1675.3829,15.0859))
				{
				    if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pLeader] == 5)
				    {
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ?????  ????????????, ? ???????? 5-??????? ????????.");
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ????????????, ??????????? /accept job.");
					    GettingJob[playerid] = 4;
					}
					else
					{
					    SendClientMessage(playerid,COLOR_GREY," ?????? ????? ????? ???????? ????? ????????");
					}
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1109.3318,-1796.3042,16.5938))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ?????????????, ? ???????? 5-??????? ????????.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ?????????????, ??????????? /accept job.");
				    GettingJob[playerid] = 5;
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,-1932.3859,276.2117,41.0391))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ????????????? ?????????, ? ???????? 5-??????? ????????.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ????????????? ?????????, ??????????? /accept job.");
				    GettingJob[playerid] = 7;
		  		}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2226.1716,-1718.1792,13.5165))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ??????????????, ? ???????? 5-??????? ????????.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ??????????????, ??????????? /accept job.");
				    GettingJob[playerid] = 8;
		  		}
		  		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1366.4325,-1275.2096,13.5469))
		  		{
		  		    if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pLeader] == 5)
				    {
			  		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ??????? ??????, ? ???????? 5-??????? ????????.");
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ??????? ??????, ??????????? /accept job.");
					    GettingJob[playerid] = 9;
					}
				    else
					{
					    SendClientMessage(playerid,COLOR_GREY," ?????? ????? ????? ???????? ????? ????????");
					}
		  		}
		  		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,531.7930,-1292.4044,17.2422))
		  		{
		  		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ??????? ?? ??????? ???????? ???????????, ? ???????? 5-??????? ????????.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ??????? ?? ??????? ???????? ???????????, ??????????? /accept job.");
				    GettingJob[playerid] = 10;
		  		}
		  		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,766.0804,14.5133,1000.7004))
		  		{
		  		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ????????, ? ???????? 5-??????? ????????.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ????????, ??????????? /accept job.");
				    GettingJob[playerid] = 12;
		  		}
		  		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1154.2208,-1770.8203,16.5992))
		  		{
		  		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ?????????? ?????????, ? ???????? 5-??????? ????????.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ?????????? ?????????, ??????????? /accept job.");
				    GettingJob[playerid] = 14;
		  		}
		  		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,-2040.9436,456.2395,35.1719))
		  		{
		  		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ??????????? ?????, ? ???????? 5-??????? ????????.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ??????????? ?????, ??????????? /accept job.");
				    GettingJob[playerid] = 15;
		  		}
		  		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,-77.7288,-1136.3896,1.0781))
		  		{
		  		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ????????? ?????????, ? ???????? 5-??????? ????????.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ????????? ?????????, ??????????? /accept job.");
				    GettingJob[playerid] = 16;
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,999.7,-927.0,42.1))
				{
				    if(PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0) { SendClientMessage(playerid, COLOR_GREY, "????? ????/????? ??????? ???????? ?????"); return 1; }
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????????? ????? ?????, ? ???????? 5-??????? ????????.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ? ??? ???? ?????? ?????? ?? ??????? ????????? /quitjob.");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?? ??????? ??? ?????? ????? ?????, ??????????? /accept job.");
				    GettingJob[playerid] = 17;
				}
		  		else
		  		{
		  		    SendClientMessage(playerid, COLOR_GREY, "?? ?? ????? ?????, ??? ????? ???????? ?????? !");
		  		}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "?? ??? ?????? ??????, ??????????? /quitjob ??????? !");
			}
		}//not connected
	    return 1;
	}
	if(strcmp(cmd, "/fill", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsAtGasStation(playerid))
			{
			    GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Re-Fueling Vehicle, please wait",2000,3);
				SetTimer("Fillup",RefuelWait,0);
				Refueling[playerid] = 1;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   ?? ?? ?? ????????????!");
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/fillcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pFuel] > 0)
		    {
		        if(Gas[gLastCar[playerid]] < 81)
		        {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "?? ???????????, ??? ?????????? ? 20-?????????? ????????.");
			        Gas[gLastCar[playerid]] += 20;
			        PlayerInfo[playerid][pFuel] = 0;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "??? ?????????? ?????????, ???????? ????!");
				}
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY, "?? ???????? ?? ????? ????????!");
		    }
		}
		return 1;
	}
 	if(strcmp(cmd, "/tazer", true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SendClientMessage(playerid, COLOR_GREY, "?????? ???????????? ??? ? ?????????? !");
			        return 1;
			    }
			    new suspect = GetClosestPlayer(playerid);
			    if(IsPlayerConnected(suspect))
				{
				    if(PlayerCuffed[suspect] > 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "?????, ??? ?????? !");
				        return 1;
				    }
				    if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
					{
					    if(gTeam[suspect] == 2)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "??????? ????? ?????? ??????? / ??? / ???????????? ??????? !");
					        return 1;
					    }
					    if(IsPlayerInAnyVehicle(suspect))
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ????????????? ????????? ? ??????????, ???????? ??? ??????? !");
					        return 1;
					    }
					    GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* ?? ??????? ???????????? ?? %s ?? ??????????? ?? 8 ??????.", sendername);
						SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ?? ??????? ???????????? ? ???????????? %s ?? 8 ??????.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s ????????? ???????????? ? %s ? ?? ??? ???????????,.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(suspect, "~r~Tazed", 2500, 3);
						TogglePlayerControllable(suspect, 0);
						PlayerCuffed[suspect] = 1;
						PlayerCuffedTime[suspect] = 8;
		            }
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "????? ??? ??? ??????!");
					    return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??????? / ??? / ???????????? ??????? !");
			}
		}//not connected
	    return 1;
	}
	if(strcmp(cmd, "/cuff", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsACop(playerid) || gTeam[playerid] == 2)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /cuff [Playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(gTeam[giveplayerid] == 2 || IsACop(giveplayerid))
				        {
				            SendClientMessage(playerid, COLOR_GREY, "*?? ???????? ????????? ??????????? !");
					        return 1;
				        }
					    if(PlayerCuffed[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "*????? ??? ?????? !");
					        return 1;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "*?? ???????? ??????? ?????? ????!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "*?? ???? ??????? %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "*?? ??????? %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "*%s ?????? ???? %s, ?? ??????? ?????? ?????.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Cuffed", 2500, 3);
								TogglePlayerControllable(giveplayerid, 0);
								PlayerCuffed[giveplayerid] = 2;
								PlayerCuffedTime[giveplayerid] = 180;
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "*????? ?? ? ????? ??????????, ??? ?? ???????? !");
						        return 1;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "*???? ????? ?? ????? ??? !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "*???? ????? ?? ? ???? !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ??? / ??? / ????? !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/untie", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsACop(playerid) || gTeam[playerid] == 2)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: /untie [Playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "*?? ???????? ????????? ?????? ????!"); return 1; }
							if(PlayerCuffed[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "*??? ???????? %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "*??? ????????? %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Uncuffed", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerCuffed[giveplayerid] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "*???? ????? ?? ?????? !");
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "*???? ????? ?? ????? ??? !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "*????? ?? ? ???? !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "*?? ?? ??? / ??? / ????? !");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/find", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 1)
		    {
				SendClientMessage(playerid, COLOR_GREY, "?? ?? ???????? !");
				return 1;
		    }
		    if(PlayerOnMission[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "?? ?????? ????? ??????, ?? ?? ?????? ???????????? ??? ??????? !");
			    return 1;
			}
			if(UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 401)
			{
			    SendClientMessage(playerid, COLOR_GREY, "?? ??? ?????? ????-??, ????? 2 ?????? !");
			    return 1;
			}
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /find [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ?????????!"); return 1; }
			        new points;
			        new level = PlayerInfo[playerid][pDetSkill];
					if(level >= 0 && level <= 50)
					{ points = 4; }
					else if(level >= 51 && level <= 100)
					{ points = 6; }
					else if(level >= 101 && level <= 200)
					{ points = 8; }
					else if(level >= 201 && level <= 400)
					{ points = 10; }
					else if(level >= 401)
					{ points = 12; }
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(giveplayerid, X,Y,Z);
					SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					FindTime[playerid] = 1;
					FindTimePoints[playerid] = points;
					PlayerInfo[playerid][pDetSkill] ++;
					UsedFind[playerid] = 1;
					if(PlayerInfo[playerid][pDetSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ??????????? ????? - ?????? ??????? 2, ????? ?? ? ????????? ????? ?????????? ???????."); }
					else if(PlayerInfo[playerid][pDetSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ??????????? ????? - ?????? ??????? 3, ????? ?? ? ????????? ????? ?????????? ???????."); }
					else if(PlayerInfo[playerid][pDetSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ??????????? ????? - ?????? ??????? 4, ?? ?????? ? ????????? ????? ?????????? ???????."); }
					else if(PlayerInfo[playerid][pDetSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ??????????? ????? - ?????? ??????? 5, ?? ?????? ? ????????? ????? ?????????? ???????."); }
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "???????????????? ???????? !");
			}
		}
	    return 1;
	}
	if(strcmp(cmd, "/guard", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 8)
		    {
				SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????????????!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /guard [playerid/PartOfName] [price]");
				return 1;
			}
			new money;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "???? ?????? ?????? 1, ??? ???? 99999!"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ?????????? ???? ???????? ????!");
					        return 1;
					    }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* ?? ?????????? ?????? ? %s ??? $%d.", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ????????????? %s ????? ???????? ??? $%d, (?????????? /accept bodyguard) ????? ??????? ???????????.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						GuardOffer[giveplayerid] = playerid;
						GuardPrice[giveplayerid] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "????? ?? ????? ??? !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "????? ???????? ??????????!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/free", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 2)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "?? ?? ???????!");
		        return 1;
		    }
		    if(PlayerInfo[playerid][pLawSkill] >= 401)
		    {
		        ApprovedLawyer[playerid] = 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /free [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ?????????? ????!"); return 1; }
					if(PlayerInfo[giveplayerid][pJailed] == 1 && ApprovedLawyer[playerid] == 1)
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* ?? ?????????? %s ?? ??????.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ?? ???? ??????????? ?? ??????, ????????? %s.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						ApprovedLawyer[playerid] = 0;
						WantLawyer[giveplayerid] = 0;
						CallLawyer[giveplayerid] = 0;
						JailPrice[giveplayerid] = 0;
						UnJail(giveplayerid);
						PlayerInfo[giveplayerid][pJailTime] = 1;
						PlayerInfo[playerid][pLawSkill] ++;
						if(PlayerInfo[playerid][pLawSkill] == 50)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ??????? ????? - ?????? ??????? 2, ?? ??????????? ?????? ?????, ? ????? ??????? ???????????? ?????."); }
						else if(PlayerInfo[playerid][pLawSkill] == 100)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ??????? ????? - ?????? ??????? 3, ?? ??????????? ?????? ?????, ? ????? ??????? ???????????? ?????."); }
						else if(PlayerInfo[playerid][pLawSkill] == 200)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ??????? ????? - ?????? ??????? 4, ?? ??????????? ?????? ?????, ? ????? ??????? ???????????? ?????."); }
						else if(PlayerInfo[playerid][pLawSkill] == 400)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ??????? ????? - ?????? ??????? 5, ?? ??????????? ?????? ?????, ? ????? ??????? ???????????? ?????."); }
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "????? ?? ???????? ? ???????? / ????? aint ??????????? ? ?????? !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "????? ???????? ??????????!");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd,"/cancel",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ ???????????? __________________|");
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: /cancel [name]");
				SendClientMessage(playerid, COLOR_GREY, "????????? ????????: Sex, Drugs, Repair, Lawyer, Bodyguard, Live, Refill, Car, Boxing");
				SendClientMessage(playerid, COLOR_GREY, "????????? ????????: Taxi, Bus, Medic, Mechanic, Paper, Ticket, Witness, Marriage, Divorce");
				SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
				return 1;
			}
			if(strcmp(x_job,"sex",true) == 0) {	SexOffer[playerid] = 999; SexPrice[playerid] = 0; }
			else if(strcmp(x_job,"drugs",true) == 0) { DrugOffer[playerid] = 999; DrugPrice[playerid] = 0; DrugGram[playerid] = 0; }
			else if(strcmp(x_job,"repair",true) == 0) {	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
			else if(strcmp(x_job,"lawyer",true) == 0) { WantLawyer[playerid] = 0; CallLawyer[playerid] = 0; }
			else if(strcmp(x_job,"bodyguard",true) == 0) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
			else if(strcmp(x_job,"live",true) == 0) { LiveOffer[playerid] = 999; }
			else if(strcmp(x_job,"refill",true) == 0) { RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; }
			else if(strcmp(x_job,"car",true) == 0) { CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; }
			else if(strcmp(x_job,"boxing",true) == 0) { BoxOffer[playerid] = 999; }
			else if(strcmp(x_job,"paper",true) == 0) { PaperOffer[playerid] = 999; }
			else if(strcmp(x_job,"witness",true) == 0) { MarryWitnessOffer[playerid] = 999; }
			else if(strcmp(x_job,"marriage",true) == 0) { ProposeOffer[playerid] = 999; }
			else if(strcmp(x_job,"divorce",true) == 0) { DivorceOffer[playerid] = 999; }
			else if(strcmp(x_job,"ticket",true) == 0) { TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; }
			else if(strcmp(x_job,"medic",true) == 0) { if(IsPlayerConnected(MedicCall)) { if(MedicCall == playerid) { MedicCall = 999; } else { SendClientMessage(playerid, COLOR_GREY, "   You are not the current Caller !"); return 1; } } }
			else if(strcmp(x_job,"mechanic",true) == 0) { if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } else { SendClientMessage(playerid, COLOR_GREY, "   You are not the current Caller !"); return 1; } } }
			else if(strcmp(x_job,"taxi",true) == 0)
			{
			    if(TaxiCall < 999)
			    {
			        if(GetPVarInt(playerid, "TransportDuty") == 1 && GetPVarInt(playerid, "TaxiCallTime") > 0)
			        {
			            SetPVarInt(playerid,"TaxiAccepted",999);
						GameTextForPlayer(playerid, "~w~You have~n~~r~Canceled the call", 5000, 1);
						SetPVarInt(playerid, "TaxiCallTime", 0);
						DisablePlayerCheckpoint(playerid);
						TaxiCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(TaxiCall)) { if(TaxiCall == playerid) { TaxiCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(GetPVarInt(i,"TaxiAccepted") < 999)
						        {
							        if(GetPVarInt(i,"TaxiAccepted") == playerid)
							        {
							            SetPVarInt(i,"TaxiAccepted",999);
							            GameTextForPlayer(i, "~w~Taxi Caller~n~~r~Canceled the call", 5000, 1);
							            SetPVarInt(i, "TaxiCallTime", 0);
							            DisablePlayerCheckpoint(i);
							        }
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_job,"bus",true) == 0)
			{
			    if(BusCall < 999)
			    {
			        if(GetPVarInt(playerid, "TransportDuty") == 2 && GetPVarInt(playerid, "BusCallTime") > 0)
			        {
			            SetPVarInt(playerid,"BusAccepted",999);
						GameTextForPlayer(playerid, "~w~You have~n~~r~Canceled the call", 5000, 1);
                        SetPVarInt(playerid, "BusCallTime", 0);
						DisablePlayerCheckpoint(playerid);
						BusCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(BusCall)) { if(BusCall == playerid) { BusCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(GetPVarInt(i,"BusAccepted") < 999)
						        {
							        if(GetPVarInt(i,"BusAccepted") == playerid)
							        {
							            SetPVarInt(i,"BusAccepted",999);
							            GameTextForPlayer(i, "~w~Bus Caller~n~~r~Canceled the call", 5000, 1);
                   						SetPVarInt(i, "BusCallTime", 0);
							            DisablePlayerCheckpoint(i);
							        }
						        }
						    }
						}
					}
				}
			}
			else { return 1; }
			format(string, sizeof(string), "* ?? ????????: %s.", x_job);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}//not connected
		return 1;
	}
//ACCEPT COMMANDS (Cops)
	if(strcmp(cmd,"/accept",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ ????????? __________________|");
				SendClientMessage(playerid, COLOR_WHITE, " ???????????: accept [name]");
				SendClientMessage(playerid, COLOR_GREY, "????????? ????????: Sex, Drugs, Repair, Lawyer, Bodyguard, Job, Live, Refill");
				SendClientMessage(playerid, COLOR_GREY, "????????? ????????: Car, Taxi, Bus, Boxing, Medic, Mechanic, Paper, Ticket");
				SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
				return 1;
			}
	        if(strcmp(x_job,"car",true) == 0)
			{
			    if(CarOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(CarOffer[playerid]))
			        {
			            if(GetPlayerMoney(playerid) > CarPrice[playerid])
			            {
			                if(IsPlayerInVehicle(CarOffer[playerid], CarID[playerid]))
			                {
				                GetPlayerName(CarOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
				                new points;
				                PlayerInfo[CarOffer[playerid]][pCarSkill] ++;
				                if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 50)
								{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* ??? ????? ?????? ?? ??????? ???????? ??????????? - ?????? ??????? 2, ??????, ??????? ???????? ?????????? ?? ???, ????? ??????? ??? ????."); }
								else if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 100)
								{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* ??? ????? ?????? ?? ??????? ???????? ??????????? - ?????? ??????? 3, ??????, ??????? ???????? ?????????? ?? ???, ????? ??????? ??? ????."); }
								else if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 200)
								{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* ??? ????? ?????? ?? ??????? ???????? ??????????? - ?????? ??????? 4, ??????, ??????? ???????? ?????????? ?? ???, ????? ??????? ??? ????."); }
								else if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 400)
								{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* ??? ????? ?????? ?? ??????? ???????? ??????????? - ?????? ??????? 5, ??????, ??????? ???????? ?????????? ?? ???, ????? ??????? ??? ????."); }
								new level = PlayerInfo[CarOffer[playerid]][pCarSkill];
								if(level >= 0 && level <= 50) { points = 1; }
								else if(level >= 51 && level <= 100) { points = 2; }
								else if(level >= 101 && level <= 200) { points = 3; }
								else if(level >= 201 && level <= 400) { points = 4; }
								else if(level >= 401) { points = 4; }
				                format(string, sizeof(string), "* ?? ?????? ?????????? ?? $%d, ?? ?????? ?? ??????? ???????? ??????????? %s. (?? ?????? ???????????? /callcar %d ?????)",CarPrice[playerid],giveplayer,points);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* ?? ??????? ???? ?????????? %s ??? $%d, ????? ????? ???????????? /callcar %d ?????.",sendername,CarPrice[playerid],points);
								SendClientMessage(CarOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[CarOffer[playerid]][pPayCheck] += CarPrice[playerid];
								GivePlayerMoney(playerid, -CarPrice[playerid]);
								RemovePlayerFromVehicle(CarOffer[playerid]);
								CarCalls[playerid] = points;
						        CarOffer[playerid] = 999;
								CarPrice[playerid] = 0;
								return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "????? ?? ??????? ???????? ??????????? ?? ????????? ? offerd ??????????!");
						    	return 1;
							}
			            }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "?? ????????????, ????????????? ?????????? !");
						    return 1;
						}
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "????? ?? ????????? ???????? ?????????? !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"divorce",true) == 0)
			{
			    if(DivorceOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(DivorceOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid]))
						{
						    GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* ?? ??????? %s's ?????? ???? ??? ?????????? ?????.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s ?????? ??? ?????? ???? ????? ?????????? ?????.", sendername);
							SendClientMessage(DivorceOffer[playerid], COLOR_LIGHTBLUE, string);
							ClearMarriage(playerid);
							ClearMarriage(DivorceOffer[playerid]);
							PlayerInfo[playerid][pPhousekey] = 255;
							PlayerInfo[playerid][pPbiskey] = 255;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "?????, ??????? ?????? ??? ?????? ???????, ?? ????? ??? !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "????? ?? ?????? ??? ????? ??????? !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"witness",true) == 0)
			{
			    if(MarryWitnessOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(MarryWitnessOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid]))
						{
						    GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* ?? ??????? %s's ??????? ???? ??? ?????????? ?????.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s ?????? ??? ?????? ???? ????? ?????????? ?????.", sendername);
							SendClientMessage(MarryWitnessOffer[playerid], COLOR_LIGHTBLUE, string);
							MarryWitness[MarryWitnessOffer[playerid]] = playerid;
							MarryWitnessOffer[playerid] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "?????, ??????? ?????? ??? ???? ??? ?????????? ?????, ?? ????? ??? !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "????? ?? ????????, ????? ?? ???? ??? ?????????? ????? !");
				    return 1;
				}
			}
	        else if(strcmp(x_job,"marriage",true) == 0)
			{
			    if(ProposeOffer[playerid] < 999)
			    {
			        if(!PlayerToPoint(10.0, playerid, -1988.6638,1117.8837,54.4726))
			        {
			            SendClientMessage(playerid, COLOR_GREY, "?? ?? ? ?????? ? ??? ?????? !");
			            return 1;
			        }
			        if(IsPlayerConnected(ProposeOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
						{
						    if(MarryWitness[ProposeOffer[playerid]] == 999)
						    {
						        SendClientMessage(playerid, COLOR_GREY, "? ?????????????? ??? ????????? ????? !");
						        return 1;
						    }
						    if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
						    {
							    if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))
								{
								    GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "* ?? ??????? %s's ?????? ???? ????? ?????.", giveplayer);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "* %s ??????? ??? ?????? ???? ????? ?????.", sendername);
									SendClientMessage(ProposeOffer[playerid], COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "?????????: %s ???????? ?? ?????? %s ??? ?????? ??????????? ????? (type 'yes', anything else will reject the Marriage)", sendername, giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									MarriageCeremoney[playerid] = 1;
									ProposedTo[ProposeOffer[playerid]] = playerid;
									GotProposedBy[playerid] = ProposeOffer[playerid];
									MarryWitness[ProposeOffer[playerid]] = 999;
									ProposeOffer[playerid] = 999;
									return 1;
								}
								else
								{
								    SendClientMessage(playerid, COLOR_GREY, "????????? ????? ?? ????? ?????? ?????????????? !");
								    return 1;
								}
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "?????, ??????? ????????? ???, ?? ????? ??? !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "????? ???????????? ??? !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"ticket",true) == 0)
			{
			    if(TicketOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(TicketOffer[playerid]))
			        {
			            if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
						{
				           	GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* ?? ????????? ????? $%d ??????? %s.", TicketMoney[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s ???????? ??? ????? $%d.", sendername, TicketMoney[playerid]);
							SendClientMessage(TicketOffer[playerid], COLOR_LIGHTBLUE, string);
							GivePlayerMoney(playerid, - TicketMoney[playerid]);
							GivePlayerMoney(TicketOffer[playerid], TicketMoney[playerid]);
							TicketOffer[playerid] = 999;
							TicketMoney[playerid] = 0;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "?????? ?? ????? ??? !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "????? ?? ????????? ??? ????? !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"paper",true) == 0)
			{
			    if(PaperOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(PaperOffer[playerid]))
			        {
			            if(BringingPaper[PaperOffer[playerid]] > 0)
			            {
			                if (ProxDetectorS(5.0, playerid, PaperOffer[playerid]))
							{
				            	GetPlayerName(PaperOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* ?? ??????? ?????? ?? ?????????? ????? %s (???????????? /read paper, ??????).", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s ?????? ???? ??????.", sendername);
								SendClientMessage(PaperOffer[playerid], COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pTitle]);
								strmid(Paper[playerid][pTitle], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pMaker]);
								strmid(Paper[playerid][pMaker], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine1]);
								strmid(Paper[playerid][pLine1], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine2]);
								strmid(Paper[playerid][pLine2], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine3]);
								strmid(Paper[playerid][pLine3], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine4]);
								strmid(Paper[playerid][pLine4], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine5]);
								strmid(Paper[playerid][pLine5], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine6]);
								strmid(Paper[playerid][pLine6], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine7]);
								strmid(Paper[playerid][pLine7], string, 0, strlen(string), 255);
								GotPaper[playerid] = 1;
								PaperOffer[playerid] = 999;
								return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "????????? ????? ?? ????? ??? !");
							    return 1;
							}
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "????? ?? ????????? ??? ?????? !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"boxing",true) == 0)
			{
			    if(BoxOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(BoxOffer[playerid]))
			        {
			            new points;
			            new mypoints;
			            GetPlayerName(BoxOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
			            new level = PlayerInfo[BoxOffer[playerid]][pBoxSkill];
						if(level >= 0 && level <= 50) { points = 40; }
						else if(level >= 51 && level <= 100) { points = 50; }
						else if(level >= 101 && level <= 200) { points = 60; }
						else if(level >= 201 && level <= 400) { points = 70; }
						else if(level >= 401) { points = 80; }
						if(PlayerInfo[playerid][pJob] == 12)
						{
							new clevel = PlayerInfo[playerid][pBoxSkill];
							if(clevel >= 0 && clevel <= 50) { mypoints = 40; }
							else if(clevel >= 51 && clevel <= 100) { mypoints = 50; }
							else if(clevel >= 101 && clevel <= 200) { mypoints = 60; }
							else if(clevel >= 201 && clevel <= 400) { mypoints = 70; }
							else if(clevel >= 401) { mypoints = 80; }
						}
						else
						{
						    mypoints = 30;
						}
						format(string, sizeof(string), "* ?? ??????? ??????????? ???????? ?? %s, ? ????? ???????? ? %d ?????????.",giveplayer,mypoints);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s ?????? ??? ?????? ???????? ?????, ?? ?????? ???????? ? %d ?????????.",sendername,points);
						SendClientMessage(BoxOffer[playerid], COLOR_LIGHTBLUE, string);
						SetPlayerHealth(playerid, mypoints);
						SetPlayerHealth(BoxOffer[playerid], points);
						SetPlayerInterior(playerid, 5); SetPlayerInterior(BoxOffer[playerid], 5);
						SetPlayerPos(playerid, 762.9852,2.4439,1001.5942); SetPlayerFacingAngle(playerid, 131.8632);
						SetPlayerPos(BoxOffer[playerid], 758.7064,-1.8038,1001.5942); SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
						TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
						GameTextForPlayer(playerid, "~r~Waiting", 3000, 1); GameTextForPlayer(BoxOffer[playerid], "~r~Waiting", 3000, 1);
						new name[MAX_PLAYER_NAME];
						new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(playerid, name, sizeof(name));
						format(dstring, sizeof(dstring), "%s", name);
						strmid(wstring, dstring, 0, strlen(dstring), 255);
						if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "???? ????????: ???? ???????? %s ????? ???????? ?????? %s, ????? 60 ?????? (??????? ?????????? ????).",  sendername, giveplayer);
							OOCOff(COLOR_WHITE,string);
							TBoxer = playerid;
							BoxDelay = 60;
						}
						GetPlayerName(BoxOffer[playerid], name, sizeof(name));
						format(dstring, sizeof(dstring), "%s", name);
						strmid(wstring, dstring, 0, strlen(dstring), 255);
						if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "???? ????????: ???? ???????? %s ????? ???????? ?????? %s, ????? 60 ?????? (??????? ?????????? ????).",  giveplayer, sendername);
							OOCOff(COLOR_WHITE,string);
							TBoxer = BoxOffer[playerid];
							BoxDelay = 60;
						}
						BoxWaitTime[playerid] = 1; BoxWaitTime[BoxOffer[playerid]] = 1;
						if(BoxDelay < 1) { BoxDelay = 20; }
						InRing = 1;
						Boxer1 = BoxOffer[playerid];
						Boxer2 = playerid;
                        SetPVarInt(playerid, "PlayerBoxing", 1);
						SetPVarInt(BoxOffer[playerid], "PlayerBoxing", 1);
						BoxOffer[playerid] = 999;
						return 1;
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "????? ?? ????????? ??? ??????????? ???????? !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"taxi",true) == 0)
			{
			    if(GetPVarInt(playerid, "TransportDuty") != 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "?? ?? ??????? !");
				    return 1;
			    }
	            if(GetPVarInt(playerid, "TaxiCallTime") > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "?? ??? ????? ??????? ????? !");
				    return 1;
	            }
	            if(PlayerOnMission[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "?? ?????? ????? ??????, ?? ????? ???????????? ??? ??????? !");
			        return 1;
			    }
	            if(TaxiCall < 999)
	            {
	                if(IsPlayerConnected(TaxiCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* ?? ??????? ????? ?? %s, ?? ?????? ?????? ??????, ???? ?? ?? ???????? ???.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* ??????? %s ?????? ???? ??????? ?????, ?????????? ????? ?? ????? ????????? ?????????.",sendername);
						SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Taxi Caller~n~~r~Goto redmarker", 5000, 1);
						SetPVarInt(playerid, "TaxiCallTime", 1);
						SetPVarInt(playerid,"TaxiAccepted",TaxiCall);
						TaxiCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "????? ??? ?? ???????? ? ????? !");
			    	return 1;
	            }
			}
			else if(strcmp(x_job,"bus",true) == 0)
			{
			    if(GetPVarInt(playerid, "TransportDuty") != 2)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????????? ???????? !");
				    return 1;
			    }
	            if(GetPVarInt(playerid, "BusCallTime") > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "?? ??? ????? ??????????? ??????? !");
				    return 1;
	            }
	            if(PlayerOnMission[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "?? ?????? ????? ??????, ?? ?? ?????? ???????????? ??? ??????? !");
			        return 1;
			    }
	            if(BusCall < 999)
	            {
	                if(IsPlayerConnected(BusCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* ?? ????? ??????????? ??????? ?? %s, ?? ?????? ?????? ??????, ?????? ?? ?? ???????? ?????.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* ?????????? ???????? %s ?????? ???? ?????????? ???????, ?????????? ????? ? ????? ????????? ?????????.",sendername);
						SendClientMessage(BusCall, COLOR_LIGHTBLUE, string);
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(BusCall, X, Y, Z);
						SetPlayerCheckpoint(playerid, X, Y, Z, 5);
						GameTextForPlayer(playerid, "~w~Bus Caller~n~~r~Goto redmarker", 5000, 1);
						SetPVarInt(playerid, "BusCallTime", 1);
						SetPVarInt(playerid,"BusAccepted",BusCall);
						BusCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "????? ??? ?? ???????? ? ???????? !");
			    	return 1;
	            }
			}
			else if(strcmp(x_job,"medic",true) == 0)
			{
			    if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
			    {
		            if(GetPVarInt(playerid, "MedicCallTime") > 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "?? ??? ????? ??????? ????????!");
					    return 1;
		            }
		            if(PlayerOnMission[playerid] > 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "?? ?????? ????? ??????, ?? ?? ?????? ???????????? ??? ???????!");
				        return 1;
				    }
		            if(MedicCall < 999)
		            {
		                if(IsPlayerConnected(MedicCall))
		                {
		                    GetPlayerName(playerid, sendername, sizeof(sendername));
		                	GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
		                	format(string, sizeof(string), "* ?? ????? ??????? ???????? ?? %s, ? ??? ???? 30 ??????, ????? ????????? ????.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ????? ???? 30 ?????? ??????? ?????? ????? ??????.");
	                        format(string, sizeof(string), "* ??????? %s ???? ?????? ??????? ????????, ?????????? ????? ? ????? ????????? ?????????.",sendername);
							SendClientMessage(MedicCall, COLOR_LIGHTBLUE, string);
							new Float:X,Float:Y,Float:Z;
							GetPlayerPos(MedicCall, X, Y, Z);
							SetPlayerCheckpoint(playerid, X, Y, Z, 5);
							GameTextForPlayer(playerid, "~w~Medic Caller~n~~r~Goto redmarker", 5000, 1);
							SetPVarInt(playerid, "MedicCallTime", 1);
							MedicCall = 999;
							return 1;
						}
		            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "????? ??? ?? ?????? ???????? !");
				    	return 1;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "?? ?? ??????? !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"mechanic",true) == 0)
			{
			    if(PlayerInfo[playerid][pJob] != 7)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "?? ?? ????????????? ??????? !");
				    return 1;
			    }
	            if(GetPVarInt(playerid, "MechanicCallTime") > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "?? ??? ????? ????????????? ??????? !");
				    return 1;
	            }
	            if(PlayerOnMission[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "?? ?????? ????? ??????, ?? ?? ?????? ???????????? ??? ??????? !");
			        return 1;
			    }
	            if(MechanicCall < 999)
	            {
	                if(IsPlayerConnected(MechanicCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* ?? ????? ????????????? ??????? ?? %s, ? ??? ???? 30 ??????, ????? ????????? ????.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ????? ???? 30 ?????? ??????? ?????? ????? ??????.");
                        format(string, sizeof(string), "* ????????????? ??????? %s ???? ?????? ????????????? ???????, ?????????? ????? ? ????? ????????? ?????????.",sendername);
						SendClientMessage(MechanicCall, COLOR_LIGHTBLUE, string);
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MechanicCall, X, Y, Z);
						SetPlayerCheckpoint(playerid, X, Y, Z, 5);
						GameTextForPlayer(playerid, "~w~Mechanic Caller~n~~r~Goto redmarker", 5000, 1);
						SetPVarInt(playerid, "MechanicCallTime", 1);
						MechanicCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "????? ??? ?? ?????? ?????????????? ???????? !");
			    	return 1;
	            }
			}
		    else if(strcmp(x_job,"job",true) == 0)
			{
			    if(GettingJob[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ??????, ????? ?? ???????????, ??? ?? ?????? ??????, ?? ???????? 5-??????? ????????.");
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???????????? ? ????? ????? ???????, ??????????? /help, ????? ?????? ???? ????? ???????.");
			        PlayerInfo[playerid][pJob] = GettingJob[playerid];
			        GettingJob[playerid] = 0;
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "?? ??? ???? ?? ???? ? ????? ??????!");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"refill",true) == 0)
			{
			    if(RefillOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(RefillOffer[playerid]))
			        {
			            if(GetPlayerMoney(playerid) > RefillPrice[playerid])
			            {
			                GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
			                new car = gLastCar[playerid];
			                new fuel;
			                PlayerInfo[RefillOffer[playerid]][pMechSkill] ++;
			                if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 50)
							{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* ??? ????????????? ????? ???????? - ?????? ??????? 2, ?? ?????? ???????? ?????? ??????? ? ????? ??????????? ???????."); }
							else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 100)
							{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* ??? ????????????? ????? ???????? - ?????? ??????? 3, ?? ?????? ???????? ?????? ??????? ? ????? ??????????? ???????."); }
							else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 200)
							{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* ??? ????????????? ????? ???????? - ?????? ??????? 4, ?? ?????? ???????? ?????? ??????? ? ????? ??????????? ???????."); }
							else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 400)
							{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* ??? ????????????? ????? ???????? - ?????? ??????? 5, ?? ?????? ???????? ?????? ??????? ? ????? ??????????? ???????."); }
							new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
							if(level >= 0 && level <= 50)
							{ fuel = 15; }
							else if(level >= 51 && level <= 100)
							{ fuel = 40; }
							else if(level >= 101 && level <= 200)
							{ fuel = 60; }
							else if(level >= 201 && level <= 400)
							{ fuel = 80; }
							else if(level >= 401)
							{ fuel = 100; }
			                format(string, sizeof(string), "* ?? ????? ????????? ???? ?????????? ? %d%, ?? $%d ?? ?????? ???????????? %s.",fuel,RefillPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* ?? ????? ????????? %s's ?????????? ? %d%, $%d ??? ???????? ? ????? ????????.",sendername,fuel,RefillPrice[playerid]);
							SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[RefillOffer[playerid]][pPayCheck] += RefillPrice[playerid];
							GivePlayerMoney(playerid, -RefillPrice[playerid]);
							if(Gas[car] < 110) { Gas[car] += fuel; }
					        RefillOffer[playerid] = 999;
							RefillPrice[playerid] = 0;
							return 1;
			            }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "?? ????????????, ????????????? ?????????? !");
						    return 1;
						}
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "????? ?? ????????? ????? ????????? ??? ?????????? !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"live",true) == 0)
			{
			    if(LiveOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(LiveOffer[playerid]))
			        {
				        if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
						{
						    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ?????????? ?? ????????? ????????");
							SendClientMessage(LiveOffer[playerid], COLOR_LIGHTBLUE, "* ?? ?????????? ?? ????????? ???????? (??????????? /live again).");
							TogglePlayerControllable(playerid, 0);
							TogglePlayerControllable(LiveOffer[playerid], 0);
							TalkingLive[playerid] = LiveOffer[playerid];
							TalkingLive[LiveOffer[playerid]] = playerid;
							LiveOffer[playerid] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "?? ?????? ?? ????????? !");
							return 1;
						}
					}
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "????? ??? ?? ????????? ???? ????????!");
				    return 1;
				}
			}
			else if(strcmp(x_job,"lawyer",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /accept lawyer [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (gTeam[playerid] == 2)
				{
				    if(IsPlayerConnected(giveplayerid))
				    {
				        if(giveplayerid != INVALID_PLAYER_ID)
				        {
				            if(PlayerInfo[giveplayerid][pJob] == 2)
				            {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* ?? ????????? %s ??????????? ???????????? ?? ?????? ????????.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
								format(string, sizeof(string), "* ?????? %s ???????? ??? ?????????? ???????????? ?? ?????? ????????. (??????????? /free)", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
								ApprovedLawyer[giveplayerid] = 1;
							    return 1;
							}
						}
					}
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "???????????????? ????????! (?? ?? ??????????? / ????? aint ??????? / ?????? ????????????? ????????)");
				    return 1;
				}
			}
			else if(strcmp(x_job,"bodyguard",true) == 0)
			{
			    if(GuardOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > GuardPrice[playerid])
				    {
					    if(IsPlayerConnected(GuardOffer[playerid]))
					    {
					        GetPlayerName(GuardOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* ?? ??????? ?????? ?? $%d ?? ????????????? %s.",GuardPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s ?????????? ?? ???? ??????, ?? $%d",sendername,GuardPrice[playerid]);
							SendClientMessage(GuardOffer[playerid], COLOR_LIGHTBLUE, string);
							GivePlayerMoney(GuardOffer[playerid], GuardPrice[playerid]);
							GivePlayerMoney(playerid, -GuardPrice[playerid]);
					        GuardOffer[playerid] = 999;
							GuardPrice[playerid] = 0;
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ???????????? ?????? !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "????? offerd ?? ????? ?????? !");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"drugs",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrugs] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* ?? ?????? %d ????? ?? $%d ?? ???????? ??????????? %s.",DrugGram[playerid],DrugPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s ????? ??? %d ?????, $%d ??? ???????? ? ????? ????????.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pPayCheck] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrugsSkill] ++;
								GivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* ??? ????? ???????? ??????????? - ?????? ??????? 2, ?? ?????? ?????? ?????? ??????? ? ????? ???????."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* ??? ????? ???????? ??????????? - ?????? ??????? 3, ?? ?????? ?????? ?????? ??????? ? ????? ???????."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* ??? ????? ???????? ??????????? - ?????? ??????? 4, ?? ?????? ?????? ?????? ??????? ? ????? ???????."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* ??? ????? ???????? ??????????? - ?????? ??????? 5, ?? ?????? ?????? ?????? ??????? ? ????? ???????."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "?? ????????? ????????? ???????????, ??????????? ?? ??????? !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ???????????? ?? ????????? !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "????? offerd ?? ????? ????????? !");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"sex",true) == 0)
			{
			    if(SexOffer[playerid] < 999)
				{
					if(GetPlayerMoney(playerid) > SexPrice[playerid])
			  		{
						if (IsPlayerConnected(SexOffer[playerid]))
						{
						    new Car = GetPlayerVehicleID(playerid);
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(SexOffer[playerid], Car))
						    {
								GetPlayerName(SexOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* ? ??? ??? ???? ?? ?????? %s, ??? $%d.", giveplayer, SexPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s ???? ???? ? ????, $%d ??? ???????? ? ????? ????????.", sendername, SexPrice[playerid]);
								SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[SexOffer[playerid]][pPayCheck] += SexPrice[playerid];
								GivePlayerMoney(playerid, -SexPrice[playerid]);
								PlayerInfo[SexOffer[playerid]][pSexSkill] ++;
								if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 50)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* ??? ??????????? ????? - ?????? ??????? 2, ?? ??????????? ?????? ??? (????????), ? ?????? ???????? ?????????? ?? ?????."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 100)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* ??? ??????????? ????? - ?????? ??????? 3, ?? ??????????? ?????? ??? (????????), ? ?????? ???????? ?????????? ?? ?????."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 200)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* ??? ??????????? ????? - ?????? ??????? 4, ?? ??????????? ?????? ??? (????????), ? ?????? ???????? ?????????? ?? ?????."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 400)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* ??? ??????????? ????? - ?????? ??????? 5, ?? ??????????? ?????? ??? (????????), ? ?????? ???????? ?????????? ?? ?????."); }
								if(STDPlayer[playerid] == 0)
								{
								    if(Condom[playerid] < 1)
									{
									    new Float:health;
									    new level = PlayerInfo[SexOffer[playerid]][pSexSkill];
									    if(level >= 0 && level <= 50)
									    {
									        if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 30.0); }
											new rand = random(sizeof(STD1));
											STDPlayer[playerid] = STD1[rand];
											STDPlayer[SexOffer[playerid]] = STD1[rand];
											if(STD1[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 30 ???????? + ??????? ?????., ???? ????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You haven't got a STD while having Sex."); }
											else if(STD1[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 30 ???????? + Chlamydia ??-?? ?????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Chlamydia because of the Sex."); }
											else if(STD1[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 30 ???????? + ??????? ??-?? ?????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Gonorrhea because of the Sex."); }
											else if(STD1[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 30 ???????? + ??????? ??-?? ?????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Syphilis because of the Sex."); }
										}
										else if(level >= 51 && level <= 100)
									    {
									        if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 60.0); }
											new rand = random(sizeof(STD2));
											STDPlayer[playerid] = STD2[rand];
											STDPlayer[SexOffer[playerid]] = STD2[rand];
											if(STD2[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 60 ???????? + ??????? ?????., ???? ????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You haven't got a STD while having Sex."); }
											else if(STD2[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 60 ???????? + Chlamydia ??-?? ?????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Chlamydia because of the Sex."); }
											else if(STD2[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 60 ???????? + ??????? ??-?? ?????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Gonorrhea because of the Sex."); }
											else if(STD2[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 60 ???????? + ??????? ??-?? ?????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Syphilis because of the Sex."); }
										}
										else if(level >= 101 && level <= 200)
									    {
									        if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 90.0); }
											new rand = random(sizeof(STD3));
											STDPlayer[playerid] = STD3[rand];
											STDPlayer[SexOffer[playerid]] = STD3[rand];
											if(STD3[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 90 ???????? + ??????? ?????., ???? ????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You haven't got a STD while having Sex."); }
											else if(STD3[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 90 ???????? + Chlamydia ??-?? ?????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Chlamydia because of the Sex."); }
											else if(STD3[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 90 ???????? + ??????? ??-?? ?????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Gonorrhea because of the Sex."); }
											else if(STD3[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 90 ???????? + ??????? ??-?? ?????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Syphilis because of the Sex."); }
										}
										else if(level >= 201 && level <= 400)
									    {
									        if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 120.0); }
											new rand = random(sizeof(STD4));
											STDPlayer[playerid] = STD4[rand];
											STDPlayer[SexOffer[playerid]] = STD4[rand];
											if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 120 ???????? + ??????? ?????., ???? ????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You haven't got a STD while having Sex."); }
											else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 120 ???????? + Chlamydia ??-?? ?????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Chlamydia because of the Sex."); }
											else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 120 ???????? + ??????? ??-?? ?????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Gonorrhea because of the Sex."); }
											else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? 120 ???????? + ??????? ??-?? ?????."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Syphilis because of the Sex."); }
										}
										else if(level >= 401)
										{
										    if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 150.0); }
											SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ??? ??????????? ??????? ???????????? ????????? ?????, ?? ???? ??????? ???????? ? ??????? ?????..");
											SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* ??????????? ??????? ???????????? ????? ????????? ?????, ?? ???????? ??????? ???????? ? ??????? ?????..");
										}
				      				}
									else
									{
									    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* ????? ??????????? ???????????.");
									    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????????? ???????????.");
									    Condom[playerid] --;
									}
								}
								else
								{
								    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* ??? ????? ??? ??? ??????? ?????., ?? ????? ???????? ??????.");
								    return 1;
								}
								SexOffer[playerid] = 999;
								return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "?? ??? ????? ?? ?????????? ??? ? ?????????? !");
							    return 1;
							}
						}//Connected or not
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ???????????? ????!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "? ??? ??? ???????? ????? offerd ?????? !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"repair",true) == 0)
			{
			    if(RepairOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > RepairPrice[playerid])
				    {
					    if(IsPlayerInAnyVehicle(playerid))
					    {
					        if(IsPlayerConnected(RepairOffer[playerid]))
					        {
						        GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        RepairCar[playerid] = GetPlayerVehicleID(playerid);
						        SetVehicleHealth(RepairCar[playerid], 1000.0);
								format(string, sizeof(string), "* ?? ???????????? ???? ?????????? ?? $%d ?? ?????? ??????? %s.",RepairPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* ?? ?????????? %s's ??????????, $%d ??? ???????? ? ????? ????????.",sendername,RepairPrice[playerid]);
								SendClientMessage(RepairOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[RepairOffer[playerid]][pMechSkill] ++;
				                if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* ??? ????????????? ????? ???????? - ?????? ??????? 2, ?? ?????? ???????? ?????? ??????? ? ????? ??????????? ???????."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* ??? ????????????? ????? ???????? - ?????? ??????? 3, ?? ?????? ???????? ?????? ??????? ? ????? ??????????? ???????."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* ??? ????????????? ????? ???????? - ?????? ??????? 4, ?? ?????? ???????? ?????? ??????? ? ????? ??????????? ???????."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 400)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* ??? ????????????? ????? ???????? - ?????? ??????? 5, ?? ?????? ???????? ?????? ??????? ? ????? ??????????? ???????."); }
								PlayerInfo[RepairOffer[playerid]][pPayCheck] += RepairPrice[playerid];
								GivePlayerMoney(playerid, -RepairPrice[playerid]);
						        RepairOffer[playerid] = 999;
								RepairPrice[playerid] = 0;
								return 1;
							}
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ???????????? ?????? !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "????? offerd ??, ????? ???????????? ??? ?????????? !");
			        return 1;
			    }
			}
			else { return 1; }
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/refill", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 7)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "?? ?? ????????????? ???????!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /refill [playerid/PartOfName] [price]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "???? ?? ?????? ???? ?????? 1, ??? ???? 99999!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ????? ??????? ?????!"); return 1; }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* ?? offerd %s, ????? ????? ????????? ??? ?????????? ??? $%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ????????????? ??????? %s ????? ????? ????????? ??? ?????????? ??? $%d, (?????????? /accept refill) ?????????.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RefillOffer[playa] = playerid;
						RefillPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "??? ????? ?? ????? ??? / ?? ? ??????????.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "??? ????? ???????? ??????????.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/repair", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 7)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "?? ?? ????????????? ???????!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /repair [playerid/PartOfName] [price]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "???? ?? ?????? ???? ?????? 1, ??? ???? 99999!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ????? ??????? ?????!"); return 1; }
				    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* ?? offerd %s, ????? ?????????? ??? ?????????? ??? $%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ????????????? ??????? %s ????? ???????????? ??? ?????????? ??? $%d, (?????????? /accept repair) ?????????.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RepairOffer[playa] = playerid;
						RepairPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "??? ????? ?? ????? ??? / ?? ? ??????????.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "??? ????? ???????? ??????????.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/callcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(CarCalls[playerid] > 0)
		    {
		        new Float:plocx,Float:plocy,Float:plocz;
	            GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(CarID[playerid],plocx,plocy+4, plocz);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ????????? ?????????? ??????.");
				CarCalls[playerid] -= 1;
				format(string, sizeof(string), "* ?? ?????? ??????? ???? ????????? ?????????? ? ??????? %d ?????? ??????.", CarCalls[playerid]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY, "???????????????? ???????? !");
		    }
		}
	    return 1;
	}
	if(strcmp(cmd, "/family", true) == 0 || strcmp(cmd, "/f", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "?? ?? ?????? ????????, ?? ????????");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: (/f)amily [family chat]");
				return 1;
			}
			if (gTeam[playerid] >= 5 || PlayerInfo[playerid][pFMember] < 255)
			{
			    new leader = PlayerInfo[playerid][pLeader];
			    new member = PlayerInfo[playerid][pMember];
			    if(member==5)
			    {
			        if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Godfather %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Underboss %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Capo %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Soldier %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Associate %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Outsider %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Outsider %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				if(member==6)
			    {
					if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ????? ????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ????? ????? %s: %s. ))  **", sendername, result); }
			        else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ??-??????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ?????????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ?????? %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==8)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Vice-Director %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Special Agent %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Agent %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Marksman %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Freelancer %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Freelancer %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==9)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Network Producer %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Network Editor %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Network Anchor %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Local Editor %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Local Reporter %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Intern %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Intern %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==10)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Taxi Company Owner %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Shift Supervisor %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Dispatcher %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Cabbie %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Taxi Rookie %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Trainee %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Trainee %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==11)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Boss %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Under Boss %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Manager %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Senior Instructor %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Instructor %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Trainee %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Trainee %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==12)
				{
				    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ???? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ?????? ???? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ?????????? ?????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ????????? ????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ?????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ??????? %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ??????? %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==13)
				{
				    if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ??? ? ?????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ??? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ????????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ????????? ????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ?????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ???????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ????? %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==14)
				{
				    if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ?????? ???? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ????????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ????????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ??????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ???????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ???? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ???????????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ??????? %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ??????? %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==15)
				{
					if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "** Padre %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "** Adjutno %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** Capitulio %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** Cabeza %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** Gestion %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** Autoridad %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Cutthroad %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Gangster %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Soldato %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Verificado %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Stanger %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Stanger %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==16)
				{
				    if(PlayerInfo[playerid][pRank] == 17) { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "** ????????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "** ????????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "** ???? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "** ??????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ??????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ?????????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ??????????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ?????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ????? %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==17)
				{
				    if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "** ???????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "** ????????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ???????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ???????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ???????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ???????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ?????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ???????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ???? %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ???? %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==18)
				{
				    if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ?????? ???? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ????????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ??????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ??????????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ??????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ?????????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ????? %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==19)
				{
	    			if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ????????? %s: %s. **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ??????? ??????? %s: %s. **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ??????? ???????? %s: %s. **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????? ???????? %s: %s. **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ???????? ????????? %s: %s. **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ??????? %s: %s. **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
                }
				else if(member==20)//????????????
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ?????? ???? ?-34 %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ?????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ?????????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ?????? %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==21)
				{
				    if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ?????? ???? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ??? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ????????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ??????????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ?????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ??????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ?????????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ??????? %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ??????? %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(member==22)
				{
				    if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "** ???? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** ?????? ???? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** ????????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ?????? ??? %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ???????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ???????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ????? %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ??????? %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ??????? %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==5)
				{
				    format(string, sizeof(string), "** Godfather %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==6)
				{
				    format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==8)
				{
				    format(string, sizeof(string), "** Director %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==9)
				{
				    format(string, sizeof(string), "** Network Producer %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==10)
				{
				    format(string, sizeof(string), "** Taxi Company Owner %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==11)
				{
				    format(string, sizeof(string), "** Boss %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==12)
				{
				    format(string, sizeof(string), "** ???? %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==13)
				{
				    format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==14)
				{
				    format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==15)
				{
				    format(string, sizeof(string), "** Padre %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==16)
				{
				    format(string, sizeof(string), "** ?????? %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==17)
				{
				    format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==18)
				{
				    format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==19)
				{
				    format(string, sizeof(string), "** ????????? %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==21)
				{
				    format(string, sizeof(string), "** ????? %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(leader==22)
				{
				    format(string, sizeof(string), "** ???? %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
				else if(PlayerInfo[playerid][pFMember] < 255)
			    {
			        if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Godfather %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Underboss %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Capo %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Soldier %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Associate %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Outsider %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Outsider %s: %s. )) **", sendername, result); }
					SendNewFamilyMessage(PlayerInfo[playerid][pFMember], TEAM_AZTECAS_COLOR, string);
				}
				printf("%s", string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "?? ?? ????? ?????!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/news", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
			    new vehicleid = GetPlayerVehicleID(playerid);
		        if(PlayerInfo[playerid][pMuted] == 1)
				{
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "?? ?? ?????? ????????, ?? ???? ?????????? ?????????");
					return 1;
				}
				if(vehicleid == carnews[1] || vehicleid == carnews[2] || vehicleid == carnews[3] || vehicleid == carnews[4] || vehicleid == carnews[5] || vehicleid == carnews[6] || vehicleid == carnews[7] || vehicleid == carnews[8])
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /news [newstext]");
						return 1;
					}
					format(string, sizeof(string), "NR %s: %s", sendername, result);
					OOCNews(COLOR_NEWS,string);
					PlayerInfo[playerid][pNewsSkill] ++;
					if(PlayerInfo[playerid][pNewsSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ????? ????????? ???????? - ?????? ??????? 2, ????? ?? ? ????????? ????????? ?????????? ???????? ? ????? ??????????."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ????? ????????? ???????? - ?????? ??????? 3, ????? ?? ? ????????? ????????? ?????????? ???????? ? ????? ??????????."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ????? ????????? ???????? - ?????? ??????? 4, ?? ?????? ????????? ?????????? ???????? ??????."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ??? ????? ????????? ???????? - ?????? ??????? 5, ?? ?????? ?????? ???????? ????? ? ????? ?????????, ???????? ?? ??????."); }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????????? ? ??????? ???????? ??? ????????? !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "?? ?? ???????? ???????? !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/live", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
			    if(TalkingLive[playerid] != 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ????? ?????? ???????????.");
			        SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, "* ????? ?????? ???????????.");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        return 1;
			    }
			    if(PlayerInfo[playerid][pNewsSkill] < 400)
				{
				    SendClientMessage(playerid, COLOR_GREY, "??? ????? ????????? ???????? ?????, ????? ???????? ????? ??????? ? ?????? !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /live [playerid/PartOfName]");
					return 1;
				}
				//giveplayerid = strval(tmp);
		        giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ???????? ????? ? ???? ???????????????!"); return 1; }
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* ?? ?????????? %s, ????? ????? ????? ??????.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s ???????????? ???, ????? ????? ????? ??????, ?????????? (/accept live) ???????.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							LiveOffer[giveplayerid] = playerid;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "?? ?????? ?? ????? ?????? !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "???????????????? ????????????? ????????/????????!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "?? ?? ???????? ???????? !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/selldrugs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 4)
		    {
				SendClientMessage(playerid, COLOR_GREY, "?? ?? ????? ?????!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /selldrugs [playerid/PartOfName] [ammount] [price]");
				return 1;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "?????? ?? ?????? ???? ?????? 1, ??? ???? 99!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "???? ?? ?????? ???? ?? ?????? 1, ??? ???? 99999!"); return 1; }
			if(needed > PlayerInfo[playerid][pDrugs]) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ???, ????? ?????????? ? ???? !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "????? ??????? ??? ???????????????!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* ?? offerd %s, ????? ?????? %d ????? ?????????? ??? $%d .", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ???????? ??????????? %s ????? ??????? ??? %d ????? ?? $%d, (??? /accept drugs) ???????.", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "??? ????? ?? ????? ??? !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "??? ????? ???????? ??????????.");
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/usedrugs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(GetPVarInt(playerid,"PlayerBoxing") > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "????????? ????????????? ??????, ? ?? ????? ??? ?? ???????? !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pDrugs] > 1)
			{
			    PlayerStoned[playerid] += 1;
			    if(PlayerStoned[playerid] >= 2) { GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1); }
			    new Float:health;
			    GetPlayerHealth(playerid, health);
			    if(PlayerInfo[playerid][pDrugPerk] > 0)
			    {
			        new hp = 2 * PlayerInfo[playerid][pDrugPerk]; hp += 20;
					SetPlayerHealth(playerid, health + hp);
			    }
			    else
			    {
			        SetPlayerHealth(playerid, health + 20.0);
			    }
			    SendClientMessage(playerid, COLOR_GREY, "???????????? 2 ?????? ????????? !");
			    PlayerInfo[playerid][pDrugs] -= 2;
			    if(STDPlayer[playerid]==1)
				{
				     STDPlayer[playerid] = 0;
				     SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ?????? ?? ???????? ?????. ?????? ??-?? ?????????? !");
				}
				else if(STDPlayer[playerid]==2)
				{
				     STDPlayer[playerid] = 1;
				     SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? ?????. ? Chlamydia ??-?? ?????????? !");
				}
				else if(STDPlayer[playerid]==3)
				{
				     STDPlayer[playerid] = 2;
				     SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? ?????. ? ??????? ??-?? ?????????? !");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ??????? ????????? ? ?????? !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/healme", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if (PlayerToPoint(3, playerid,1173.2563,-1323.3102,15.3943)||PlayerToPoint(3, playerid,2029.5945,-1404.6426,17.2512))
			{
	            if(STDPlayer[playerid] > 0)
	            {
					STDPlayer[playerid] = 0;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ?????? ?? ???????? ?????. ?????? ??-?? ?????? ???????? !");
					GivePlayerMoney(playerid, -1000);
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "??????: ??? ??????????? ???? ???????? 1000$,-. ????? ????????!");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "? ??? ??? ?????., ????? ?????? !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "?? ?? ? ???????? !");
	        }
        }
		return 1;
	}
	
	if(strcmp(cmd, "/quitjobpl", true) == 0)
	{
        if(PlayerInfo[playerid][pAdmin] >= 1338) return SendClientMessage(playerid,COLOR_RED," ?? ?? ?????");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /quitjobpl [playerid/PartOfName]");
			return 1;
		}
		new playa;
		playa = ReturnUser(tmp);
		new PName[MAX_PLAYER_NAME];
		GetPlayerName(playerid,PName,sizeof(PName));
		GetPlayerName(playa, giveplayer, sizeof(giveplayer));
		format(string, sizeof(string), "* ?? ??????? ? ?????? %s!", giveplayer);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* ????? %s ?????? ??? ? ??????!", PName);
		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		PlayerInfo[playa][pJob] = 0;
		PlayerInfo[playa][pChar] = 0;
		PlayerInfo[playa][pContractTime] = 0;
		return 1;
	}
	
	if(strcmp(cmd, "/steal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(PlayerInfo[playerid][pJob] != 17) { SendClientMessage(playerid,COLOR_GREY," ?? ?? ???"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /steal [playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(!ProxDetectorS(1.0, playerid, playa)) { SendClientMessage(playerid,COLOR_GREY,"???? ????? ??????? ?????? ?? ???"); return 1; }
			        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ????????? ????!"); return 1; }
			        if(GetPlayerMoney(playa) <= 0) { SendClientMessage(playerid,COLOR_GREY," ???? ????? ???, ? ???? ?????? ?????"); return 1; }
					new PName[MAX_PLAYER_NAME];
					if(GetPlayerMoney(playa) >= 5000)
					{
					    new vorm=random(5000);
					    GivePlayerMoney(playerid,vorm);
					    GivePlayerMoney(playa,-vorm);
					    GetPlayerName(playerid,PName,sizeof(PName));
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* ?? ???????? %s ?????? ?? %d$!", giveplayer,vorm);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s ??? ??????? ?? %d$!", PName,vorm);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s ??????? %s", PName,giveplayer);
						ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else if(GetPlayerMoney(playa) < 5000 && GetPlayerMoney(playa) > 0)
					{
					    new m=GetPlayerMoney(playa);
					    new vorm=random(m);
					    GivePlayerMoney(playerid,vorm);
					    GivePlayerMoney(playa,-vorm);
					    GetPlayerName(playerid,PName,sizeof(PName));
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* ?? ???????? %s ?????? ?? %d$!", giveplayer, vorm);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s ??? ??????? ?? %d$!", PName,vorm);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s ??????? %s", PName,giveplayer);
						ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					PlayerInfo[playerid][pVorSkill] ++;
					if(PlayerInfo[playerid][pVorSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ?? 2 ??????, ??????????? ???????, ???? ?????? ?????"); }
					else if(PlayerInfo[playerid][pVorSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ?? 3 ??????, ??????????? ???????, ???? ?????? ?????"); }
					else if(PlayerInfo[playerid][pVorSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ?? 4 ??????, ??????????? ???????, ???? ?????? ?????"); }
					else if(PlayerInfo[playerid][pVorSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ?? 5 ??????, ??????????? ???????, ???? ?????? ?????"); }
					new level = PlayerInfo[playerid][pVorSkill];
					if(level >= 0 && level <= 50)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "????? ????? ??????? ?????????? 20 ?????");
					    PlayerInfo[playerid][pVorTime] = 1200;
					}
					else if(level >= 51 && level <= 100)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "????? ????? ??????? ?????????? 18 ?????");
					    PlayerInfo[playerid][pVorTime] = 1080;
					}
					else if(level >= 101 && level <= 200)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "????? ????? ??????? ?????????? 16 ?????");
					    PlayerInfo[playerid][pVorTime] = 960;
					}
					else if(level >= 201 && level <= 400)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "????? ????? ??????? ?????????? 14 ?????");
					    PlayerInfo[playerid][pVorTime] = 840;
					}
					else if(level >= 401)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "????? ????? ??????? ?????????? 12 ?????");
					    PlayerInfo[playerid][pVorTime] = 720;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "??? ?????? ??????!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/eject", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        new State;
	        if(IsPlayerInAnyVehicle(playerid))
	        {
         		State=GetPlayerState(playerid);
		        if(State!=PLAYER_STATE_DRIVER)
		        {
		        	SendClientMessage(playerid,COLOR_GREY,"?? ?????? ?????? ??????? ????? ??? ???????? !");
		            return 1;
		        }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /eject [playerid/PartOfName]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				new test;
				test = GetPlayerVehicleID(playerid);
				if(IsPlayerConnected(playa))
				{
				    if(playa != INVALID_PLAYER_ID)
				    {
				        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ??????? ????!"); return 1; }
				        if(IsPlayerInVehicle(playa,test))
				        {
							new PName[MAX_PLAYER_NAME];
							GetPlayerName(playerid,PName,sizeof(PName));
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* ?? ??????? %s ?? ??????????!", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* ?? ???? ????????? ?? ?????????? %s !", PName);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							RemovePlayerFromVehicle(playa);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "??? ????? ?? ????????? ? ????? ?????????? !");
						    return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "???????????????? ????????????? ????????/????????!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "?? ?????? ???? ? ???????????? ????????, ????? ???????????? ??? !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sex", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if(PlayerInfo[playerid][pJob] == 3)
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
					SendClientMessage(playerid, COLOR_GREY, "? ??? ????? ?????? ???? ? ?????????? !");
					return 1;
			    }
			    new Car = GetPlayerVehicleID(playerid);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /sex [playerid/PartOfName] [price]");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				new money;
				money = strval(tmp);
				if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "???? ?? ?????? ???? ?????? 1, ??? ???? 99999!"); return 1; }
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "? ??? ?? ????? ???? ????? ? ???? ???????????????!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, Car))
						    {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* ?? offerd %s, ????? ????? ???? ? ????, ??? $%d.", giveplayer, money);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* ? ????? %s ???? offerd ??, ????? ????? ???? ? ???, ?? $%d (??? /accept sex) ???????.", sendername, money);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					            SexOffer[giveplayerid] = playerid;
					            SexPrice[giveplayerid] = money;
				            }
				            else
				            {
				                SendClientMessage(playerid, COLOR_GREY, "?? ??? ?????? ????? ?????? ???? ? ?????????? ?????? !");
				                return 1;
				            }
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "??? ????? ?? ????? ??? !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "??? ????? ???????? ?????????? !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "?? ?? ????? !");
			}
		}//not connected
		return 1;
		}
	if(strcmp(cmd, "/wanted", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
				new x;
				SendClientMessage(playerid, COLOR_GREEN, "??????? ????????? ?????????????:");
			    for(new i=0; i < MAX_PLAYERS; i++) {
					if(IsPlayerConnected(i))
					{
					    if(WantedLevel[i] > 1)
					    {
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "%s%s: %d", string,giveplayer,WantedLevel[i]);
							x++;
							if(x > 3) {
							    SendClientMessage(playerid, COLOR_YELLOW, string);
							    x = 0;
								format(string, sizeof(string), "");
							} else {
								format(string, sizeof(string), "%s, ", string);
							}
						}
					}
				}
				if(x <= 3 && x > 0) {
					string[strlen(string)-2] = '.';
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "?? ?? ??????????? / ??? / ???????????? ??????? !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/dropcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if(PlayerInfo[playerid][pJob] == 5)
			{
			    if(PlayerOnMission[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "?? ?????? ????? ??????, ?? ????? ???????????? ??? ??????? !");
			        return 1;
			    }
		        if(PlayerInfo[playerid][pCarTime] == 0)
		        {
		            GameTextForPlayer(playerid, "~w~Car Selling ~n~~r~Drop the car at the Crane", 5000, 1);
		            CP[playerid] = 1;
		            SetPlayerCheckpoint(playerid, -1548.3618,123.6438,3.2966,8.0);
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "?? ??? ??????? ??????????, ????? ???? ?????????? ?????!");
		        }
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "?? ?? ??????????? !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/quitjob", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
		    if(PlayerInfo[playerid][pJob] > 0)
		    {
		        if(PlayerInfo[playerid][pDonateRank] > 0)
		        {
		            if(PlayerInfo[playerid][pContractTime] >= 2)
					{
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "*?? ?????? ? ????????? ????? ?????? 1 ???.");
					    PlayerInfo[playerid][pJob] = 0;
					    PlayerInfo[playerid][pChar] = 0;
					    PlayerInfo[playerid][pContractTime] = 0;
					}
					else
					{
					    new chours = 2 - PlayerInfo[playerid][pContractTime];
					    format(string, sizeof(string), "* ??? ???????? ????? %d ?????, ????? ????????? ???? ????????", chours / 2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
		        }
		        else
		        {
					if(PlayerInfo[playerid][pContractTime] >= 10)
					{
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??? ?????????? ??? 5-??????? ????????, ? ?????? ???????? ? ????? ??????.");
					    PlayerInfo[playerid][pJob] = 0;
					    PlayerInfo[playerid][pChar] = 0;
					    PlayerInfo[playerid][pContractTime] = 0;
					}
					else
					{
					    new chours = 10 - PlayerInfo[playerid][pContractTime];
					    format(string, sizeof(string), "* ??? ???????? ????? %d ?????, ????? ????????? ???? ????????", chours / 2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "? ??? ??? ?????? !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/bail", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayerInfo[playerid][pJailed]==1)
			{
			    if(JailPrice[playerid] > 0)
			    {
			        if(GetPlayerMoney(playerid) > JailPrice[playerid])
			        {
			            format(string, sizeof(string), "?? ???????? ???? ???: $%d", JailPrice[playerid]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, -JailPrice[playerid]);
						JailPrice[playerid] = 0;
						WantLawyer[playerid] = 0; CallLawyer[playerid] = 0;
						PlayerInfo[playerid][pJailTime] = 1;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ?????? ???????????? ???? ?? ????? !");
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "? ??? ??? ???? ?? ????? !");
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ?????????? ? ?????? !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/clear", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			new member = PlayerInfo[playerid][pMember];
			new leader = PlayerInfo[playerid][pLeader];
			new rank = PlayerInfo[playerid][pRank];
	 		if(gTeam[playerid] == 2)
			{
				if (!PlayerToPoint(3.0, playerid, 253.9280,69.6094,1003.6406))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "?? ?? ? ????????? ???????!");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /clear [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ???????????!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* ?? ???????? ??????? ??????? ?????????????? %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ?????? %s ??????? ??? ??????? ???????.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						WantedPoints[giveplayerid] = 0;
						WantedLevel[giveplayerid] = 0;
						ClearCrime(giveplayerid);
						if(gTeam[giveplayerid]==4)
						{
						    gTeam[giveplayerid] = 3;
						    SetPlayerToTeamColor(giveplayerid);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "???????????????? ????????????? ????????/????????!");
				}
			}
			else if(member == 5||member == 6||leader == 5||leader == 6)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /clear [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ???????????!"); return 1; }
					    if(rank < 4) { SendClientMessage(playerid, COLOR_GREY, "?? ?????????? ? ??????? 4, ????? ???????? ??? - ?? ?????? ??????? !"); return 1; }
					    if(GetPlayerMoney(playerid) < 5000) { SendClientMessage(playerid, COLOR_GREY, "?? ?????????? ? 5000$, ????? ???????? ?????? ????? ????? !"); return 1; }
		                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    if(member > 0)
					    {
						    if(PlayerInfo[giveplayerid][pMember] != member)
							{
								SendClientMessage(playerid, COLOR_GREY, "??? ????? ?? ????????? ? ????? ????? !");
								return 1;
							}
							format(string, sizeof(string), "* ?? ???????? ?????? ?????????????? %s ?? 5000$.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* ???? ????? %s ? ???????? %d, ??????? ??? ??????.", sendername, rank);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						}
						else if(leader > 0)
						{
			                if(PlayerInfo[giveplayerid][pMember] != leader)
							{
								SendClientMessage(playerid, COLOR_GREY, "??? ????? ?? ????????? ? ????? ????? !");
								return 1;
							}
						    format(string, sizeof(string), "* ?? ???????? ?????? ??????? %s ?? 5000$.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* ???????? ????? %s, ??????? ??? ??????? ???????.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						}
						WantedPoints[giveplayerid] = 0;
						WantedLevel[giveplayerid] = 0;
						ClearCrime(giveplayerid);
						GivePlayerMoney(playerid, - 5000);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "???????????????? ????????????? ????????/????????!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "?? ?? ??????????? / ??? / ???????????? ??????? / ???? ????? !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/ticket", true) == 0)
	{
		if(!IsACop(playerid) && OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "?? ?? ??????????? / ??? / ???????????? ???????!");
                return 1;
            }

		if(IsPlayerConnected(playerid))
	    {
	        if(OnDuty[playerid] != 1 && PlayerInfo[playerid][pMember] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "?? ?? ??? ?????????? ????????? ????????????!");
			    return 1;
			}
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /ticket [playerid/PartOfName] [price] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /ticket [playerid/PartOfName] [price] [reason]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 99999) { SendClientMessage(playerid, COLOR_GREY, "?????? ?????? ?? ????? ???? ???? 1 ??? ???? 99999 !"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /ticket [playerid/PartOfName] [price] [reason]");
							return 1;
						}
						format(string, sizeof(string), "* ?? ???? %s ?????, ??????? $%d, ???????: %s", giveplayer, moneys, (result));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ?????? %s ??? ??? ?????, ??????? $%d, ???????: %s", sendername, moneys, (result));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* ??????????? /accept ticket, ????? ??????? ???.");
						TicketOffer[giveplayerid] = playerid;
						TicketMoney[giveplayerid] = moneys;
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "??? ????? ?? ????? ??? !");
						return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "??? ????? ???????? ?????????? !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/arrest", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(gTeam[playerid] == 2  || IsACop(playerid))
			{
				if(OnDuty[playerid] != 1 && PlayerInfo[playerid][pMember] == 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "?? ?? ??? ?????????? ????????? ????????????!");
				    return 1;
				}
		        if(!PlayerToPoint(6.0, playerid, 268.3327,77.8972,1001.0391))
				{// Jail spot
				    SendClientMessage(playerid, COLOR_GREY, "?? ?? ????? ??????, ?? ????? ?????????? !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /arrest [price] [time (minutes)] [bail (0=no 1=yes)] [bailprice]");
					return 1;
				}
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 99999) { SendClientMessage(playerid, COLOR_GREY, "???? ?? ?????? ?? ????? ???? ???? 1$ ??? ???? 99999$ !"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /arrest [price] [time (minutes)] [bail (0=no 1=yes)] [bailprice]");
					return 1;
				}
				new time = strval(tmp);
				if(time < 1 || time > 20) { SendClientMessage(playerid, COLOR_GREY, "?????? ????????? ?????????? ?? ????? ???? ???? 1, ??? ???? 20 (???????? ???????? ?????? ?????), !"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /arrest [price] [time (minutes)] [bail (0=no 1=yes)] [bailprice]");
					return 1;
				}
				new bail = strval(tmp);
				if(bail < 0 || bail > 1) { SendClientMessage(playerid, COLOR_GREY, "??????? ?????? ?? ????? ???? ???? 0 ??? ???? 1 !"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " ???????????: /arrest [price] [time (minutes)] [bail (0=no 1=yes)] [bailprice]");
					return 1;
				}
				new bailprice = strval(tmp);
				if(bailprice < 0 || bailprice > 3000000) { SendClientMessage(playerid, COLOR_GREY, "??????? ?????? ?? ????? ???? ???? 0$ ??? ???? 3000000$ !"); return 1; }
				new suspect = GetClosestPlayer(playerid);
				if(IsPlayerConnected(suspect))
				{
					if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
					{
						GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(WantedLevel[suspect] < 1) return SendClientMessage(playerid, COLOR_GREY, "????? ?????? ???? ?? ??????? ???? ????? ????????? ??????? 1 !");
						if(IsACop(suspect)) return SendClientMessage(playerid,COLOR_GREY,"?????? ?????? ?????");
						format(string, sizeof(string), "* You arrested %s !", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(suspect, -moneys);
						format(string, sizeof(string), "arrested by %s ~n~    for $%d", sendername, moneys);
						GameTextForPlayer(suspect, string, 5000, 5);
						ResetPlayerWeapons(suspect);
						if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1)
						{
							format(string, sizeof(string), "<< ?????? %s ????????? ?????????????? %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
						}
						else if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2)
						{
							format(string, sizeof(string), "<< ????? ??? %s ????????? ?????????????? %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
						}
						else if(PlayerInfo[playerid][pMember]==3||PlayerInfo[playerid][pLeader]==3)
						{
							format(string, sizeof(string), "<< ?????? %s ????????? ?????????????? %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
						}
						SetPlayerInterior(suspect, 6);
						SetPlayerPos(suspect,264.6288,77.5742,1001.0391);
						PlayerInfo[suspect][pJailTime] = time * 60;
						if(bail == 1)
						{
							JailPrice[suspect] = bailprice;
							format(string, sizeof(string), "?? ????????? ? ?????? ? ??????? %d ??????. ?????: $%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
							SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
						}
						else
						{
						    JailPrice[suspect] = 0;
							format(string, sizeof(string), "?? ????????? ? ?????? ? ??????? %d ??????. ?????: ???????????", PlayerInfo[suspect][pJailTime]);
							SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
						}
						PlayerInfo[suspect][pJailed] = 1;
				        PlayerInfo[suspect][pArrested] += 1;
						SetPlayerFree(suspect,playerid, "Got Arrested");
						WantedPoints[suspect] = 0;
						WantedLevel[suspect] = 0;
						WantLawyer[suspect] = 1;
					}//distance
				}//not connected
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "????? ?? ??????????? ??????????, ????? ??????????.");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "?? ?? Cop / FBI / National Guard !");
			    return 1;
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/contract", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /contract [playerid/PartOfName] [amount]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: /contract [playerid/PartOfName] [amount]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 10000 || moneys > 100000) { SendClientMessage(playerid, COLOR_GREY, "?????? ????????? ?????? ???? ?? ??????? ???? 10000$, ? ?? ????? 100000$!"); return 1; }
			if(PlayerInfo[playerid][pLevel] < 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "?? ?????? ???? ??????? 3, ????? ????????? ????????.");
				return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    if(PlayerInfo[giveplayerid][pMember] == 8 && PlayerInfo[playerid][pMember] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "?? ????? ????????? ????????? ? ???? ??????????? ?????????!");
				        return 1;
				    }
				    else if(PlayerInfo[giveplayerid][pLeader] == 8 && PlayerInfo[playerid][pMember] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "?? ????? ????????? ????????? ? ???? ??????????? ?????????!");
				        return 1;
				    }
				    else if(PlayerInfo[giveplayerid][pMember] == 8||PlayerInfo[giveplayerid][pLeader] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ???????? ???????!");
				        return 1;
				    }
				    if(gTeam[giveplayerid] == 2 && moneys != 100000)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "?????? 100000$ ????? ???? ???????? ??? ???????? ?? ??????????? !");
				        return 1;
				    }
				    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "?? ?? ?????? ????????? ????!"); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					playermoney = GetPlayerMoney(playerid);
					if (moneys > 0 && playermoney >= moneys)
					{
						GivePlayerMoney(playerid, (0 - moneys));
						PlayerInfo[giveplayerid][pHeadValue]+=moneys;
						format(string, sizeof(string), "%s ???????? ???????? ? %s, ??? $%d.",sendername, giveplayer, moneys);
						SendFamilyMessage(8, COLOR_YELLOW, string);
						format(string, sizeof(string), "* ?? ????????? ???????? ? %s, ??? $%d.",giveplayer, moneys);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "???????????????? ???????????? ??????????.");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "%d ?? ???????? ?????.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	return 1;
}
//------------------------------------------------------------------------------------------------------
public HouseLevel(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new h = PlayerInfo[playerid][pPhousekey];
		if(h == 255) { return 0; }
		if(h <= 4) { return 1; }
		if(h >= 5 && h <= 9)  { return 2; }
		if(h >= 10 && h <= 18) { return 3; }
		if(h >= 19 && h <= 22) { return 4; }
		if(h >= 23 && h <= 25) { return 5; }
		if(h == 26) { return 6; }
		if(h == 27) { return 7; }
		if(h >= 28 && h <= 31) { return 7; }
	}
	return 0;
}

public CHouseLevel(houseid)
{
	if(houseid <= 4) { return 3; }
	if(houseid >= 29 && houseid <= 30) { return 4; }
	if(houseid >= 5 && houseid <= 9) { return 5; }
	if(houseid >= 10 && houseid <= 18 || houseid == 28) { return 7; }
	if(houseid >= 19 && houseid <= 22) { return 8; }
	if(houseid >= 23 && houseid <= 25) { return 9; }
	if(houseid == 26) { return 10; }
	if(houseid == 27) { return 11; }
	if(houseid >= 28 && houseid <= 31) { return 12; }
	return 0;
}

public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}//not connected
	return 1;
}

public CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public CustomPickups()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new string[128];
	NameTimer();
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerPos(i, oldposx, oldposy, oldposz);
			new tmpcar = GetPlayerVehicleID(i);
			if(oldposx!=0.0 && oldposy!=0.0 && oldposz!=0.0)
			{
				for(new h = 0; h < sizeof(SBizzInfo); h++)
				{
					if(IsATruck(tmpcar) && PlayerToPoint(10.0, i, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]))
					{
						format(string, sizeof(string), "~w~%s~n~~r~Products Required~w~: %d~n~~y~Price per Product: ~w~: $%d~n~~g~Funds: ~w~: $%d",SBizzInfo[h][sbMessage],(SBizzInfo[h][sbMaxProducts]-SBizzInfo[h][sbProducts]),SBizzInfo[h][sbPriceProd],SBizzInfo[h][sbTill]);
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
					if(PlayerToPoint(2.0, i, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]))
					{
						if(SBizzInfo[h][sbOwned] == 1)
						{
							format(string, sizeof(string), "~w~%s~w~~n~Owner : %s~n~Extortion by : %s~n~Entrance Fee : ~g~$%d ~w~Level : %d ~n~to enter type /enter",SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost],SBizzInfo[h][sbLevelNeeded]);
						}
						else
						{
							format(string, sizeof(string), "~w~%s~w~~n~This Business is for sale~n~Cost: ~g~$%d ~w~Level : %d ~n~to buy this Business type /buybiz",SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevelNeeded]);
						}
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}
				for(new h = 0; h < sizeof(HouseInfo); h++)
				{
					if(PlayerToPoint(0.5, i, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
					{
						if(HouseInfo[h][hOwned] == 1)
						{
							if(HouseInfo[h][hRentabil] == 0)
							{
								format(string, sizeof(string), "???? ??? ???????????:%s\n???????:%d",HouseInfo[h][hOwner],HouseInfo[h][hLevel]);
							}
							else
							{
								format(string, sizeof(string), "???? ??? ???????????:%s\n????????? ??????:$%d\n???????:%d\n??????? /rentroom ????? ?????????? ???",HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel]);
							}
							ShowPlayerDialog(i,6,DIALOG_STYLE_MSGBOX,"?????????? ? ????",string,"??????","??????");
							return 1;
						}
						else
						{
							format(string, sizeof(string), "???? ??? ?????????\n\n????????:%s\n\n????:$%d\n\n???????:%d",HouseInfo[h][hDiscription],HouseInfo[h][hValue],HouseInfo[h][hLevel]);
						}
						ShowPlayerDialog(i,7,DIALOG_STYLE_MSGBOX,"???? ????",string,"???????","??????");
						return 1;
					}
				}
				for(new h = 0; h < sizeof(BizzInfo); h++)
				{
					if(IsATruck(tmpcar) && PlayerToPoint(10.0, i, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]))
					{
						format(string, sizeof(string), "~w~%s~n~~r~Products Required~w~: %d~n~~y~Price per Product: ~w~: $%d~n~~g~Funds: ~w~: $%d",BizzInfo[h][bMessage],(BizzInfo[h][bMaxProducts]-BizzInfo[h][bProducts]),BizzInfo[h][bPriceProd],BizzInfo[h][bTill]);
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
					if(PlayerToPoint(2.0, i, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]))
					{
						if(BizzInfo[h][bOwned] == 1)
						{
							format(string, sizeof(string), "~w~%s~w~~n~Owner : %s~n~Extortion by : %s~n~Entrance Fee : ~g~$%d ~w~Level : %d ~n~to enter type /enter",BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost],BizzInfo[h][bLevelNeeded]);
						}
						else
						{
							format(string, sizeof(string), "~w~%s~w~~n~This Business is for sale~n~Cost: ~g~$%d ~w~Level : %d ~n~to buy this Business type /buybiz",BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded]);
						}
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}
			}//custompickups end
			if (PlayerToPoint(2.0, i, 1173.2563,-1323.3102,15.3943))
			{// Hospital near Ammu
				GameTextForPlayer(i, "~w~Type /healme to cure yourself", 5000, 5);
			}
			else if (PlayerToPoint(2.0, i, 2029.5945,-1404.6426,17.2512))
			{// Hospital near speedway
				GameTextForPlayer(i, "~w~Type /healme to cure yourself", 5000, 5);
			}
			else if (PlayerToPoint(2.0, i, 323.0342,1118.5804,1083.8828))
			{//Buyable Drugs for Drug Dealers
			    GameTextForPlayer(i, "~w~Type /get drugs, to get some ~r~Drugs~y~~n~Skill Level matters to price", 5000, 3);
			}
			else if (PlayerToPoint(3, i,-2162.2554,-2385.9541,30.6250))
			{
			    GameTextForPlayer(i, "~y~Welcome to the ~r~City Hall~n~~w~Type /enter to go in", 5000, 5);
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,359.5408,206.7693,1008.3828))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Detective~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,347.7374,193.7241,1014.1875))
			{
			    if(PlayerInfo[i][pJob] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Lawyer~y~ here ~n~~w~Type /go if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1215.1304,-11.8431,1000.9219))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Whore~y~ here ~n~~w~Type /go if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,2166.3772,-1675.3829,15.0859))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Drugs Dealer~y~ here ~n~~w~Type /go if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1109.3318,-1796.3042,16.5938))
			{
			    if(PlayerInfo[i][pJob] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Car Jacker~y~ here ~n~~w~Type /go if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,-2050.8962,460.0262,35.1719))
			{
			    if(PlayerInfo[i][pMember] == 9 || PlayerInfo[i][pLeader] == 9) { GameTextForPlayer(i, "~w~Type ~r~/paper ~w~to create a newspaper",5000,3); }
			    else if(PlayerInfo[i][pJob] == 15) { GameTextForPlayer(i, "~w~Type ~r~/papers ~w~to see all the made newspapers",5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,-1932.3859,276.2117,41.0391))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Car Mechanic~y~ here ~n~~w~Type /go if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,2226.1716,-1718.1792,13.5165))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Bodyguard~y~ here ~n~~w~Type /go if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1366.4325,-1275.2096,13.5469))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Arms Dealer~y~ here ~n~~w~Type /go if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,531.7930,-1292.4044,17.2422))
			{
			    if(PlayerInfo[i][pJob] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Car Dealer~y~ here ~n~~w~Type /go if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,766.0804,14.5133,1000.7004))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Boxer~y~ here ~n~~w~Type /go if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1154.2208,-1770.8203,16.5992))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Bus Driver~y~ here ~n~~w~Type /go if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,-77.7288,-1136.3896,1.0781))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Trucker~y~ here ~n~~w~Type /go if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1381.0413,-1088.8511,27.3906))
			{
			    GameTextForPlayer(i, "~g~Welcome,~n~~y~Use /mission to take on a Mission", 5000, 3);
			}
			else if(PlayerToPoint(2.0, i,1073.0619,-344.5148,73.9922))
			{
			    if(OrderReady[i] > 0)
			    {
			        switch (OrderReady[i])
			        {
			            case 1:
			            {
			                GivePlayerWeapon(i, 24, 50); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 25, 50); GivePlayerWeapon(i, 4, 1);
			                GivePlayerMoney(i, - 5000);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* ?? ??????? ???? ?????????? ?????.");
			            }
			            case 2:
			            {
			                GivePlayerWeapon(i, 24, 50); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 25, 50); GivePlayerWeapon(i, 31, 500); GivePlayerWeapon(i, 4, 1);
			                GivePlayerMoney(i, - 6000);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* ?? ??????? ???? ?????????? ?????.");
			            }
			            case 3:
			            {
			                GivePlayerWeapon(i, 24, 50); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 25, 50); GivePlayerWeapon(i, 30, 500); GivePlayerWeapon(i, 4, 1);
			                GivePlayerMoney(i, - 6000);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* ?? ??????? ???? ?????????? ?????.");
			            }
			            case 4:
			            {
			                GivePlayerWeapon(i, 24, 50); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 25, 50); GivePlayerWeapon(i, 31, 500); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 34, 20);
			                GivePlayerMoney(i, - 8000);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* ?? ??????? ???? ?????????? ?????.");
			            }
			            case 5:
			            {
			                GivePlayerWeapon(i, 24, 50); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 25, 50); GivePlayerWeapon(i, 30, 500); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 34, 20);
			                GivePlayerMoney(i, - 8000);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* ?? ??????? ???? ?????????? ?????.");
			            }
			            case 6:
			            {
			                GivePlayerWeapon(i, 24, 50); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 25, 50); GivePlayerWeapon(i, 31, 500); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 34, 20);
							GivePlayerMoney(i, - 8500);
							SendClientMessage(i, COLOR_LIGHTBLUE, "* ?? ??????? ???? ?????????? ?????.");
			            }
			            case 7:
			            {
			                GivePlayerWeapon(i, 24, 50); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 25, 50); GivePlayerWeapon(i, 30, 500); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 34, 20);
			                GivePlayerMoney(i, - 8500);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* ?? ??????? ???? ?????????? ?????.");
			            }
			        }
			        OrderReady[i] = 0;
			    }
			}//Hitman delivery stuff
			else if(PlayerOnMission[i] > 0 && PlayMission[kToggle] == 0)
			{
			    if(MissionCheckpoint[i] == 1 && PlayerToPoint(10.0, i,PlayMission[kCP1][0],PlayMission[kCP1][1],PlayMission[kCP1][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText1]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText4]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText5]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText6]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 2;
				}
				else if(MissionCheckpoint[i] == 2 && PlayerToPoint(10.0, i,PlayMission[kCP2][0],PlayMission[kCP2][1],PlayMission[kCP2][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText2]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText7]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText8]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText9]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 3;
				}
				else if(MissionCheckpoint[i] == 3 && PlayerToPoint(10.0, i,PlayMission[kCP3][0],PlayMission[kCP3][1],PlayMission[kCP3][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText3]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText10]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText11]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText12]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 4;
				}
				else if(MissionCheckpoint[i] == 4 && PlayerToPoint(10.0, i,PlayMission[kCP4][0],PlayMission[kCP4][1],PlayMission[kCP4][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText4]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText13]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText14]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText15]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 5;
				}
				else if(MissionCheckpoint[i] == 5 && PlayerToPoint(10.0, i,PlayMission[kCP5][0],PlayMission[kCP5][1],PlayMission[kCP5][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText5]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText16]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText17]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText18]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 6;
				}
				else if(MissionCheckpoint[i] == 6 && PlayerToPoint(10.0, i,PlayMission[kCP6][0],PlayMission[kCP6][1],PlayMission[kCP6][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText6]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "..:: ?????? ?????? : %s | ??????? ????????: $%d ::..", PlayMission[kTitle], PlayMission[kReward]);
					SendClientMessage(i, COLOR_GREEN, string);
					GivePlayerMoney(i, PlayMission[kReward]);
					PlayerInfo[i][pMissionNr] = PlayerOnMission[i];
					MissionCheckpoint[i] = 0;
					PlayerOnMission[i] = 0;
				}
			}
		}
	}
	return 1;
}

public IdleKick()
{
	new nanana[MAX_PLAYER_NAME];
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pAdmin] < 1)
		    {
				GetPlayerPos(i, PlayerPos[i][0], PlayerPos[i][1], PlayerPos[i][2]);
				if(PlayerPos[i][0] == PlayerPos[i][3] && PlayerPos[i][1] == PlayerPos[i][4] && PlayerPos[i][2] == PlayerPos[i][5])
				{
					Kick(i);
					GetPlayerName(i,nanana,sizeof(nanana));
					format(string,sizeof(string),"??????: ????? %s ??? ??????. ???????: AFK",nanana);
					SendClientMessageToAll(COLOR_LIGHTRED,string);
				}
				PlayerPos[i][3] = PlayerPos[i][0];
				PlayerPos[i][4] = PlayerPos[i][1];
				PlayerPos[i][5] = PlayerPos[i][2];
			}
		}
	}
}

public OnPlayerText(playerid, text[])
{
	new giver[MAX_PLAYER_NAME];
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new tmp[256];
	new string[256];
	new giveplayerid;
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		SendClientMessage(playerid, TEAM_CYAN_COLOR, "????? ????? ? ??? ??????????? ???????? ? ??????? ????. ????????? ????? ?????????.");
		return 0;
	}
	if(SelectChar[playerid] == 255)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("next", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("next")))
		{
		    switch (SelectCharID[playerid])
			{
				case 1: //Police Force
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[0][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[1][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[2][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[3][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[4][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[5][0]; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = JoinPed[6][0]; }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = JoinPed[7][0]; }
				    else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = JoinPed[8][0]; }
				    else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = JoinPed[9][0]; }
				    else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[10][0]; }
				}
				case 2: //FBI/ATF
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[11][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[12][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[12][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[13][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[13][0]; }
    			}
				case 3: //National Guard
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[14][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[14][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[15][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[15][0]; }
				}
				case 4: //Fire&Ambulance
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[16][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[17][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[18][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[19][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[20][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[21][0]; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[22][0]; }
				}
				case 5: //La Cosa Nostra
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[23][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[23][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[24][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[24][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[25][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[26][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[27][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[28][0]; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = JoinPed[29][0]; }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[30][0]; }
				}
				case 6: //Yakuza
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[31][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[32][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[33][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[34][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[35][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[35][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[36][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[36][0]; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[37][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[37][0]; }
				}
				case 8: //Hitman Agency
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[38][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[39][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[39][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[40][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[40][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[41][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[42][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[42][0]; }
				}
				case 9: //News Reporters
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[43][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[43][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[44][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[44][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[45][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[45][0]; }
				}
				case 10: //Taxi Cab Company
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[46][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[46][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[47][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[47][0]; }
				}
				case 11: //Driving/Flying School
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[48][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[49][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[50][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[50][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[51][0]; }
				}
				case 12:
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[52][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[52][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[53][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[53][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[54][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[54][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[55][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[55][0]; }
				}
				case 13:
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[56][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[56][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[57][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[57][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[58][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[59][0]; }
				}
				case 14:
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[60][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[61][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[62][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[63][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[64][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[64][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[65][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[65][0]; }
				}
				case 15:
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[66][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[66][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[67][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[67][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[68][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[68][0]; }
				}
				case 16:
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[69][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[69][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[70][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[70][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[71][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[71][0]; }
				}
				case 17:
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[72][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[72][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[73][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[73][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[74][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[74][0]; }
				}
				case 18:
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[79][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[79][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[80][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[80][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[81][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[81][0]; }
				    }
    case 19: //Mer
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[75][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[75][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[76][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[76][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[77][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[77][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[78][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[78][0]; }
				    }
				case 20:
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[82][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[82][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[83][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[83][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[84][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[84][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[85][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[86][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[86][0]; }
				}
                case 21:
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[88][0]; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[89][0]; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[90][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[90][0]; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[91][0]; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[92][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[92][0]; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[93][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[93][0]; }
				}
			}
		    return 0;
		}
		else if ((strcmp("done", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("done")))
		{
		    if(ChangePos2[playerid][1] == 1)
		    {
		        SetPlayerInterior(playerid, ChangePos2[playerid][0]);
		        SetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
		        ChangePos2[playerid][1] = 0;
		        return 0;
		    }
		    PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
		    PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
		    SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel],0.0,0.0,0.0,0,0,0,0,0,0,0);
		    gTeam[playerid] = PlayerInfo[playerid][pTeam];
			SetPlayerToTeamColor(playerid);
			MedicBill[playerid] = 0;
			SpawnPlayer(playerid);
		    SelectCharPlace[playerid] = 0;
		    SelectCharID[playerid] = 0;
		    SelectChar[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???????????? 'next', ??? 'done'.");
		    return 0;
		}
	}
	if(MarriageCeremoney[playerid] > 0)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
		{
		    if(GotProposedBy[playerid] < 999)
		    {
			    if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
				    format(string, sizeof(string), "?????????: %s ?? ?????? %s ??? ???? ?????????? ????? (??????????? 'yes', ??? - ?????? ??? ???????? ????).", giveplayer,sendername);
					SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
				    return 1;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
			}
			else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "?????????: %s ? %s ? ???????? ??? ??????... ??? & ????, ?? ?????? ?????????? ???????.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "?????????: %s ? %s ? ???????? ??? ??????... ??? & ????, ?? ?????? ?????????? ??????.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "??????? ?????: ? ??? ???? ????? ?????????? ????, %s, & %s ???? ??????.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
					    format(string, sizeof(string), "?????????: %s ? %s ? ???????? ??? ??????... ??? & ???, ?? ?????? ?????????? ???????.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "?????????: %s ? %s ? ???????? ??? ??????... ??? & ????, ?? ?????? ?????????? ??????.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "??????? ?????: ? ??? ???? ????? ??????? ????, %s, & %s ???? ??????.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
					    format(string, sizeof(string), "?????????: %s ? %s ? ???????? ??? ??????... ???? & ????, ?? ?????? ?????????? ???????.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "?????????: %s ? %s ? ???????? ??? ??????... ???? & ????, ?? ?????? ?????????? ??????.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "??????? ?????: ? ??? ???? ????? ?????????? ????, %s, & %s ???? ??????.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					//MarriageCeremoney[ProposedTo[playerid]] = 1;
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(string, sizeof(string), "%s", sendername);
					strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", giveplayer);
					strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
					GivePlayerMoney(playerid, - 100000);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pPhousekey] = PlayerInfo[playerid][pPhousekey];
					PlayerInfo[ProposedTo[playerid]][pPbiskey] = PlayerInfo[playerid][pPbiskey];
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
				    return 1;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
		else
		{
		    if(GotProposedBy[playerid] < 999)
		    {
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* ?? ?? ?????? ???????? ?? %s, ??? 'yes' ?? ??? ??????.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s did't ????? ??????????, ??, ??? 'yes' ?? ???? ???????.",sendername);
				    SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
		    }
		    else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* ?? ?? ?????? ???????? ?? %s, ???'yes' ??? ??????.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s did't ????? ??????????, ??, ??? 'yes' ?? ???? ???????.",sendername);
				    SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
	    return 0;
	}
	if(WritingPaper[playerid] > 0)
	{
	    new line;
        new nstring[256];
        new idx;
        new length = strlen(text);
		while ((idx < length) && (text[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = text[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
		    if(WritingLine[playerid] == 1) { SendClientMessage(playerid, COLOR_GRAD2, "* ?????????? ??????????? ? ???????? ????? ??????."); }
		    else { SendClientMessage(playerid, COLOR_LIGHTRED, "* ?????????? ??????????? ? ????????? ????? ????? ??????."); }
			return 0;
		}
		format(nstring, sizeof(nstring), "%s", text);
		switch(WritingLine[playerid])
		{
		    case 1:
		    {
		        new fstring[MAX_PLAYER_NAME];
		        GetPlayerName(playerid, sendername, sizeof(sendername));
				format(fstring, sizeof(fstring), "%s", sendername);
				strmid(PaperInfo[WritingPaperNumber[playerid]][PaperMaker], fstring, 0, strlen(fstring), 255);
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperTitle], nstring, 0, strlen(nstring), 255);
		        line = 0; WritingLine[playerid] = 2;
		        SendClientMessage(playerid, COLOR_LIGHTRED, "* ?????? ?? ?????? ???????? ????? ????????, 7 ??????????.");
		    }
		    case 2:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText1], nstring, 0, strlen(nstring), 255);
		        line = 1; WritingLine[playerid] = 3;
		    }
		    case 3:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText2], nstring, 0, strlen(nstring), 255);
		        line = 2; WritingLine[playerid] = 4;
		    }
		    case 4:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText3], nstring, 0, strlen(nstring), 255);
		        line = 3; WritingLine[playerid] = 5;
		    }
		    case 5:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText4], nstring, 0, strlen(nstring), 255);
		        line = 4; WritingLine[playerid] = 6;
		    }
		    case 6:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText5], nstring, 0, strlen(nstring), 255);
		        line = 5; WritingLine[playerid] = 7;
		    }
		    case 7:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText6], nstring, 0, strlen(nstring), 255);
		        line = 6; WritingLine[playerid] = 8;
		    }
		    case 8:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText7], nstring, 0, strlen(nstring), 255);
		        PaperInfo[WritingPaperNumber[playerid]][PaperUsed] = 1;
		        SavePapers();
		        line = 7; WritingLine[playerid] = 0; WritingPaper[playerid] = 0; WritingPaperNumber[playerid] = 999;
		    }
		}
		if(line > 0)
		{
			format(string, sizeof(string), "* ?? ???????? ????? %d ??????.", line);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			if(line == 7)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ???? ?????? ???? ????????? ? ?????? ???????? (??? ??????????? ?????).");
			}
		}
	    return 0;
	}
	if(ConnectedToPC[playerid] == 255)
	{
		new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("Contracts", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Contracts")))
		{
		    if(PlayerInfo[playerid][pRank] < 4)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "?????? ??????? ?????? ? ???????? 4 ??? ???? ????? ?????? ? ????????? ????????? !");
		        return 0;
		    }
		    SearchingHit(playerid);
			return 0;
		}
		else if ((strcmp("News", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("News")))
		{
		    	new x_nr[256];
				x_nr = strtok(text, idx);

				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________?????????? ???????__________________|");
					SendClientMessage(playerid, COLOR_WHITE, " ???????????: News [number] or News delete [number] or News delete all");
					format(string, sizeof(string), "1: %s :: Hitman: %s", News[hAdd1], News[hContact1]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "2: %s :: Hitman: %s", News[hAdd2], News[hContact2]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "3: %s :: Hitman: %s", News[hAdd3], News[hContact3]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "4: %s :: Hitman: %s", News[hAdd4], News[hContact4]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "5: %s :: Hitman: %s", News[hAdd5], News[hContact5]);
					SendClientMessage(playerid, COLOR_GREY, string);
					SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________________|");
					return 0;
				}//lets start
				if(strcmp(x_nr,"1",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   ??? ?????????? ????????? ????????, ??? ?????? ???? ??????? ??????? !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ???? ???????? 3, ????? ???????? ????????? ?????? ???????? !"); return 0; }
				    if(News[hTaken1] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   ????? ???????? ? ????????? !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact1], string, 0, strlen(string), 255);
						News[hTaken1] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ????????? ????????? ???????? ? ????? ???????? ???????? ?????? ???????.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "????? 1 ??? ????? !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"2",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   ??? ?????????? ????????? ????????, ??? ?????? ???? ??????? ??????? !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ???? ???????? 3, ????? ???????? ????????? ?????? ???????? !"); return 0; }
				    if(News[hTaken2] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   ????? ???????? ? ????????? !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact2], string, 0, strlen(string), 255);
						News[hTaken2] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ????????? ????????? ???????? ? ????? ???????? ???????? ?????? ???????.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ????? 2 ??? ????? !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"3",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   ??? ?????????? ????????? ????????, ??? ?????? ???? ??????? ??????? !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ???? ???????? 3, ????? ???????? ????????? ?????? ???????? !"); return 0; }
				    if(News[hTaken3] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   ????? ???????? ? ????????? !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact3], string, 0, strlen(string), 255);
						News[hTaken3] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ????????? ????????? ???????? ? ????? ???????? ???????? ?????? ???????.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ????? 3 ??? ????? !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"4",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   ??? ?????????? ????????? ????????, ??? ?????? ???? ??????? ??????? !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ???? ???????? 3, ????? ???????? ????????? ?????? ???????? !"); return 0; }
				    if(News[hTaken4] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   ????? ???????? ? ????????? !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact4], string, 0, strlen(string), 255);
						News[hTaken4] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ????????? ????????? ???????? ? ????? ???????? ???????? ?????? ???????.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ????? 4 ??? ????? !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"5",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   ??? ?????????? ????????? ????????, ??? ?????? ???? ??????? ??????? !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ???? ???????? 3, ????? ???????? ????????? ?????? ???????? !"); return 0; }
				    if(News[hTaken5] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   ????? ???????? ? ????????? !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact5], string, 0, strlen(string), 255);
						News[hTaken5] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ????????? ????????? ???????? ? ????? ???????? ???????? ?????? ???????.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ????? 5 ??? ????? !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"delete",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] < 4)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ?? ?????? ???? ???????? 4, ????? ??????? ????????? ?? ?????? ???????? !");
				        return 0;
				    }
				    new string1[MAX_PLAYER_NAME];
				    new x_tel[256];
					x_tel = strtok(text, idx);
					if(!strlen(x_tel)) {
					    SendClientMessage(playerid, COLOR_WHITE, " ???????????: ??????? ??????? [?????], ??? ??????? ??????? ???.");
					    return 0;
					}
                    if(strcmp(x_tel,"1",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "No-one");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????? ????????? (1) ???????? ?? ?????? ???????? ???????? ?????? ???????.");
						return 0;
                    }
                    else if(strcmp(x_tel,"2",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "No-one");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????? ????????? (2) ???????? ?? ?????? ???????? ???????? ?????? ???????.");
						return 0;
                    }
                    else if(strcmp(x_tel,"3",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "No-one");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????? ????????? (3) ???????? ?? ?????? ???????? ???????? ?????? ???????.");
						return 0;
                    }
                    else if(strcmp(x_tel,"4",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "No-one");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????? ????????? (4) ???????? ?? ?????? ???????? ???????? ?????? ???????.");
						return 0;
                    }
                    else if(strcmp(x_tel,"5",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "No-one");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????? ????????? (5) ???????? ?? ?????? ???????? ???????? ?????? ???????.");
						return 0;
                    }
                    else if(strcmp(x_tel,"all",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "No-one");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						format(string, sizeof(string), "Nothing"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "No-one");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						format(string, sizeof(string), "Nothing"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "No-one");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						format(string, sizeof(string), "Nothing"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "No-one");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						format(string, sizeof(string), "Nothing"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "No-one");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ??????? ??? ????????? ???????? ?? ?????? ???????? ???????? ?????? ???????.");
						return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE, " ???????????: ??????? ??????? [?????], ??? ??????? ??????? ???.");
					    return 0;
                    }
				}
				else { return 0; }
		}
		else if ((strcmp("Givehit", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Givehit")))
		{
		    if(PlayerInfo[playerid][pRank] < 4)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   ?? ?????????? ? ??????? 4, ????? ???? ????????? Hitmans !");
		        return 0;
		    }
		    if(hitfound == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   ??? ??? ???????? ????, ???????????, ???????????? ????????? ? ??????????? ?????????? ??????? !");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ???????????: Givehit [playerid/PartOfName]");
				return 0;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    if(PlayerInfo[giveplayerid][pMember] != 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ??? ????? ?? ??????? ?????? !");
						return 0;
				    }
				    if(GoChase[giveplayerid] < 999)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ??? ??????? ?????? ??? ????? ?????????? !");
						return 0;
				    }
				    if(IsPlayerConnected(hitid))
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giver, sizeof(giver));
				        GetPlayerName(hitid, giveplayer, sizeof(giveplayer));
				        //format(string, sizeof(string), "* You assigned%s to kill: %s(ID:%d), for $%d.", giver, giveplayer, hitid, PlayerInfo[hitid][pValue]);
		    			//SendClientMessage(playerid, COLOR_YELLOW, string);
				        //format(string, sizeof(string), "* Hitman %s has assigned you to kill: %s(ID:%d), for $%d.", sendername, giveplayer, hitid, PlayerInfo[hitid][pValue]);
		    			//SendClientMessage(giveplayerid, COLOR_YELLOW, string);
		    			format(string, sizeof(string), "* ??????? ?????? %s, ??????????? ??????? ?????? %s, ????? ?????: %s (????????????? ????????: %d), ??? $%d.", sendername, giver, giveplayer, hitid, PlayerInfo[hitid][pHeadValue]);
		    			SendFamilyMessage(8, COLOR_YELLOW, string);
		    			GoChase[giveplayerid] = hitid;
		    			GetChased[hitid] = giveplayerid;
		    			GotHit[hitid] = 1;
		    			hitid = 0;
		    			hitfound = 0;
				        return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ????????????????? ??????? ???????? ??????????, ???????????? ????????? ? ??????????? ?????????? ????? !");
				        return 0;
				    }
				}
				return 0;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ??? ??????? ?????? ?? ??????, ??? ?? ???????? ??????? ??????? !");
			    return 0;
			}
		}
		else if ((strcmp("Ranks", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Ranks")))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ ??????? ????????? __________________|");
		    for(new i=0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pMember] == 8||PlayerInfo[i][pLeader] == 8)
				    {
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* %s: Rank %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
			}
		}
		else if ((strcmp("Order", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Order")))
		{
		    if(OrderReady[playerid] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   ?? ??? ???????? ?????, ??????? ??? ? ???????? ????? ????? ??????? ???????? ??????? !");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if ((strcmp("1", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("1")))
			{
			    if(PlayerInfo[playerid][pRank] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ??? ?????? ?? ?????????? ?????, ????? ???????? ??? ????? !"); return 0; }
			    if(GetPlayerMoney(playerid) > 4999)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? ????? 1 (5000$), ?? ????? ????????? ? ???????? ????? ????? ??????? ????????.");
			        OrderReady[playerid] = 1;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   ?? ?? ?????? ???????????? ??? ????? !");
			        return 0;
			    }
			}
			else if ((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
			{
			    if(PlayerInfo[playerid][pRank] < 2) { SendClientMessage(playerid, COLOR_GREY, "   ??? ?????? ?? ?????????? ?????, ????? ???????? ??? ????? !"); return 0; }
			    if(GetPlayerMoney(playerid) > 5999)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? ????? 2 (6000$), ?? ????? ????????? ? ???????? ????? ????? ??????? ????????.");
			        OrderReady[playerid] = 2;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   ?? ?? ?????? ???????????? ??? ????? !");
			        return 0;
			    }
			}
			else if ((strcmp("3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("3")))
			{
			    if(PlayerInfo[playerid][pRank] < 2) { SendClientMessage(playerid, COLOR_GREY, "   ??? ?????? ?? ?????????? ?????, ????? ???????? ??? ????? !"); return 0; }
			    if(GetPlayerMoney(playerid) > 5999)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? ????? 3 (6000$), ?? ????? ????????? ? ???????? ????? ????? ??????? ????????.");
			        OrderReady[playerid] = 3;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   ?? ?? ?????? ???????????? ??? ????? !");
			        return 0;
			    }
			}
			else if ((strcmp("4", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("4")))
			{
			    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   ??? ?????? ?? ?????????? ?????, ????? ???????? ??? ????? !"); return 0; }
			    if(GetPlayerMoney(playerid) > 7999)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? ????? 4 (8000$), ?? ????? ????????? ? ???????? ????? ????? ??????? ????????.");
			        OrderReady[playerid] = 4;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   ?? ?? ?????? ???????????? ??? ????? !");
			        return 0;
			    }
			}
			else if ((strcmp("5", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("5")))
			{
			    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   ??? ?????? ?? ?????????? ?????, ????? ???????? ??? ????? !"); return 0; }
			    if(GetPlayerMoney(playerid) > 7999)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? ????? 5 (8000$), ?? ????? ????????? ? ???????? ????? ????? ??????? ????????.");
			        OrderReady[playerid] = 5;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   ?? ?? ?????? ???????????? ??? ????? !");
			        return 0;
			    }
			}
			else if ((strcmp("6", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("6")))
			{
			    if(PlayerInfo[playerid][pRank] < 4) { SendClientMessage(playerid, COLOR_GREY, "   ??? ?????? ?? ?????????? ?????, ????? ???????? ??? ????? !"); return 0; }
			    if(GetPlayerMoney(playerid) > 8499)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? ????? 6 (8500$), ?? ????? ????????? ? ???????? ????? ????? ??????? ????????.");
			        OrderReady[playerid] = 6;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   ?? ?? ?????? ???????????? ??? ????? !");
			        return 0;
			    }
			}
			else if ((strcmp("7", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("7")))
			{
			    if(PlayerInfo[playerid][pRank] < 4) { SendClientMessage(playerid, COLOR_GREY, "   ??? ?????? ?? ?????????? ?????, ????? ???????? ??? ????? !"); return 0; }
			    if(GetPlayerMoney(playerid) > 8499)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ?? ???????? ????? 7 (8500$), ?? ????? ????????? ? ???????? ????? ????? ??????? ????????.");
			        OrderReady[playerid] = 7;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   ?? ?? ?????? ???????????? ??? ????? !");
			        return 0;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|__________________ ????????? ?????? __________________|");
			    if(PlayerInfo[playerid][pRank] >= 1) { SendClientMessage(playerid, COLOR_GREY, "|(1) ($5000 ) Rank 1 - 5: Knife, Desert Eagle, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pRank] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(2) ($6000 ) Rank 2 - 5: Knife, Desert Eagle, M4, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pRank] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(3) ($6000 ) Rank 2 - 5: Knife, Desert Eagle, AK47, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pRank] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(4) ($8000) Rank 3 - 5: Knife, Desert Eagle, M4, MP5, Shotgun, Sniper"); }
			    if(PlayerInfo[playerid][pRank] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(5) ($8000) Rank 3 - 5: Knife, Desert Eagle, AK47, MP5, Shotgun, Sniper"); }
			    if(PlayerInfo[playerid][pRank] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(6) ($8500) Rank 4 - 5: Knife, Desert Eagle, M4, MP5, Shotgun, Sniper"); }
			    if(PlayerInfo[playerid][pRank] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(7) ($8500) Rank 4 - 5: Knife, Desert Eagle, AK47, MP5, Shotgun, Sniper"); }
			    SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________________|");
			    return 0;
			}
		}
		else if ((strcmp("Logout", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Logout")))
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ? ??? ???? ??? ???????, ? ????????????? ?? ?????? ?????????.");
      		ConnectedToPC[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "|___?????????? ????????.___|");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - News");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Contracts");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Givehit");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Backup");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Order");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Ranks");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Logout");
		    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
		    return 0;
		}
	    return 0;
	}
	if(CallLawyer[playerid] == 111)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    format(string, sizeof(string), "** %s ????????? ? ??????, ? ????????? ? ????????. ??????? ? ????????? ???????.", sendername);
	    	SendJobMessage(2, TEAM_AZTECAS_COLOR, string);
	    	SendJobMessage(2, TEAM_AZTECAS_COLOR, "* ????? ?? ? ????????? ???????, ?????????, ????? ?????? ??????? ??? ? /accept lawyer.");
	    	SendClientMessage(playerid, COLOR_LIGHTRED, "????????? ??????? ???? ????????? ?????????, ?????????? ?????.");
	    	WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
	    	return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "??? ???????? ????????, ?????????? ??? ??? ??????, ???????? ?????????? ????????.");
		    WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
		    return 0;
		}
	}
	if(TalkingLive[playerid] != 255)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pJob] == 6)
		{
		    format(string, sizeof(string), "???????? %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		else
		{
		    format(string, sizeof(string), "????? ????? %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		return 0;
	}
	if(Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s ??????? (??????? ???????): %s", sendername, text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		//printf("callers line %d called %d caller %d",Mobile[Mobile[playerid]],Mobile[playerid],playerid);
		if(Mobile[playerid] == 914)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "?????? ????????: ? ?? ??????? ???");
				return 0;
			}
			new turner[MAX_PLAYER_NAME];
			new wanted[128];
			GetPlayerName(playerid, turner, sizeof(turner));
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "?????? ????????: ?? ??????? ? ?????????? ??? ??????? ? ???????.");
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "??????? ?? ????????? ?? ???? ?????????");
			format(wanted, sizeof(wanted), "?????? ????????: ??? ??????? IA: ?????: %s",turner);
			SendTeamBeepMessage(1, TEAM_CYAN_COLOR, wanted);
			format(wanted, sizeof(wanted), "?????? ????????: ????????: %s",text);
			SendTeamMessage(1, TEAM_CYAN_COLOR, wanted);
			SendClientMessage(playerid, COLOR_GRAD2, "   ??? ???????? ??????...");
			Mobile[playerid] = 255;
			return 0;
		}
		if(Mobile[playerid] == 913)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "???: ? ?? ??????? ???");
				return 0;
			}
			if ((strcmp("no", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("no")))
			{
				new turner[MAX_PLAYER_NAME];
				new wanted[128];
				GetPlayerName(playerid, turner, sizeof(turner));
				SendClientMessage(playerid, COLOR_DBLUE, "??????????? ???? - ????????: ?? ??????? ? ?????????? ??? ??????? ? ???????.");
				SendClientMessage(playerid, COLOR_DBLUE, "??????? ?? ????????? ?? ???? ????????????");
				format(wanted, sizeof(wanted), "???? - ????????: ??? ??????? APB: ????????: %s",turner);
				SendFamilyMessage(1, COLOR_DBLUE, wanted);
				format(wanted, sizeof(wanted), "???? - ????????: ????????????: %s, ?????????????: ???????????",PlayerCrime[playerid][pAccusing]);
				SendFamilyMessage(1, COLOR_DBLUE, wanted);
				SendClientMessage(playerid, COLOR_GRAD2, "   ??? ???????? ??????...");
				Mobile[playerid] = 255;
				return 0;
			}
			new badguy;
			//badguy = strval(tmp);
			badguy = ReturnUser(tmp);
			if (IsPlayerConnected(badguy))
			{
			    if(badguy != INVALID_PLAYER_ID)
			    {
					if (gTeam[badguy] == 2 || gTeam[badguy] == 1)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "??????????? ???? - ????????: ?? ?????? ?????? ????????? ? ??????????? ??????. ??? - ???????????? ?????");
						SendClientMessage(playerid, COLOR_GRAD2, "   ??? ???????? ??????...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (WantedPoints[badguy] > 0)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "??????????? ???? - ????????: ??????? ??? ????????? ?? ???? ??????");
						SendClientMessage(playerid, COLOR_DBLUE, "??????? ?? ????????? ?? ???? ????????????");
						SendClientMessage(playerid, COLOR_GRAD2, "   ??? ???????? ??????...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (badguy == playerid)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "??????????? ???? - ????????: ?? ??????????, ??? - ???????????? ?????.");
						SendClientMessage(playerid, COLOR_GRAD2, "   ??? ???????? ??????...");
						Mobile[playerid] = 255;
						return 0;
					}
					SendClientMessage(playerid, COLOR_DBLUE, "??????????? ???? - ????????: ?? ??????? ? ?????????? ??? ??????? ? ???????.");
					SendClientMessage(playerid, COLOR_DBLUE, "??????? ?? ????????? ?? ???? ????????????");
					SetPlayerCriminal(badguy,playerid, PlayerCrime[playerid][pAccusing]);
					if(WantedPoints[badguy] > 0) { } else { WantedPoints[badguy] += 2; }
					SendClientMessage(playerid, COLOR_GRAD2, "   ??? ???????? ??????...");
					Mobile[playerid] = 255;
					return 0;
				}//invalid id
				return 0;
			}//not connected
			else
			{
				format(string, sizeof(string), "??????????? ???? - ????????: ? ???? ??? ??????? ?????????? ? ????????????? ??????? ?????? ? ???",tmp);
				SendClientMessage(playerid, COLOR_DBLUE, string);
				return 0;
			}
		}
		if(Mobile[playerid] == 912)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "???: ? ?? ??????? ???");
				return 0;
			}
			strmid(PlayerCrime[playerid][pAccusing], text, 0, strlen(text), 255);
			SendClientMessage(playerid, COLOR_DBLUE, "???????: ???? ?? ?????? ??? ???????????, ???????? ? ???? ??? ???_??????? ??? ?? ??? ID");
			Mobile[playerid] = 913;
			return 0;
		}
		if(Mobile[playerid] == 911)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "?????? ????????: ? ?? ??????? ???, ???????(police) ??? ???????????(paramedic)?");
				return 0;
			}
			else if ((strcmp("police", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("police")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "?????? ????????: ? ???????? ??? ? ????????, ?????????? ?????????.");
				Mobile[playerid] = 912;
				SendClientMessage(playerid, COLOR_DBLUE, "??????????? ???? - ????????: ?????????? ????? ??? ???????? ???????? ????????????.");
				return 0;
			}
			else if ((strcmp("paramedic", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("paramedic")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "?????? ????????: ? ???????? ??? ? ???, ?????????? ????????? ??????.");
				Mobile[playerid] = 914;
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "?????? ????????: ?????????? ????? ??? ???????? ???????? ?????????.");
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "?????? ????????: ? ?? ??????? ???, ???????(police) ??? ???????????(paramedic)?");
				return 0;
			}
		}
		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
				SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW,"??? ??????");
		}
		return 0;
	}
	if (realchat)
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        return 0;
      	}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s[%d] ???????: %s", sendername,playerid, text);
		SetPlayerChatBubble(playerid, text, COLOR_GREEN, 50.0, 10000);
		ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		return 0;
	}
	return 1;
}

public SetCamBack(playerid)
{
    if(IsPlayerConnected(playerid))
    {
		new Float:plocx,Float:plocy,Float:plocz;
		GetPlayerPos(playerid, plocx, plocy, plocz);
		SetPlayerPos(playerid, -1863.15, -21.6598, 1060.15); // Warp the player
		SetPlayerInterior(playerid,14);
	}
}

public FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0)
	{
		hour = hour+24;
	}
	else if (hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return 1;
}

public AddsOn()
{
	adds=1;
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    new playername[MAX_PLAYER_NAME];
    new sendername[MAX_PLAYER_NAME];
    new string[256];
	new tpass[256];
	if(dialogid == 1)
	{
		if(response)
		{
			if(!strlen(inputtext))
			{
				new loginmsg[256+1];
				format(loginmsg,256,"?????????? ??????? ???? ?????? ? ??????");
				ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"???????????",loginmsg,"???????","??????");
				return 1;
			}
			strmid(tpass, inputtext, 0, strlen(inputtext), 255);
			Encrypt(tpass);
			OnPlayerLogin(playerid,tpass);
		}
		else 
		{
			Kick(playerid);
		}
	}
	else if(dialogid == 2)
	{
		if(response)
		{
			if(!strlen(inputtext))
			{
				new loginmsg[256+1];
				format(loginmsg,256,"?????????? ??????? ???? ?????? ? ??????");
				ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"???????????",loginmsg,"???????","??????");
				return 1;
			}
			strmid(tpass, inputtext, 0, strlen(inputtext), 255);
			Encrypt(tpass);
			OnPlayerRegister(playerid,tpass);
			new loginmsg[256+1];
			format(loginmsg,256,"?????????? ??????? ???? ?????? ? ??????");
			ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"???????????",loginmsg,"???????","??????");
		}
		else
		{
			Kick(playerid);
		}
	}
	else if(dialogid == 3)
	{
	    if(response)
	 	{
	 	    if(listitem == 0)
	 	    {
	 	    	PlayerInfo[playerid][pSex] = 1;
			    SendClientMessage(playerid, COLOR_YELLOW2, "??????, ?? ???????.");
			    new s[128];
				format(s,sizeof(s),"?????? ??????? ??? ???????!\n??????: 07/07/1990");
				ShowPlayerDialog(playerid,4,DIALOG_STYLE_INPUT,"??????? ?????????",s,"Ok","??????");
				return 1;
   			}
   			if(listitem == 1)
   			{
   			    PlayerInfo[playerid][pSex] = 2;
			    SendClientMessage(playerid, COLOR_YELLOW2, "??????, ?? ???????.");
			    new s[128];
				format(s,sizeof(s),"?????? ??????? ??? ???????!\n??????: 07/07/1990");
				ShowPlayerDialog(playerid,4,DIALOG_STYLE_INPUT,"??????? ?????????",s,"Ok","??????");
				return 1;
	   		}
 		}
 		else
 		{
 		    SendClientMessage(playerid, COLOR_LIGHTRED, "??????????? ???? ??????? ???? ???!");
 			new listitems[] = "???????\n???????";
	    	ShowPlayerDialog(playerid,3,DIALOG_STYLE_LIST,"???????? ??? ???:",listitems,"??","??????");
        	return 1;
     	}
   	}
   	else if(dialogid == 4)
   	{
   	    if(response)
		{
		    if(!strlen(inputtext))
		    {
     			new s[128];
  				format(s,sizeof(s),"?????? ??????? ??? ???????!\n??????: 07/07/1990");
  				ShowPlayerDialog(playerid,4,DIALOG_STYLE_INPUT,"??????? ?????????",s,"Ok","??????");
    			return 1;
   			}
   			new year, month,day;
			getdate(year, month, day);
   			new DateInfo[3][20];
			split(inputtext, DateInfo, '/');
			new check = year - strval(DateInfo[2]);
			if(check == year)
			{
				new s[128];
  				format(s,sizeof(s),"?????? ??????? ??? ???????!\n??????: 07/07/1990");
  				ShowPlayerDialog(playerid,4,DIALOG_STYLE_INPUT,"??????? ?????????",s,"Ok","??????");
    			return 1;
			}
			if(strval(DateInfo[1]) > month) { check -= 1; }
			else if(strval(DateInfo[1]) == month && strval(DateInfo[0]) > day) { check -= 1; }
			PlayerInfo[playerid][pAge] = check;
			format(string, sizeof(string), "??????, ??? %d ???.",PlayerInfo[playerid][pAge]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			new listitems[] = "???????\n??????\n????";
	    	ShowPlayerDialog(playerid,5,DIALOG_STYLE_LIST,"???????? ???? ??????:",listitems,"??","??????");
			return 0;
		}
		else
		{
      		new s[128];
			format(s,sizeof(s),"?????? ??????? ??? ???????!\n??????: 07/07/1990");
			ShowPlayerDialog(playerid,4,DIALOG_STYLE_INPUT,"??????? ?????????",s,"Ok","??????");
			return 1;
		}
	}
	else if(dialogid == 5)
	{
	    if(response)
	 	{
	 	    if(listitem == 0)
	 	    {
			    PlayerInfo[playerid][pOrigin] = 1;
			    SendClientMessage(playerid, COLOR_YELLOW2, "??????, ???? ?? ?? ??????.");
			    SendClientMessage(playerid, COLOR_LIGHTRED, "??????? ?? ??????????, ?????? ???????? ????????.");
			    TutTime[playerid] = 0;
			    return 0;
	   		}
	   		if(listitem == 1)
	   		{
	   		    PlayerInfo[playerid][pOrigin] = 2;
			    SendClientMessage(playerid, COLOR_YELLOW2, "??????, ???? ?? ?? ??????.");
			    SendClientMessage(playerid, COLOR_LIGHTRED, "??????? ?? ??????????, ?????? ???????? ????????.");
			    TutTime[playerid] = 0;
			    return 0;
		    }
		    if(listitem == 2)
	   		{
	   		    PlayerInfo[playerid][pOrigin] = 3;
			    SendClientMessage(playerid, COLOR_YELLOW2, "??????, ???? ?? ?? ????.");
			    SendClientMessage(playerid, COLOR_LIGHTRED, "??????? ?? ??????????, ?????? ???????? ????????.");
			    TutTime[playerid] = 0;
			    return 0;
		    }
	  	}
	  	else
	  	{
	  	    new listitems[] = "???????\n??????\n????";
	    	ShowPlayerDialog(playerid,5,DIALOG_STYLE_LIST,"???????? ???? ??????:",listitems,"??","??????");
	    	return 0;
    	}
   	}
   	else if(dialogid == 6)
   	{
   	    if(response)
		{
	  		new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
				{
					if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, " ? ??? ??? ???? ???, ?????? /sellhouse ????? ??????? ?????? ???");
						return 1;
					}
					if(GetPlayerMoney(playerid) > HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pPhousekey] = h;
						GivePlayerMoney(playerid,-HouseInfo[h][hRent]);
						HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
						PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,HouseInfo[h][hInt]);
						SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
						GameTextForPlayer(playerid, "~w~Welcome Home~n~You can exit at any time by moving to this door and typing /exit", 5000, 3);
						PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
						PlayerInfo[playerid][pLocal] = h;
						SetPlayerVirtualWorld(playerid,HouseInfo[h][hVirtual]);
						SendClientMessage(playerid, COLOR_WHITE, "????????????, ?? ?????? ????? ? ????? ????? ? ????? ?????.");
						SendClientMessage(playerid, COLOR_WHITE, "??????????? /help ????? ?????????? ?????????? ? ????");
						OnPlayerUpdate_GF(playerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "? ??? ????????? ?????");
						return 1;
					}
				}
			}
		}
	}
	else if(dialogid == 7)
 	{
 	    if(response)
 	    {
 	        new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
					{
						format(string, sizeof(string), " ? ??? ?????? ???? ??????? %d, ????? ?????? ??? ????!", HouseInfo[h][hLevel]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   ?? ??? ?????? ???, ?????? /sellhouse ????? ??????? ??????!");
						return 1;
					}
					if(GetPlayerMoney(playerid) > HouseInfo[h][hValue])
					{
						PlayerInfo[playerid][pPhousekey] = h;
						HouseInfo[h][hOwned] = 1;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-HouseInfo[h][hValue]);
						PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,HouseInfo[h][hInt]);
						SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
						GameTextForPlayer(playerid, "~w~Welcome Home~n~You can exit at any time by moving to this door and typing /exit", 5000, 3);
						PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
						PlayerInfo[playerid][pLocal] = h;
						SetPlayerVirtualWorld(playerid,HouseInfo[h][hVirtual]);
						SendClientMessage(playerid, COLOR_WHITE, "??????????, ?????? ??? ??? ???!");
						SendClientMessage(playerid, COLOR_WHITE, "??????????? /help ????? ?????????? ?????????? ? ????!");
                        DateProp(playerid);
						OnPropUpdate();
						OnPlayerUpdate_GF(playerid);
						new strin[256];
						format(strin,sizeof(strin),"%s",HouseInfo[h][hOwner]);
						Update3DTextLabelText(hhh[h],0x37E3ECAA,strin);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "? ??? ?? ??????? ?????.");
						return 1;
					}
				}
			}
      	}
  	}
	else if(dialogid == 8)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            if(PlayerInfo[playerid][pRank]!=1) return SendClientMessage(playerid,COLOR_RED,"????? ???????? ?????? ??? ??????? ?????");
	            OnWeapon[playerid] = 1;
	            GivePlayerWeapon(playerid, 24, 20);
	            GivePlayerWeapon(playerid, 41, 500);
         	}
         	if(listitem == 1)
	        {
	            if(PlayerInfo[playerid][pRank]!=2) return SendClientMessage(playerid,COLOR_RED,"????? ???????? ?????? ??? 2 ?????");
	            OnWeapon[playerid] = 1;
	            GivePlayerWeapon(playerid, 24, 40);
	            GivePlayerWeapon(playerid, 41, 1000);
	            GivePlayerWeapon(playerid, 29, 300);
         	}
         	if(listitem == 2)
	        {
	            if(PlayerInfo[playerid][pRank]!=3) return SendClientMessage(playerid,COLOR_RED,"????? ???????? ?????? ??? 3 ?????");
	            OnWeapon[playerid] = 1;
	            GivePlayerWeapon(playerid, 24, 60);
	            GivePlayerWeapon(playerid, 41, 1500);
	            GivePlayerWeapon(playerid, 29, 600);
	            GivePlayerWeapon(playerid, 31, 200);
         	}
         	if(listitem == 3)
	        {
	            if(PlayerInfo[playerid][pRank]<4) return SendClientMessage(playerid,COLOR_RED,"????? ???????? ?????? ???? 4 ?????");
	            OnWeapon[playerid] = 1;
	            GivePlayerWeapon(playerid, 24, 100);
	            GivePlayerWeapon(playerid, 41, 2000);
	            GivePlayerWeapon(playerid, 29, 1000);
	            GivePlayerWeapon(playerid, 31, 700);
	            GivePlayerWeapon(playerid, 34, 200);
	            GivePlayerWeapon(playerid, 25, 200);
         	}
         	if(listitem == 4)
	        {
	            if(PlayerInfo[playerid][pRank]<4) return SendClientMessage(playerid,COLOR_RED,"????? ???????? ?????? ???? 4 ?????");
	            OnWeapon[playerid] = 1;
	            GivePlayerWeapon(playerid, 24, 100);
	            GivePlayerWeapon(playerid, 41, 2000);
	            GivePlayerWeapon(playerid, 29, 1000);
	            GivePlayerWeapon(playerid, 31, 700);
	            GivePlayerWeapon(playerid, 34, 200);
	            GivePlayerWeapon(playerid, 25, 200);
         	}
         	if(listitem == 5)
	        {
	            if(PlayerInfo[playerid][pRank]<4) return SendClientMessage(playerid,COLOR_RED,"????? ???????? ?????? ???? 4 ?????");
	            OnWeapon[playerid] = 1;
	            GivePlayerWeapon(playerid, 24, 100);
	            GivePlayerWeapon(playerid, 41, 2000);
	            GivePlayerWeapon(playerid, 29, 1000);
	            GivePlayerWeapon(playerid, 31, 700);
	            GivePlayerWeapon(playerid, 34, 200);
	            GivePlayerWeapon(playerid, 25, 200);
         	}
 		}
	}
	
	if(dialogid == 999)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid,1793.2,-1164.7,23.8,3.0);
			}
			if(listitem == 1)
			{
			    DisablePlayerCheckpoint(playerid);
			    SetPlayerCheckpoint(playerid,1547.5,-1675.3,14.1,3.0);
			}
			if(listitem == 2)
			{
			    DisablePlayerCheckpoint(playerid);
                SetPlayerCheckpoint(playerid,1462.5,-1012.6,26.8,3.0);
			}
			if(listitem == 3)
			{
			    DisablePlayerCheckpoint(playerid);
                SetPlayerCheckpoint(playerid,1004.5,-940.1,41.8,3.0);
			}
			if(listitem == 4)
			{
			    DisablePlayerCheckpoint(playerid);
			}
			if(listitem == 5)
			{
			    DisablePlayerCheckpoint(playerid);
			    SetPlayerCheckpoint(playerid,-2029.9,-96.6,35.1,3.0);
			}
			if(listitem == 6)
			{
			    DisablePlayerCheckpoint(playerid);
			    SetPlayerCheckpoint(playerid,-2287.8,-78.9,35.3,3.0);
			}
		}
	}
	
	if(dialogid == 1000)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    SendClientMessage(playerid, COLOR_GRAD1,"*** ?????? *** /rules (???????) /login /stats /buylevel /upgrade");
			}
			if(listitem == 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD2,"*** ???????? *** /pay /charity /time /buy /unrentcar /givekey /switchkey /id /drink /music /showlicenses /fightstyle");
				SendClientMessage(playerid, COLOR_GRAD2,"*** ???????? *** /resetupgrades(100k) /buygun /lock /skill /portable /licenses  /lotto /spawnchange /stopani /clothes");
				SendClientMessage(playerid, COLOR_GRAD2,"*** ???????? *** /report /cancel /accept /eject /usedrugs /contract /fill /fillcar /clear /service /families /inv");
			}
			if(listitem == 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD3,"*** ??? *** (/w)hisper (/o)oc (/s)hout (/c)lose (/l)ocal (/b) (/ad)vertise (/f)amily /me /togooc /tognews /togfam /togwhisper /map /fuel");
			}
			if(listitem == 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD4,"*** ???? *** /balance /withdraw /deposit /wiretransfer");
			}
			if(listitem == 4)
			{
			    if(PlayerInfo[playerid][pJob] == 1) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? *** /find"); }
			    else if(PlayerInfo[playerid][pJob] == 2) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? *** /free"); }
			    else if(PlayerInfo[playerid][pJob] == 3) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? ??????????? *** /sex"); }
			    else if(PlayerInfo[playerid][pJob] == 4) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? ??????????? *** /selldrugs"); }
			    else if(PlayerInfo[playerid][pJob] == 5) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? ???????? ????? *** /dropcar"); }
			    else if(PlayerInfo[playerid][pMember] == 9) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? ????????? *** /paper /papers /live /news [text]"); }
			    else if(PlayerInfo[playerid][pJob] == 7) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? ???????? *** /repair /refill /duty"); }
			    else if(PlayerInfo[playerid][pJob] == 8) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? *** /guard"); }
			    else if(PlayerInfo[playerid][pJob] == 9) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? ????????? *** /materials /sellgun"); }
			    else if(PlayerInfo[playerid][pJob] == 10) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? ???????? ????? *** /sellcar"); }
			    else if(PlayerInfo[playerid][pJob] == 12) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? ??????? *** /fight /boxstats"); }
			    else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10|| PlayerInfo[playerid][pJob] == 14) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? *** /fare"); }
			    else if(PlayerInfo[playerid][pJob] == 15) {
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? *** /papers /bring /deliver"); }
			    else
			    {
			        SendClientMessage(playerid,COLOR_GRAD5," ?? ????? ?? ?????????");
			    }
			}
			if(listitem == 5)
			{
			    if(PlayerInfo[playerid][pMember] == 11||PlayerInfo[playerid][pLeader] == 11){
			    SendClientMessage(playerid,COLOR_GRAD5,"*** ?????? ????????? *** /startlesson /stoplesson /givelicense /takelicense"); }
				if (gTeam[playerid] == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "*** ?????? ??????? *** (/r)adio (/d)epartments (/m)egaphone (/su)spect /mdc /arrest /duty /wanted /cuff /tazer");
					SendClientMessage(playerid, COLOR_GRAD5, "*** ?????? ??????? *** /frisk /take /ticket (/gov)ernment /deliver /camera /ram /penalty");
				}
				if (gTeam[playerid] == 1 || PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "*** ?????? ????? *** (/r)adio (/d)epartments /heal /duty");
				}
				if(IsACop(playerid))
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /lexit /lexit2 /armopen /lsopen /lsopen1 /sfopen1 /sfopen2");
				}
				if(PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /gopen  /lime");
				}
				if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /baopen  /bikers");
				}
				if(PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pMember] == 11)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /op /lica");
				}
				if(PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pMember] == 10)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /topen ");
				}
				if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /ropen  /rif");
				}
				if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /ropen1 /ropen2  /black");
				}
				if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /lcnopen  /orangered");
				}
				if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /copen  /lightblue");
				}
				if(PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pMember] == 16)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /bopen  /magneta");
				}
				if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /vopen  /gold");
				}
				if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /yopen /yopen2 /yopen3  /ya");
				}
				if(PlayerInfo[playerid][pLeader] == 21 || PlayerInfo[playerid][pMember] == 21)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /nopen  /grey");
				}
				if(PlayerInfo[playerid][pLeader] == 22 || PlayerInfo[playerid][pMember] == 22)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /sdopen  /red");
				}
				if(PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2)
				{
				    SendClientMessage(playerid,COLOR_GRAD6," /blue");
				}
			}
			if(listitem == 6)
			{
			    SendClientMessage(playerid, COLOR_GRAD6,"*** ?????? *** /cellphonehelp /househelp /renthelp /businesshelp /leaderhelp /fishhelp /cookhelp /irchelp");
			}
			if(listitem == 7)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
			    	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "*1* ????????? *** /ao /checkweapons /name /check  /mute /kick /warn /ban /goto /cnn /a(dmin)chat");
					}
					if (PlayerInfo[playerid][pAdmin] >= 2)
					{
						SendClientMessage(playerid, COLOR_GRAD2,"*2* ????????? *** /sban /skick /warn /skydive /setteam /bigears /cnn /freeze /unfreeze ");
					}
					if (PlayerInfo[playerid][pAdmin] >= 3)
					{
						SendClientMessage(playerid, COLOR_GRAD3,"*3* ?????????***  /setskin  /crash /noooc  /gotols /jail /setjob");
						SendClientMessage(playerid, COLOR_GRAD4,"*3* ????????? *** /mark /gotomark /gotolv /gotosf /gethere /oldcar /gotocar /getcar");
					}
					if (PlayerInfo[playerid][pAdmin] >= 4)
					{
					    SendClientMessage(playerid, COLOR_GRAD4,"*4* ????????? *** /explode /mole /logout /fuelcars /unbanip");
					    SendClientMessage(playerid, COLOR_GRAD4,"*4* ????????? *** /veh /fixveh /destroycars /forceskin ");
					    }
					if (PlayerInfo[playerid][pAdmin] >= 5)
					{
					    SendClientMessage(playerid, COLOR_GRAD4,"*5* ????????? *** /goto /gethere");
					    SendClientMessage(playerid, COLOR_GRAD4,"*5* ????????? *** /agivelicense ");
					}
					if (PlayerInfo[playerid][pAdmin] >= 1337)
					{
						SendClientMessage(playerid, COLOR_GRAD5,"*** 1337+ *** /weather /weatherall /startlotto /setname /payday");
					}
					if (PlayerInfo[playerid][pAdmin] >= 1338)
					{
						SendClientMessage(playerid, COLOR_GRAD6,"***1338 *** /quitjobpl /makeadmin /makeleader");
					}
				}
				else
				{
                    SendClientMessage(playerid, COLOR_GRAD6," ?? ?? ?????");
				}
			}
			if(listitem == 8)
			{
			    if (PlayerInfo[playerid][pPnumber] > 0)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"*** ??????? *** /call /call 911 /sms (/p)ickup (/h)angup /number");
					SendClientMessage(playerid, COLOR_GRAD4,"*** ?????? ?????? *** /help /househelp /renthelp /businesshelp /leaderhelp /fishhelp /cookhelp /irchelp");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GRAD6," ? ??? ??? ????????, ?????? ??? ? ???????? 24\7");
				}
			}
			if(listitem == 9)
			{
			    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
				SendClientMessage(playerid, COLOR_WHITE,"*** ??????? ???? ***");
				SendClientMessage(playerid, COLOR_GRAD3,"*** ??? *** /enter /exit /open /home /heal /houseupgrade (/hu) /setrentable /tv (off/player)");
				SendClientMessage(playerid, COLOR_GRAD3,"*** ??? *** /carupgrade /carcolor /evictall /towcar /fixcar /modcar /modst /modlr /setrent /evict /housewithdraw");
			}
			if(listitem == 10)
			{
			    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
				SendClientMessage(playerid, COLOR_WHITE,"*** ?????? ?? ?????? ***");
				SendClientMessage(playerid, COLOR_GRAD3,"*** ?????? *** /unrent /enter /exit /lock /home");
			}
			if(listitem == 11)
			{
			    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
				SendClientMessage(playerid, COLOR_WHITE,"***??????? ???????***");
				SendClientMessage(playerid, COLOR_GRAD3,"*** ???????? *** /bizinfo (????) /bizfee /bizname /prodprice /extortion");
				SendClientMessage(playerid, COLOR_GRAD4,"*** ???????? *** /enter /exit /open /sellbiz (??????? ??????) /bizbank /bizwithdraw");
			}
			if(listitem == 12)
			{
			    if (PlayerInfo[playerid][pLeader] >= 1)
			    {
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					SendClientMessage(playerid, COLOR_WHITE,"*** ??????? ?????? ***");
					SendClientMessage(playerid, COLOR_GRAD3,"*** ???????? *** /invite (??????) /uninvite (???????) /giverank (?????????, ????????? ?????) ");
					if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6)
					{
					    SendClientMessage(playerid, COLOR_GRAD3,"*** ?????? *** /allowcreation /deletecreation");
					}
					if(PlayerInfo[playerid][pLeader] == 7)
					{
						SendClientMessage(playerid, COLOR_GRAD3,"*** ?????? *** /settax /givetax ");
					}
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ?? ?? ?????.");
				}
			}
		}
	}

    if(dialogid==334)
	{
		if(response==1)
		{
		    new location = PlayerInfo[playerid][pLocal];
			if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pWeap] == 1)
			    {
				    GivePlayerMoney(playerid,-200);
				    BizzInfo[location-99][bTill] += 200;
					ExtortionBiz(location-99, 200);
					GivePlayerWeapon(playerid,24,10);
				}
				else if(PlayerInfo[playerid][pWeap] == 2)
				{
					GivePlayerMoney(playerid,-200);
					BizzInfo[location-99][bTill] += 200;
					ExtortionBiz(location-99, 200);
					GivePlayerWeapon(playerid,23,10);
				}
				else if(PlayerInfo[playerid][pWeap] == 3)
				{
					GivePlayerMoney(playerid,-200);
					BizzInfo[location-99][bTill] += 200;
					ExtortionBiz(location-99, 200);
					GivePlayerWeapon(playerid,25,10);
				}
				else if(PlayerInfo[playerid][pWeap] == 4)
				{
					GivePlayerMoney(playerid,-200);
					BizzInfo[location-99][bTill] += 200;
					ExtortionBiz(location-99, 200);
					GivePlayerWeapon(playerid,29,10);
				}
				else if(PlayerInfo[playerid][pWeap] == 5)
				{
					GivePlayerMoney(playerid,-200);
					BizzInfo[location-99][bTill] += 200;
					ExtortionBiz(location-99, 200);
					GivePlayerWeapon(playerid,31,10);
				}
				else if(PlayerInfo[playerid][pWeap] == 6)
				{
					GivePlayerMoney(playerid,-200);
					BizzInfo[location-99][bTill] += 200;
					ExtortionBiz(location-99, 200);
					GivePlayerWeapon(playerid,30,10);
				}
				else if(PlayerInfo[playerid][pWeap] == 7)
				{
					GivePlayerMoney(playerid,-200);
					BizzInfo[location-99][bTill] += 200;
					ExtortionBiz(location-99, 200);
					GivePlayerWeapon(playerid,33,10);
				}
			}
			if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pWeap] == 1)
			    {
				    GivePlayerMoney(playerid,-1000);
				    BizzInfo[location-99][bTill] += 1000;
					ExtortionBiz(location-99, 1000);
					GivePlayerWeapon(playerid,24,50);
				}
				else if(PlayerInfo[playerid][pWeap] == 2)
				{
					GivePlayerMoney(playerid,-1000);
					BizzInfo[location-99][bTill] += 1000;
					ExtortionBiz(location-99, 1000);
					GivePlayerWeapon(playerid,23,50);
				}
				else if(PlayerInfo[playerid][pWeap] == 3)
				{
					GivePlayerMoney(playerid,-1000);
					BizzInfo[location-99][bTill] += 1000;
					ExtortionBiz(location-99, 1000);
					GivePlayerWeapon(playerid,25,50);
				}
				else if(PlayerInfo[playerid][pWeap] == 4)
				{
					GivePlayerMoney(playerid,-1000);
					BizzInfo[location-99][bTill] += 1000;
					ExtortionBiz(location-99, 1000);
					GivePlayerWeapon(playerid,29,50);
				}
				else if(PlayerInfo[playerid][pWeap] == 5)
				{
					GivePlayerMoney(playerid,-1000);
					BizzInfo[location-99][bTill] += 1000;
					ExtortionBiz(location-99, 1000);
					GivePlayerWeapon(playerid,31,50);
				}
				else if(PlayerInfo[playerid][pWeap] == 6)
				{
					GivePlayerMoney(playerid,-1000);
					BizzInfo[location-99][bTill] += 1000;
					ExtortionBiz(location-99, 1000);
					GivePlayerWeapon(playerid,30,50);
				}
				else if(PlayerInfo[playerid][pWeap] == 7)
				{
					GivePlayerMoney(playerid,-1000);
					BizzInfo[location-99][bTill] += 1000;
					ExtortionBiz(location-99, 1000);
					GivePlayerWeapon(playerid,33,50);
				}
			}
			if(listitem == 2)
			{
			    if(PlayerInfo[playerid][pWeap] == 1)
			    {
				    GivePlayerMoney(playerid,-2000);
				    BizzInfo[location-99][bTill] += 2000;
					ExtortionBiz(location-99, 2000);
					GivePlayerWeapon(playerid,24,100);
				}
				else if(PlayerInfo[playerid][pWeap] == 2)
				{
					GivePlayerMoney(playerid,-2000);
					BizzInfo[location-99][bTill] += 2000;
					ExtortionBiz(location-99, 2000);
					GivePlayerWeapon(playerid,23,100);
				}
				else if(PlayerInfo[playerid][pWeap] == 3)
				{
					GivePlayerMoney(playerid,-2000);
					BizzInfo[location-99][bTill] += 2000;
					ExtortionBiz(location-99, 2000);
					GivePlayerWeapon(playerid,25,100);
				}
				else if(PlayerInfo[playerid][pWeap] == 4)
				{
					GivePlayerMoney(playerid,-2000);
					BizzInfo[location-99][bTill] += 2000;
					ExtortionBiz(location-99, 2000);
					GivePlayerWeapon(playerid,29,100);
				}
				else if(PlayerInfo[playerid][pWeap] == 5)
				{
					GivePlayerMoney(playerid,-2000);
					BizzInfo[location-99][bTill] += 2000;
					ExtortionBiz(location-99, 2000);
					GivePlayerWeapon(playerid,31,100);
				}
				else if(PlayerInfo[playerid][pWeap] == 6)
				{
					GivePlayerMoney(playerid,-2000);
					BizzInfo[location-99][bTill] += 2000;
					ExtortionBiz(location-99, 2000);
					GivePlayerWeapon(playerid,30,100);
				}
				else if(PlayerInfo[playerid][pWeap] == 7)
				{
					GivePlayerMoney(playerid,-2000);
					BizzInfo[location-99][bTill] += 2000;
					ExtortionBiz(location-99, 2000);
					GivePlayerWeapon(playerid,33,100);
				}
			}
			if(listitem == 3)
			{
			    if(PlayerInfo[playerid][pWeap] == 1)
			    {
				    GivePlayerMoney(playerid,-10000);
				    BizzInfo[location-99][bTill] += 10000;
					ExtortionBiz(location-99, 10000);
					GivePlayerWeapon(playerid,24,500);
				}
				else if(PlayerInfo[playerid][pWeap] == 2)
				{
					GivePlayerMoney(playerid,-10000);
					BizzInfo[location-99][bTill] += 10000;
					ExtortionBiz(location-99, 10000);
					GivePlayerWeapon(playerid,23,500);
				}
				else if(PlayerInfo[playerid][pWeap] == 3)
				{
					GivePlayerMoney(playerid,-10000);
					BizzInfo[location-99][bTill] += 10000;
					ExtortionBiz(location-99, 10000);
					GivePlayerWeapon(playerid,25,500);
				}
				else if(PlayerInfo[playerid][pWeap] == 4)
				{
					GivePlayerMoney(playerid,-10000);
					BizzInfo[location-99][bTill] += 10000;
					ExtortionBiz(location-99, 10000);
					GivePlayerWeapon(playerid,29,500);
				}
				else if(PlayerInfo[playerid][pWeap] == 5)
				{
					GivePlayerMoney(playerid,-10000);
					BizzInfo[location-99][bTill] += 10000;
					ExtortionBiz(location-99, 10000);
					GivePlayerWeapon(playerid,31,500);
				}
				else if(PlayerInfo[playerid][pWeap] == 6)
				{
					GivePlayerMoney(playerid,-10000);
					BizzInfo[location-99][bTill] += 10000;
					ExtortionBiz(location-99, 10000);
					GivePlayerWeapon(playerid,30,500);
				}
				else if(PlayerInfo[playerid][pWeap] == 7)
				{
					GivePlayerMoney(playerid,-10000);
					BizzInfo[location-99][bTill] += 10000;
					ExtortionBiz(location-99, 10000);
					GivePlayerWeapon(playerid,33,500);
				}
			}
		}
		else
		{
		}
	}

	if(dialogid == 333)
	{
	    if(response)
	    {
	        if(listitem == 0)//deagle
	        {
				PlayerInfo[playerid][pWeap] = 1;
				ShowPlayerDialog(playerid, 334,DIALOG_STYLE_LIST, "??????? ?????????","10 ????????  200$\n50 ????????  1000$\n100 ????????  2000$\n500 ????????  10000$", "??", "??????");
         	}
         	if(listitem == 1)//silenced pist
	        {
                PlayerInfo[playerid][pWeap] = 2;
                ShowPlayerDialog(playerid, 334,DIALOG_STYLE_LIST, "??????? ?????????","10 ????????  200$\n50 ????????  1000$\n100 ????????  2000$\n500 ????????  10000$", "??", "??????");
         	}
         	if(listitem == 2)//shotgun
	        {
                PlayerInfo[playerid][pWeap] = 3;
                ShowPlayerDialog(playerid, 334,DIALOG_STYLE_LIST, "??????? ?????????","10 ????????  200$\n50 ????????  1000$\n100 ????????  2000$\n500 ????????  10000$", "??", "??????");
         	}
         	if(listitem == 3)//mp5
	        {
                PlayerInfo[playerid][pWeap] = 4;
                ShowPlayerDialog(playerid, 334,DIALOG_STYLE_LIST, "??????? ?????????","10 ????????  200$\n50 ????????  1000$\n100 ????????  2000$\n500 ????????  10000$", "??", "??????");
         	}
         	if(listitem == 4)//m4
	        {
                PlayerInfo[playerid][pWeap] = 5;
                ShowPlayerDialog(playerid, 334,DIALOG_STYLE_LIST, "??????? ?????????","10 ????????  200$\n50 ????????  1000$\n100 ????????  2000$\n500 ????????  10000$", "??", "??????");
         	}
         	if(listitem == 5)//ak47
	        {
                PlayerInfo[playerid][pWeap] = 6;
                ShowPlayerDialog(playerid, 334,DIALOG_STYLE_LIST, "??????? ?????????","10 ????????  200$\n50 ????????  1000$\n100 ????????  2000$\n500 ????????  10000$", "??", "??????");
         	}
         	if(listitem == 6)//rifle
         	{
                PlayerInfo[playerid][pWeap] = 7;
                ShowPlayerDialog(playerid, 334,DIALOG_STYLE_LIST, "??????? ?????????","10 ????????  200$\n50 ????????  1000$\n100 ????????  2000$\n500 ????????  10000$", "??", "??????");
         	}
         	if(listitem == 7)// KACTET
         	{
                GivePlayerWeapon(playerid,1,1);
                GivePlayerMoney(playerid,-300);
         	}
         	if(listitem == 8)//Kuu
         	{
                GivePlayerWeapon(playerid,7,1);
                GivePlayerMoney(playerid,-300);
         	}
         	if(listitem == 9)//?????
         	{
                GivePlayerWeapon(playerid,14,1);
                GivePlayerMoney(playerid,-300);
         	}
         	if(listitem == 10)//????
         	{
                GivePlayerWeapon(playerid,5,1);
				GivePlayerMoney(playerid,-300);
         	}
         	if(listitem == 11)//???????
         	{
                GivePlayerWeapon(playerid,46,1);
                GivePlayerMoney(playerid,-300);
         	}
         	if(listitem == 12)//???
         	{
                GivePlayerWeapon(playerid,4,1);
                GivePlayerMoney(playerid,-300);
         	}
         	if(listitem == 13)//??????
         	{
                GivePlayerWeapon(playerid,8,1);
                GivePlayerMoney(playerid,-300);
         	}
         	if(listitem == 14)//????????? ??????
         	{
                GivePlayerWeapon(playerid,3,1);
                GivePlayerMoney(playerid,-300);
         	}
         	if(listitem == 15)//??????
         	{
                GivePlayerWeapon(playerid,15,1);
                GivePlayerMoney(playerid,-300);
         	}
         	if(listitem == 16)//?????????? ?????
         	{
                GivePlayerWeapon(playerid,10,1);
                GivePlayerMoney(playerid,-300);
         	}
         	if(listitem == 17)//????? ??????
         	{
                GivePlayerWeapon(playerid,2,1);
                GivePlayerMoney(playerid,-300);
         	}
 		}
	}
	
	if(dialogid==101)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    if(GetPlayerMoney(playerid) > 500)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
				    {
						new skill = 500 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 500 - price;
				        format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
						GivePlayerMoney(playerid,- payout);
						SBizzInfo[9][sbTill] += payout;
						ExtortionSBiz(9, payout);
				    }
				    else
				    {
				        format(string, sizeof(string), "~r~-$%d", 500);
						GameTextForPlayer(playerid, string, 5000, 1);
						GivePlayerMoney(playerid,-500);
						SBizzInfo[9][sbTill] += 500;
						ExtortionSBiz(9, 500);
				    }
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					new randphone = 1000 + random(8999);//minimum 1000  max 9999
					PlayerInfo[playerid][pPnumber] = randphone;
					format(string, sizeof(string), " ?? ?????? ??????, ?????: %d", randphone);
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_GRAD5, "?? ?????? ?????????? ???? ?????, ??????? /stats");
					SendClientMessage(playerid, COLOR_WHITE, "??????: ?? ?????? ?????????? ??????? ?????? ??????? /help");
				}
			}
			if(listitem == 1)
			{
			    if(GetPlayerMoney(playerid) > 7500)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
				    {
						new skill = 7500 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 7500 - price;
						GivePlayerMoney(playerid,- payout);
						SBizzInfo[9][sbTill] += payout;
						ExtortionSBiz(9, payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid,-7500);
						SBizzInfo[9][sbTill] += 7500;
						ExtortionSBiz(9, 7500);
						format(string, sizeof(string), "~r~-$%d", 1000);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					new prize;
					new symb1[32]; new symb2[32]; new symb3[32];
					new randcard1 = random(10);//minimum 1000  max 9999
					new randcard2 = random(10);//minimum 1000  max 9999
					new randcard3 = random(10);//minimum 1000  max 9999
					if(randcard1 >= 5)
					{
						format(symb1, sizeof(symb1), "~b~]");
						randcard1 = 1;
					}
					else if(randcard1 <= 4 && randcard1 >= 2)
					{
						format(symb1, sizeof(symb1), "~g~]");
						randcard1 = 2;
					}
					else if(randcard1 < 2)
					{
						format(symb1, sizeof(symb1), "~y~]");
						randcard1 = 3;
					}
					if(randcard2 >= 5)
					{
						format(symb2, sizeof(symb2), "~b~]");
						randcard2 = 1;
					}
					else if(randcard2 <= 4 && randcard2 >= 2)
					{
						format(symb2, sizeof(symb2), "~g~]");
						randcard2 = 2;
					}
					else if(randcard2 < 2)
					{
						format(symb2, sizeof(symb2), "~y~]");
						randcard2 = 3;
					}
					if(randcard3 >= 5)
					{
						format(symb3, sizeof(symb3), "~b~]");
						randcard3 = 1;
					}
					else if(randcard3 <= 4 && randcard3 >= 2)
					{
						format(symb3, sizeof(symb3), "~g~]");
						randcard3 = 2;
					}
					else if(randcard3 < 2)
					{
						format(symb3, sizeof(symb3), "~y~]");
						randcard3 = 3;
					}
					if(randcard1 == randcard2 && randcard1 == randcard3)
					{
						if(randcard1 > 5)
						{
							prize = 2500;
						}
						if(randcard1 <= 4 && randcard1 >= 2)
						{
							prize = 1500;
						}
						if(randcard1 < 2)
						{
							prize = 500;
						}
						GivePlayerMoney(playerid,prize);
						SBizzInfo[9][sbTill] -= prize;
						ExtortionSBiz(9, prize);
						format(string, sizeof(string), "%s %s %s ~n~~n~~w~~g~$%d",symb1,symb2,symb3, prize);
					}
					else
					{
						format(string, sizeof(string), "%s %s %s ~n~~n~~w~~r~$0",symb1,symb2,symb3);
					}
					GameTextForPlayer(playerid, string, 3000, 3);
				}
			}
			if(listitem == 2)
			{
				if(GetPlayerMoney(playerid) > 5000)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
				    {
						new skill = 5000 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 5000 - price;
						GivePlayerMoney(playerid,- payout);
						SBizzInfo[9][sbTill] += payout;
						ExtortionSBiz(9, payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid,-5000);
						SBizzInfo[9][sbTill] += 5000;
						ExtortionSBiz(9, 5000);
						format(string, sizeof(string), "~r~-$%d", 5000);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	                PlayerInfo[playerid][pPhoneBook] = 1;
					format(string, sizeof(string), " ?? ?????? ?????????? ?????. ?????? ?????? ?????? ????? ???????? ?????? ??????!");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_WHITE, " ??????????? /number <id/name>.");
				}
			}
			if(listitem == 3)
			{
				if(GetPlayerMoney(playerid) > 500)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
				    {
						new skill = 500 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 500 - price;
						GivePlayerMoney(playerid,- payout);
						SBizzInfo[9][sbTill] += payout;
						ExtortionSBiz(9, payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid,-500);
						SBizzInfo[9][sbTill] += 500;
						ExtortionSBiz(9, 500);
						format(string, sizeof(string), "~r~-$%d", 500);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					gDice[playerid] = 1;
					format(string, sizeof(string), "   ?? ?????? ??????.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_WHITE, "??????: /dice ");
				}
			}
			if(listitem == 4)
			{
				if(GetPlayerMoney(playerid) > 5000)
				{
					if(gLastCar[playerid] != 0)
					{
						if(HireCar[playerid] != 299)
						{
							gCarLock[HireCar[playerid]] = 0;
							UnLockCar(HireCar[playerid]);
							HireCar[playerid] = 299;
						}
						if(PlayerInfo[playerid][pTraderPerk] > 0)
				    	{
							new skill = 5000 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 5000 - price;
							GivePlayerMoney(playerid,- payout);
							SBizzInfo[9][sbTill] += payout;
							ExtortionSBiz(9, payout);
							format(string, sizeof(string), "~r~-$%d", payout);
							GameTextForPlayer(playerid, string, 5000, 1);
						}
						else
						{
						    GivePlayerMoney(playerid,-5000);
							SBizzInfo[9][sbTill] += 5000;
							ExtortionSBiz(9, 5000);
							format(string, sizeof(string), "~r~-$%d", 5000);
							GameTextForPlayer(playerid, string, 5000, 1);
						}
						SBizzInfo[9][sbProducts]--;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						HireCar[playerid] = gLastCar[playerid];
						format(string, sizeof(string), " ?? ?????? ????? ??? ?????. ?????? ?? ?????? ??????? ???? ?????????");
						SendClientMessage(playerid, COLOR_GRAD4, string);
						SendClientMessage(playerid, COLOR_WHITE, "??????????? /lock ");
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "   ? ??? ??? ????????????? ????????!");
					}
				}
			}
			if(listitem == 5)
			{
                if(GetPlayerMoney(playerid) > 1000)
				{
					GivePlayerMoney(playerid,-1000);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), " ?? ?????? ???(GPS ?????????) ?????? ?? ?????? ??? ????? ????? ?????? ?????? ? ??????!");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_WHITE, " ??????????? /kpk");
					PlayerInfo[playerid][pKpk] = 1;
				}
			}
			if(listitem == 6)
			{
			    if(GetPlayerMoney(playerid) > 49)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 50 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 50 - price;
						GivePlayerMoney(playerid,- payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid,-50);
						format(string, sizeof(string), "~r~-$%d", 50);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					Condom[playerid] ++;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "Condom Purchased.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
				}
			}
			if(listitem == 7)
			{
			    if(GetPlayerMoney(playerid) > 2500)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 2500 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 2500 - price;
						GivePlayerMoney(playerid, - payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid, - 2500);
						format(string, sizeof(string), "~r~-$%d", 2500);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "CD-Player Purchased.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_WHITE, " ??????: /music");
					PlayerInfo[playerid][pCDPlayer] = 1;
				}
			}
			if(listitem == 8)
			{
			    if(GetPlayerMoney(playerid) > 10)
				{
				    if(Groceries[playerid][pChickens] >= 3)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ????? ???!");
				        return 1;
				    }
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 10 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 10 - price;
						GivePlayerMoney(playerid, - payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid, - 10);
						format(string, sizeof(string), "~r~-$%d", 10);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
				    GivePlayerMoney(playerid, - 10);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "Chicken Purchased.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					format(string, sizeof(string), "~r~-$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
					new rand = random(15);
					Groceries[playerid][pChickens] += 1;
					Groceries[playerid][pChicken] += rand;
				}
			}
			if(listitem == 9)
			{
			    if (GetPlayerMoney(playerid) > 10)
				{
				    if(Groceries[playerid][pHamburgers] >= 3)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ? ??? ??? ????? ???!");
				        return 1;
				    }
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 10 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 10 - price;
						GivePlayerMoney(playerid, - payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid, - 10);
						format(string, sizeof(string), "~r~-$%d", 10);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
				    GivePlayerMoney(playerid, - 10);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "Hamburger Purchased.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					format(string, sizeof(string), "~r~-$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
					new rand = random(15);
					Groceries[playerid][pHamburgers] += 1;
					Groceries[playerid][pHamburger] += rand;
				}
			}
			if(listitem == 10)
			{
			    if (GetPlayerMoney(playerid) > 10)
				{
				    if(Groceries[playerid][pPizzas] >= 3)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ? ??? ????? ???!");
				        return 1;
				    }
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 10 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 10 - price;
						GivePlayerMoney(playerid, - payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid, - 10);
						format(string, sizeof(string), "~r~-$%d", 10);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), " ?? ?????? ???????????? ?????");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					new rand = random(15);
					Groceries[playerid][pPizzas] += 1;
					Groceries[playerid][pPizza] += rand;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "? ??? ?? ??????? ?????.");
			}
		}
		else
		{
		}
	}
	
	if(dialogid==102)
	{
		if(response)
		{
		    if(!IsAtBar(playerid))
	        {
	            SendClientMessage(playerid,COLOR_WHITE," ?? ?? ? ????");
	            return 1;
	        }
	        new Float:health;
			if(listitem == 0)
			{
				GivePlayerMoney(playerid, - 6);
				GameTextForPlayer(playerid, "~r~-6$", 3000, 1);
				PlayerDrunk[playerid] += 1;
				
				if(GetPlayerDrunkLevel(playerid) <= 20000)
				{
				    SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+500);
				}
				ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"???:","???? 6$\n????? 10$\n????? 10$\n???? 2$\n???? 2$\n???????? 10$","??","??????");
				if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
				if(GetPlayerHealth(playerid, health) < 100)
				{
				if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 15; SetPlayerHealth(playerid, health + hp); }
				else { SetPlayerHealth(playerid, health + 15.0); }
				}
			}
			if(listitem == 1)
			{
				GivePlayerMoney(playerid, - 10);
				GameTextForPlayer(playerid, "~r~-10$", 3000, 1);
				PlayerDrunk[playerid] += 2;
				if(GetPlayerHealth(playerid, health) < 100)
				{
				    if(GetPlayerDrunkLevel(playerid) < 20000)
					{
					    SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+1000);
					}
				    ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"???:","???? 6$\n????? 10$\n????? 10$\n???? 2$\n???? 2$\n???????? 10$","??","??????");
				    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 25; SetPlayerHealth(playerid, health + hp); }
					else { SetPlayerHealth(playerid, health + 25.0); }
				}
			}
			if(listitem == 3)
			{
				GivePlayerMoney(playerid, - 10);
				GameTextForPlayer(playerid, "~r~-10$", 3000, 1);
				PlayerDrunk[playerid] += 3;
				if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
				if(GetPlayerHealth(playerid, health) < 100)
				{
				    if(GetPlayerDrunkLevel(playerid) < 20000)
					{
					    SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+1000);
					}
				    ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"???:","???? 6$\n????? 10$\n????? 10$\n???? 2$\n???? 2$\n???????? 10$","??","??????");
				    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 27; SetPlayerHealth(playerid, health + hp); }
					else { SetPlayerHealth(playerid, health + 27.0); }
				}
			}
			if(listitem == 4)
			{
				GivePlayerMoney(playerid, - 2);
				GameTextForPlayer(playerid, "~r~-2$", 3000, 1);
				if(GetPlayerHealth(playerid, health) < 100)
				{
				    ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"???:","???? 6$\n????? 10$\n????? 10$\n???? 2$\n???? 2$\n???????? 10$","??","??????");
				    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
					else { SetPlayerHealth(playerid, health + 5.0); }
				}
			}
			if(listitem == 5)
			{
			    GivePlayerMoney(playerid, - 2);
			    GameTextForPlayer(playerid, "~r~-2$", 3000, 1);
			    ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"???:","???? 6$\n????? 10$\n????? 10$\n???? 2$\n???? 2$\n???????? 10$","??","??????");
				if(GetPlayerHealth(playerid, health) < 100)
				{
				    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
					else { SetPlayerHealth(playerid, health + 5.0); }
				}
			}
			if(listitem == 6)
			{
			    GivePlayerMoney(playerid, - 10);
			    GameTextForPlayer(playerid, "~r~-10$", 3000, 1);
			    SetPlayerSpecialAction(playerid,21);
			}
		}
		else
		{
		}
	}
	if(dialogid == 303)
	{
	    if(response==1)
	    {
	        if(GetPlayerMoney(playerid) < 25)
	        {
	            SendClientMessage(playerid,COLOR_GREY,"? ??? ????????? ????? (25$)");
	            return 1;
	        }
	        new strinn[256],nanam[MAX_PLAYER_NAME],nanam2[MAX_PLAYER_NAME];
	        GetPlayerName(playerid,nanam,sizeof(nanam));
	        GetPlayerName(plplpl[playerid],nanam2,sizeof(nanam2));
	        GivePlayerMoney(playerid,-25);
	        format(strinn,sizeof(strinn),">>>SMS %s(%d), %s",nanam,PlayerInfo[playerid][pPnumber],inputtext);
	        SendClientMessage(plplpl[playerid],0xFDF709AA,strinn);
	        format(strinn,sizeof(strinn),"<<<SMS %s(%d), %s",nanam2,PlayerInfo[plplpl[playerid]][pPnumber],inputtext);
	        SendClientMessage(playerid,0xFAA00CAA,strinn);
	        GameTextForPlayer(playerid, "~r~-25$", 2000, 1);
	        format(strinn, sizeof(strinn), "* %s ???????? ??????", nanam);
			ProxDetector(30.0, playerid, strinn, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    }
	    else
	    {
	    }
	}
	if(dialogid == 335)
	{
	    if(response==1)
	    {
	        if(listitem == 0)//?????? ?????
	        {
	            if(PlayerInfo[playerid][pPhoneBook] == 1)
				{
			        new nanam[MAX_PLAYER_NAME],strinn[256];
			        GetPlayerName(plplpl[playerid],nanam,sizeof(nanam));
			        format(strinn,sizeof(strinn),"????? ?????? %s --> %d",nanam,PlayerInfo[plplpl[playerid]][pPnumber]);
			        SendClientMessage(playerid,COLOR_GREY,strinn);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_GREY,"? ??? ???? ?????????? ?????");
				}
	        }
	        if(listitem == 1)//?????
	        {
	            if(PlayerInfo[playerid][pPhoneBook] == 1)
				{
				    if(PhoneOnline[plplpl[playerid]] > 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "??????? ?????? ????????!");
						return 1;
					}
				    new nanam2[MAX_PLAYER_NAME],strinn[256];
				    GetPlayerName(plplpl[playerid],nanam2,sizeof(nanam2));
				    format(strinn,sizeof(strinn),"??????? ????? sms ??? ?????? %s",nanam2);
                    ShowPlayerDialog(playerid,303,DIALOG_STYLE_INPUT,"SMS",strinn,"?????????","??????");
				}
				else
				{
				    SendClientMessage(playerid,COLOR_GREY,"? ??? ???? ?????????? ?????");
				}
	        }
	        if(listitem == 2)//?????????
	        {
	            if(PlayerInfo[playerid][pPhoneBook] == 1)
				{
				    if(PlayerInfo[playerid][pPnumber] == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "? ??? ??? ????????!");
						return 1;
					}
				    new nanam[MAX_PLAYER_NAME],nanam2[MAX_PLAYER_NAME],strinn[256],giveplayerid;
				    giveplayerid = plplpl[playerid];
				    GetPlayerName(playerid, nanam, sizeof(nanam));
				    GetPlayerName(giveplayerid, nanam2, sizeof(nanam2));
					format(strinn, sizeof(strinn), "* %s ?????? ?? ????????", nanam);
					ProxDetector(30.0, playerid, strinn, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(PhoneOnline[giveplayerid] > 0)
							{
								SendClientMessage(playerid, COLOR_GREY, "   ???? ????? ?? ? ???? !");
								return 1;
							}
							if (Mobile[giveplayerid] == 255)
							{
								format(strinn, sizeof(strinn), " ??? ????????? ?????? ??????? (/pickup) ?????? %s", nanam);
								SendClientMessage(giveplayerid, COLOR_YELLOW, strinn);
								RingTone[giveplayerid] = 10;
								format(strinn, sizeof(strinn), "* %s's ???????? ??????? ???????", nanam2);
								SendClientMessage(playerid, COLOR_WHITE, "*?????????: ??????????? ? ??? ???? ????? ????????, ??????? /h ????? ???????? ??????");
								ProxDetector(30.0, giveplayerid, strinn, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								CellTime[playerid] = 1;
								return 1;
							}
						}
					}
				}
				else
				{
				    SendClientMessage(playerid,COLOR_GREY,"? ??? ???? ?????????? ?????");
				}
	        }
	    }
		else
		{
		}
	}
	
	return 1;
}

public OnPlayerUpdate(playerid)
{
    if(GetPlayerWeapon(playerid) == WEAPON_MINIGUN)
	{
		new string[256];
		new iptipo[50], namezz2[MAX_PLAYER_NAME]; GetPlayerIp(playerid,iptipo,50);
		GetPlayerName(playerid, namezz2, sizeof(namezz2));
	    SendClientMessage(playerid,COLOR_LIGHTRED,"???????? ? ??? ?????????!");
	    format(string,sizeof(string)," %s ??? ?????? ? ??????? ?? ????????????? ????????. IP - %s",namezz2,iptipo);
	    SendClientMessageToAll(COLOR_LIGHTRED, string);
	    ResetPlayerWeapons(playerid);
	    Kick(playerid);
	}
	return 1;
}

public GrooveClose()
{
	MoveObject(vorota[1],2434.4155273438, -1658.9686279297, 15.156204223633, 2.0);
	return 1;
}
public DoorClose()
{
	MoveObject(vorota[2],245.53210449219, 72.665069580078, 1005.1773681641, 2.0);
	return 1;
}
public CopClose()
{
	MoveObject(vorota[3],1590.0573730469, -1637.974609375, 14.743314743042, 2.0);
	return 1;
}
public InstClose()
{
    SetObjectRot(vorota[4],0.000000, 89.325012207031, 271.67565917969);
}
public TaxiClose()
{
	MoveObject(vorota[5],-1771.3582763672, 985.01013183594, 25.74254989624, 2.0);
	return 1;
}
public RifaClose()
{
	MoveObject(vorota[6],-2127.4970703125, -80.352951049805, 37.093704223633, 2.0);
	return 1;
}
public RusClose()
{
	MoveObject(vorota[7],-2655.1635742188, -220.13265991211, 5.9620780944824, 2.0);
	return 1;
}
public RusClose1()
{
	MoveObject(vorota[8],-2805.3542480469, -329.96215820313, 8.8046417236328,2.0);
	return 1;
}
public LcnClose()
{
	MoveObject(vorota[9],-2241.0717773438, 643.40679931641, 51.219596862793,2.0);
	return 1;
}
public CoronosClose()
{
	MoveObject(vorota[10],1811.6849365234, -1889.6431884766, 15.187454223633,2.0);
	return 1;
}
public BallasClose()
{
	MoveObject(vorota[12],949.809387, -1099.472900, 24.754459,2.0);
	MoveObject(vorota[13],949.776978, -1107.248169, 24.756630,2.0);
	return 1;
}
public VagosClose()
{
	MoveObject(vorota[11],2794.314209, -1600.132080, 11.638983,2.0);
	return 1;
}
public YakuzaClose()
{
	MoveObject(vorota[22],660.100464, -1227.394653, 17.702566,2.0);
	return 1;
}
public YakuzaClose2()
{
	MoveObject(vorota[23],664.801147, -1309.616455, 15.234329,2.0);
	return 1;
}
public YakuzaClose3()
{
	MoveObject(vorota[24],786.174866, -1152.311279, 25.380497,2.0);
	return 1;
}
public KolhozClose()
{
	MoveObject(vorota[18],-385.283020, -1409.267700, 26.383427,2.0);
	MoveObject(vorota[19],-377.564758, -1407.747437, 26.270031,2.0);
	return 1;
}
public FbiClose()
{
	MoveObject(vorota[14],-1644.6872558594, 682.34130859375, 9.4969673156738,2.0);
	return 1;
}
public FbiClose1()
{
	MoveObject(vorota[15],-1571.8803710938, 661.48571777344, 8.9608917236328,2.0);
	return 1;
}
public BikerClose()
{
	MoveObject(vorota[16],778.30541992188, -1330.1901855469, 13.725944519043,2.0);
	return 1;
}
public ArmyClose()
{
	MoveObject(vorota[17],-1530.263305,482.800567,9.424772, 2.0);
	return 1;
}

forward Reklama();
public Reklama()
{
	SendClientMessageToAll(COLOR_LIGHTRED,"?? ??????? ????????? ???????????? ????/cleo/????/??/?? ?? ????????? ???? ?????? ???/???");
	SendClientMessageToAll(COLOR_LIGHTRED,"???? ?????? ??????? http://gta-gflife.ucoz.ru/");
	return 1;
}

public CarEnter(playerid,vehicleid)
{
	if(vehicleid == carya[1] || vehicleid == carya[2] || vehicleid == carya[3] || vehicleid == carya[4] || vehicleid == carya[5] || vehicleid == carya[6] || vehicleid == carya[7] || vehicleid == carya[8] || vehicleid == carya[9] || vehicleid == carya[10] || vehicleid == carya[11] || vehicleid == carya[12] || vehicleid == carya[13] || vehicleid == carya[14] || vehicleid == carya[15] || vehicleid == carya[16] || vehicleid == carya[17] || vehicleid == carya[18] || vehicleid == carya[19])
	{
	    if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
	    {
			if(vehicleid == carya[1] || vehicleid == carya[2])
			{
			    if(PlayerInfo[playerid][pRank] >= 9)
			    {
			    }
			    else
			    {
			        SendClientMessage(playerid,COLOR_GREY,"??? ???? ??????? ?????");
			        RemovePlayerFromVehicle(playerid);
			    }
			}
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? Yakuza");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == carv[1] || vehicleid == carv[2] || vehicleid == carv[3] || vehicleid == carv[4] || vehicleid == carv[5] || vehicleid == carv[6])
	{
        if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? Los Santos Vagos Gang");
			RemovePlayerFromVehicle(playerid);
	    }
	}
    if(vehicleid == carbb[1] || vehicleid == carbb[2] || vehicleid == carbb[3] || vehicleid == carbb[4] || vehicleid == carbb[5] || vehicleid == carbb[6] || vehicleid == carbb[7] || vehicleid == carbb[8] || vehicleid == carbb[9] || vehicleid == carbb[10] || vehicleid == carbb[11])
    {
        if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? Flaming Cobra Gang");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == carbb[12] || vehicleid == carbb[13] || vehicleid == carbb[14] || vehicleid == carbb[15] || vehicleid == carbb[16] || vehicleid == carbb[17] || vehicleid == carbb[18] || vehicleid == carbb[19] || vehicleid == carbb[20] || vehicleid == carbb[21] || vehicleid == carbb[22] || vehicleid == carbb[23])
	{
        if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? Flaming Cobra Gang");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	
/*	if(vehicleid == carg[1] || vehicleid == carg[2] || vehicleid == carg[3] || vehicleid == carg[4] || vehicleid == carg[5] || vehicleid == carg[6] || vehicleid == carg[7] || vehicleid == carg[8])
	{
        if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? Grove Street Gang");
			RemovePlayerFromVehicle(playerid);
	    }
	}*/
	if(vehicleid == carlica[1] || vehicleid == carlica[2] || vehicleid == carlica[3] || vehicleid == carlica[4] || vehicleid == carlica[5] || vehicleid == carlica[6] || vehicleid == carlica[7] || vehicleid == carlica[8] || vehicleid == carlica[9])
	{
	    if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11 || TakingLesson[playerid] == 1)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? ??????????");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == carrm[1] || vehicleid == carrm[2] || vehicleid == carrm[3] || vehicleid == carrm[4] || vehicleid == carrm[5])
	{
	    if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? ??????? ?????");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == carrif[1] || vehicleid == carrif[2] || vehicleid == carrif[3] || vehicleid == carrif[4] || vehicleid == carrif[5] || vehicleid == carrif[6] || vehicleid == carrif[7] || vehicleid == carrif[8] || vehicleid == carrif[9] || vehicleid == carrif[10] || vehicleid == carrif[11] || vehicleid == carrif[12] || vehicleid == carrif[13] || vehicleid == carrif[14] || vehicleid == carrif[15] || vehicleid == carrif[16] || vehicleid == carrif[17])
	{
	    if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? The Rifa Gang");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == carel[1] || vehicleid == carel[2] || vehicleid == carel[3] || vehicleid == carel[4] || vehicleid == carel[5] || vehicleid == carel[6] || vehicleid == carel[7] || vehicleid == carel[8] || vehicleid == carel[9] || vehicleid == carel[10] || vehicleid == carel[11])
	{
	    if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? El Coronos Gang");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == carkol[1] || vehicleid == carkol[2] || vehicleid == carkol[3] || vehicleid == carkol[4] || vehicleid == carkol[5] || vehicleid == carkol[6] || vehicleid == carkol[7] || vehicleid == carkol[8] || vehicleid == carkol[9] || vehicleid == carkol[10] || vehicleid == carkol[11] || vehicleid == carkol[12])
	{
	    if(PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? ???????");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == carmer[1] || vehicleid == carmer[2] || vehicleid == carmer[3] || vehicleid == carmer[4] || vehicleid == carmer[5] || vehicleid == carmer[6] || vehicleid == carmer[7] || vehicleid == carmer[8] || vehicleid == carmer[9] || vehicleid == carmer[10] || vehicleid == carmer[11] || vehicleid == carmer[12])
	{
	    if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? ?????");
			RemovePlayerFromVehicle(playerid);
	    }
	}
    if(vehicleid == carlcn[1] || vehicleid == carlcn[2] || vehicleid == carlcn[3] || vehicleid == carlcn[4] || vehicleid == carlcn[5] || vehicleid == carlcn[6] || vehicleid == carlcn[7] || vehicleid == carlcn[8])
	{
	    if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? La Cosa Nostra");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == carg[1] || vehicleid == carg[2] || vehicleid == carg[3] || vehicleid == carg[4] || vehicleid == carg[5] || vehicleid == carg[6] || vehicleid == carg[7] || vehicleid == carg[8] || vehicleid == carg[9] || vehicleid == carg[10] || vehicleid == carg[11] || vehicleid == carg[12] || vehicleid == carg[13] || vehicleid == carg[14])
	{
	    if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? Grove Street");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == carba[1] || vehicleid == carba[2] || vehicleid == carba[3] || vehicleid == carba[4] || vehicleid == carba[5] || vehicleid == carba[6] || vehicleid == carba[7] || vehicleid == carba[8] || vehicleid == carba[9] || vehicleid == carba[10] || vehicleid == carba[11])
	{
	    if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? The Ballas Gang");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == cartaxi[1] || vehicleid == cartaxi[2] || vehicleid == cartaxi[3] || vehicleid == cartaxi[4] || vehicleid == cartaxi[5] || vehicleid == cartaxi[6] || vehicleid == cartaxi[7] || vehicleid == cartaxi[8] || vehicleid == cartaxi[9] || vehicleid == cartaxi[10])
	{
	    if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? ?????");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == carhit[1] || vehicleid == carhit[2] || vehicleid == carhit[3] || vehicleid == carhit[4] || vehicleid == carhit[5] || vehicleid == carhit[6] || vehicleid == carhit[7] || vehicleid == carhit[8] || vehicleid == carhit[9] || vehicleid == carhit[10] || vehicleid == carhit[11] || vehicleid == carhit[12] || vehicleid == carhit[13] || vehicleid == carhit[14] || vehicleid == carhit[15] || vehicleid == carhit[16] || vehicleid == carhit[17] || vehicleid == carhit[18] || vehicleid == carhit[19])
	{
	    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? ????????");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == carmeh[1] || vehicleid == carmeh[2] || vehicleid == carmeh[3] || vehicleid == carmeh[4] || vehicleid == carmeh[5] || vehicleid == carmeh[6] || vehicleid == carmeh[7] || vehicleid == carmeh[8] || vehicleid == carmeh[9] || vehicleid == carmeh[10] || vehicleid == carmeh[11] || vehicleid == carmeh[12] || vehicleid == carmeh[13] || vehicleid == carmeh[14] || vehicleid == carmeh[15] || vehicleid == carmeh[16] || vehicleid == carmeh[17] || vehicleid == carmeh[18] || vehicleid == carmeh[19])
	{
	    if(PlayerInfo[playerid][pJob] == 7)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ????????? ??????????");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	if(vehicleid == carnews[1] || vehicleid == carnews[2] || vehicleid == carnews[3] || vehicleid == carnews[4] || vehicleid == carnews[5] || vehicleid == carnews[6] || vehicleid == carnews[7] || vehicleid == carnews[8])
	{
	    if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
	    {
	    }
	    else
	    {
			SendClientMessage(playerid,COLOR_GREY,"?? ?? ???????? ? ??????????");
			RemovePlayerFromVehicle(playerid);
	    }
	}
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(newkeys == 1024)
	{
	    	new string[256];
		    for(new i = 0; i < sizeof(HouseInfo); i++)
  			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					//printf("Found House :%d",i);
					if(PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0)
					{
						SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						GameTextForPlayer(playerid, "~w~Welcome Home", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hVirtual]);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					//printf("Found House :%d",i);
					if(!IsACop(playerid) && i == 3)
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ??????????? ?????? !");
					    return 1;
					}
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= BizzInfo[i][bEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(BizzInfo[i][bLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
								return 1;
							}
							if(BizzInfo[i][bProducts] == 0)
							{
								GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
								return 1;
							}
							GivePlayerMoney(playerid,-BizzInfo[i][bEntranceCost]);
							format(string, sizeof(string), "~r~-$%d~n~~w~type /exit~n~to get out", BizzInfo[i][bEntranceCost]);
							BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
							ExtortionBiz(i, BizzInfo[i][bEntranceCost]);
							BizzInfo[i][bProducts]--;
							OnPropUpdate();
							GameTextForPlayer(playerid, string, 5000, 3);
						}
						SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
						PlayerInfo[playerid][pLocal] = i+99;
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						format(string, sizeof(string), "%s ???????? $%d, ????? ????? ? ??? %d", dood, BizzInfo[i][bEntranceCost], i);
						printf("%s", string);
						PayLog(string);
						//PlayerInfo[playerid][pLocal] = i;
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= SBizzInfo[i][sbEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(SBizzInfo[i][sbLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
								return 1;
							}
							if(SBizzInfo[i][sbProducts] == 0)
							{
								GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
								return 1;
							}
							if(i == 10)
							{
							    PaintballPlayers ++;
							    PlayerPaintballing[playerid] = 1;
							    new rand = random(sizeof(PaintballSpawns));
								SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
								TogglePlayerControllable(playerid, 0);
							}
							else if(i == 11)
							{
							    PlayerKarting[playerid] = 1;
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, "?? ?????? ?????? parcipitate ? ????? ????????, ??????????? ????.");
							}
							else
							{
							    return 1;
							}
							GivePlayerMoney(playerid,-SBizzInfo[i][sbEntranceCost]);
							gSpentCash[playerid] = GetPlayerMoney(playerid);
							SBizzInfo[i][sbProducts]--;
							SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
							ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
							new dood[MAX_PLAYER_NAME];
							GetPlayerName(playerid, dood, sizeof(dood));
							format(string, sizeof(string), "%s ???????? $%d, ????? ????? ? ??? %d", dood, SBizzInfo[i][sbEntranceCost], i);
							printf("%s", string);
							PayLog(string);
							OnPropUpdate();
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
					}
				}
			}
			if (PlayerToPoint(3.0, playerid,1482.2,-1771.0,18.7))
			{
			    SetPlayerInterior(playerid,3);
				SetPlayerPos(playerid,387.7978,173.8582,1008.3828);
				GameTextForPlayer(playerid, "~w~Welcome to the City Hall", 5000, 1);
				PlayerInfo[playerid][pInt] = 3;
				PlayerInfo[playerid][pLocal] = 241;
			}
			else if (PlayerToPoint(3.0, playerid,1073.0619,-344.5148,73.9922))
			{
			    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
			    {
				    SetPlayerInterior(playerid,2);
					SetPlayerPos(playerid,1205.0947,-10.1685,1000.9219);
					PlayerInfo[playerid][pInt] = 2;
					PlayerInfo[playerid][pLocal] = 242;
				}
			}
			else if (PlayerToPoint(3.0, playerid,2695.6235,-1704.6960,11.8438))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the 8ball Track", 5000, 1);
			    SetPlayerInterior(playerid,7);
				SetPlayerPos(playerid,-1404.5299,-259.0602,1043.6563);
			}
			else if (PlayerToPoint(8.0, playerid,-2111.5686,-443.9720,38.7344))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the Dirt Track", 5000, 1);
			    SetPlayerInterior(playerid,4);
				SetPlayerPos(playerid,-1443.0554,-581.1879,1055.0472);
			}

			else if (PlayerToPoint(8.0, playerid,-2080.3079,-406.0309,38.7344))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the Stunting Track", 5000, 1);
			    SetPlayerInterior(playerid,14);
				SetPlayerPos(playerid,-1464.7732,1557.5533,1052.5313);
			}
			if(PlayerToPoint(3, playerid,2770.6,-1627.9,12.1))
			{
			    SetPlayerPos(playerid,1212.1,-28.5,1000.9);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,8);
			}
			if(PlayerToPoint(3, playerid,2231.3,-1159.8,25.8))
			{
			    SetPlayerPos(playerid,2215.0,-1150.6,1025.7);
			    SetPlayerInterior(playerid,15);
			}
			if(PlayerToPoint(3, playerid,1315.2,-900.2,39.5))
			{
			    SetPlayerPos(playerid,-30.7,-90.6,1003.5);
			    SetPlayerInterior(playerid,18);///
                PlayerInfo[playerid][pEnter] = 3;
			}
			if(PlayerToPoint(3, playerid,1831.5,-1843.3,13.5))
			{
			    SetPlayerPos(playerid,-30.9,-89.6,1003.5);
			    SetPlayerInterior(playerid,18);///
			    PlayerInfo[playerid][pEnter] = 4;
			}
			if(PlayerToPoint(3, playerid,1199.1,-919.8,43.1))
			{
			    SetPlayerPos(playerid,363.4,-74.5,1001.5);
			    SetPlayerInterior(playerid,10);//
			    PlayerInfo[playerid][pEnter] = 1;
			}
			if(PlayerToPoint(3, playerid,813.0,-1616.0,13.5))
			{
			    SetPlayerPos(playerid,363.4,-74.5,1001.5);
			    SetPlayerInterior(playerid,10);//
			    PlayerInfo[playerid][pEnter] = 2;
			}
			if(PlayerToPoint(3, playerid,927.1,-1352.7,13.3))
			{
			    SetPlayerPos(playerid,365.6,-10.7,1001.8);
			    SetPlayerInterior(playerid,9);
			}
			if(PlayerToPoint(3, playerid,1553.6,-1674.8,16.1))
			{
			    SetPlayerPos(playerid,246.7,63.9,1003.6);
			    SetPlayerInterior(playerid,6);
			}
			if(PlayerToPoint(3, playerid,1834.4,-1681.7,13.4))
			{
			    SetPlayerPos(playerid,493.3,-22.7,1000.6);
			    SetPlayerInterior(playerid,17);
			}
			if(PlayerToPoint(3, playerid,1698.1,-1667.1,20.1))
			{
			    SetPlayerPos(playerid,1703.7,-1668.4,20.2);
			    SetPlayerInterior(playerid,18);
			}
			if(PlayerToPoint(3, playerid,725.6,-1440.4,13.5))//news
			{
			    SetPlayerPos(playerid,288.7,167.1,1007.1);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,10);
			}
			if(PlayerToPoint(3, playerid,1752.5,-1911.9,13.5))//coronos
			{
			    SetPlayerPos(playerid,2541.8,-1303.9,1025.0);
			    SetPlayerInterior(playerid,2);
			    SetPlayerVirtualWorld(playerid,11);
			}
			if(PlayerToPoint(3, playerid,1122.7,-2036.9,69.8))//lcn
			{
			    SetPlayerPos(playerid,2523.2,-1285.8,1054.6);
			    SetPlayerInterior(playerid,2);
			    SetPlayerVirtualWorld(playerid,12);
			}
			if(PlayerToPoint(3, playerid,-2719.3,-319.1,7.8))//russian mafia
			{
			    SetPlayerPos(playerid,975.3,-8.6,1001.1);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,13);
			}
			if(PlayerToPoint(3, playerid,-2129.1,-188.3,35.3))//rifa
			{
			    SetPlayerPos(playerid,1212.1,-25.8,1000.9);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,14);
			}
			if(PlayerToPoint(3, playerid,-2026.6,-100.6,35.1))
			{
			    SetPlayerPos(playerid,-2027.5,-105.1,1035.1);
			    SetPlayerInterior(playerid,3);////
			    PlayerInfo[playerid][pEnter] = 5;
			}
			if(PlayerToPoint(3, playerid,-2029.7,-122.4,35.1))
			{
			    SetPlayerPos(playerid,-2029.7,-118.0,1035.1);
			    SetPlayerInterior(playerid,3);////
			    PlayerInfo[playerid][pEnter] = 6;
			}
			if(PlayerToPoint(3, playerid,2421.5,-1221.7,25.3))
			{
			    SetPlayerPos(playerid,1203.8,-12.5,1000.9);
			    SetPlayerInterior(playerid,2);
			}
			if(PlayerToPoint(3, playerid,2795.1,-1619.4,10.9))
			{
			    SetPlayerPos(playerid,2542.1,-1304.1,1025.0);
			    SetPlayerInterior(playerid,2);
			}
		    for(new i = 0; i <  sizeof(HouseInfo); i++)
			{
				//printf("House :%d",i);
				if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]) && HouseInfo[i][hVirtual]==GetPlayerVirtualWorld(playerid))
				{
				    SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
					PlayerInfo[playerid][pLocal] = 255;
					if(HouseInfo[i][hHel] == 1)
					{
						new Float:tempheal;
						GetPlayerHealth(playerid,tempheal);
						if(tempheal < 100.0)
						{
							SetPlayerHealth(playerid,100.0);
						}
					}
				}
			}
			for(new i = 0; i <  sizeof(BizzInfo); i++)
			{
				//printf("Bizz :%d",i);
				if (PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
					PlayerInfo[playerid][pLocal] = 255;
				}
			}
			if(GetPlayerVehicleID(playerid) >= 71 && GetPlayerVehicleID(playerid) <= 77)
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
			}
			else if (PlayerToPoint(3.0, playerid,387.7978,173.8582,1008.3828))/////////////////////////////
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,1482.2,-1771.0,18.7);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if (PlayerToPoint(6.0, playerid,-1404.5299,-259.0602,1043.6563))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,2695.6235,-1704.6960,11.8438);
				SetPlayerVirtualWorld(playerid,0);
			}
			else if (PlayerToPoint(8.0, playerid,-1443.0554,-581.1879,1055.0472))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,-2111.5686,-443.9720,38.7344);
				SetPlayerVirtualWorld(playerid,0);
			}
			else if (PlayerToPoint(8.0, playerid,-1464.7732,1557.5533,1052.5313))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,-2080.3079,-406.0309,38.7344);
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(NoFuel[playerid] == 1)
			{
			    TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				NoFuel[playerid] = 0;
			}
			if(PlayerToPoint(3, playerid,1212.1,-28.5,1000.9) && GetPlayerVirtualWorld(playerid) == 8)
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,2770.6,-1627.9,12.1);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,1203.8,-12.5,1000.9))
			{
			    SetPlayerPos(playerid,2421.5,-1221.7,25.3);
			    SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,0);
			}
			if(PlayerToPoint(3, playerid,2215.0,-1150.6,1025.7))
			{
			    SetPlayerPos(playerid,2231.3,-1159.8,25.8);
			    SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,0);
			}
			if(PlayerToPoint(3, playerid,-30.7,-90.6,1003.5))///
			{
			    if(PlayerInfo[playerid][pEnter] == 3)
			    {
				    SetPlayerPos(playerid,1315.2,-900.2,39.5);
				    SetPlayerInterior(playerid,0);
				    PlayerInfo[playerid][pEnter] = 0;
				}
			}
			if(PlayerToPoint(3, playerid,-30.9,-89.6,1003.5))///
			{
			    if(PlayerInfo[playerid][pEnter] == 4)
			    {
				    SetPlayerPos(playerid,1831.5,-1843.3,13.5);
				    SetPlayerInterior(playerid,0);
				    PlayerInfo[playerid][pEnter] = 0;
				}
			}
			if(PlayerToPoint(3, playerid,363.4,-74.5,1001.5))//
			{
			    if(PlayerInfo[playerid][pEnter] == 1)
			    {
				    SetPlayerPos(playerid,1199.1,-919.8,43.1);
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pEnter] = 0;
				}
			}
			if(PlayerToPoint(3, playerid,363.4,-74.5,1001.5))//
			{
			    if(PlayerInfo[playerid][pEnter] == 2)
			    {
				    SetPlayerPos(playerid,813.0,-1616.0,13.5);
				    SetPlayerInterior(playerid,0);
				    PlayerInfo[playerid][pEnter] = 0;
				}
			}

			if(PlayerToPoint(3, playerid,365.6,-10.7,1001.8))
			{
			    SetPlayerPos(playerid,927.1,-1352.7,13.3);
			    SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,0);
			}
			if(PlayerToPoint(3, playerid,246.7,63.9,1003.6))
			{
			    SetPlayerPos(playerid,1553.6,-1674.8,16.1);
			    SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,0);
			}
			if(PlayerToPoint(3, playerid,493.3,-22.7,1000.6))
			{
			    SetPlayerPos(playerid,1834.4,-1681.7,13.4);
			    SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,0);
			}
			if(PlayerToPoint(3, playerid,1703.7,-1668.4,20.2))
			{
			    SetPlayerPos(playerid,1698.1,-1667.1,20.1);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,-2027.5,-105.1,1035.1))////
			{
			    if(PlayerInfo[playerid][pEnter] == 5)
			    {
				    SetPlayerPos(playerid,-2026.6,-100.6,35.1);
				    SetPlayerInterior(playerid,0);
				    PlayerInfo[playerid][pEnter] = 0;
			    }
			}
			if(PlayerToPoint(3, playerid,-2029.7,-118.0,1035.1))////
			{
			    if(PlayerInfo[playerid][pEnter] == 6)
			    {
				    SetPlayerPos(playerid,-2029.7,-122.4,35.1);
				    SetPlayerInterior(playerid,0);
				    PlayerInfo[playerid][pEnter] = 0;
				}
			}
			if(PlayerToPoint(3,playerid,2495.3,-1690.2,14.7))//grove
			{
			    SetPlayerPos(playerid,2496.0,-1693.7,1014.7);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,1);
			}
			if(PlayerToPoint(3,playerid,691.4,-1276.1,13.5))//Yakuza
			{
			    SetPlayerPos(playerid,964.9,-53.1,1001.1);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,6);
			}
			if(PlayerToPoint(3, playerid,2542.1,-1304.1,1025.0))
			{
			    SetPlayerPos(playerid,2795.1,-1619.4,10.9);
			    SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,0);
			}
			if(PlayerToPoint(3, playerid,940.6,-1085.2,24.2))
			{
			    SetPlayerPos(playerid,1212.0,-28.5,1000.9);
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid,9);
			}
			if(PlayerToPoint(3, playerid,1212.1,-28.5,1000.9) && GetPlayerVirtualWorld(playerid) == 9)//ballas
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,940.6,-1085.2,24.2);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,288.7,167.1,1007.1) && GetPlayerVirtualWorld(playerid) == 10)//news/
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,725.6,-1440.4,13.5);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,2541.8,-1303.9,1025.0) && GetPlayerVirtualWorld(playerid) == 11)//coronos
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,1752.5,-1911.9,13.5);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,2523.2,-1285.8,1054.6) && GetPlayerVirtualWorld(playerid) == 12)//lcn
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,1122.7,-2036.9,69.8);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,975.3,-8.6,1001.1) && GetPlayerVirtualWorld(playerid) == 13)//russian mafia
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,-2719.3,-319.1,7.8);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,1212.1,-25.8,1000.9) && GetPlayerVirtualWorld(playerid) == 14)//rifa
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,-2129.1,-188.3,35.3);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,964.9,-53.1,1001.1) && GetPlayerVirtualWorld(playerid) == 6)//Yakuza
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,691.4,-1276.1,13.5);
			    SetPlayerInterior(playerid,0);
			}
			if(PlayerToPoint(3, playerid,2496.0,-1693.7,1014.7) && GetPlayerVirtualWorld(playerid) == 1)//grove
			{
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,2495.3,-1690.2,14.7);
			    SetPlayerInterior(playerid,0);
			}
	}
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(source==CLICK_SOURCE_SCOREBOARD)
	{
	    new string[256];
	    new nanam[MAX_PLAYER_NAME];
	    plplpl[playerid] = clickedplayerid;
	    GetPlayerName(clickedplayerid,nanam,sizeof(nanam));
	    format(string,sizeof(string),"?? ?????? ?? ?????? %s",nanam);
        ShowPlayerDialog(playerid,335,DIALOG_STYLE_LIST,string,"?????? ????? ????????\n??????? SMS\n?????????","OK","??????");
	}
	return 1;
}

public UnJail(playerid)
{
    PlayerInfo[playerid][pJailed] = 0;
    PlayerInfo[playerid][pJailTime] = 0;
    SetPlayerPos(playerid,246.5,67.5,1003.6);
    SetPlayerInterior(playerid,6);
    SetPlayerFacingAngle(playerid,180.4);
    KillTimer(TimerJail[playerid]);
    SendClientMessage(playerid,COLOR_LIGHTRED,"?? ???? ???????? ?? ??????");
	return 1;
}

stock TurnPlayerFaceToPlayer(playerid, facingtoid)
{
	new Float:angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	new Float:ix, Float:iy, Float:iz;
	GetPlayerPos(facingtoid, x, y, z);
	GetPlayerPos(playerid, ix, iy, iz);
	angle = 180.0-atan2(ix-x,iy-y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
}